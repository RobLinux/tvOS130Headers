/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:50:47 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/Frameworks/Security.framework/XPCServices/TrustedPeersHelper.xpc/TrustedPeersHelper
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TrustedPeersHelper/TrustedPeersHelperProtocol.h>

@interface TrustedPeersHelper.Client : _UKNOWN_SUPERCLASS_ <TrustedPeersHelperProtocol> {

	 endpoint;
	 containerMap;

}
-(void)pingWithReply:(/*^block*/id)arg1 ;
-(void)dumpWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)departByDistrustingSelfWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)distrustPeerIDsWithContainer:(id)arg1 context:(id)arg2 peerIDs:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)trustStatusWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)resetWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)localResetWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)setAllowedMachineIDsWithContainer:(id)arg1 context:(id)arg2 allowedMachineIDs:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)addAllowedMachineIDsWithContainer:(id)arg1 context:(id)arg2 machineIDs:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)removeAllowedMachineIDsWithContainer:(id)arg1 context:(id)arg2 machineIDs:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)fetchEgoEpochWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)prepareWithContainer:(id)arg1 context:(id)arg2 epoch:(unsigned long long)arg3 machineID:(id)arg4 bottleSalt:(id)arg5 bottleID:(id)arg6 modelID:(id)arg7 deviceName:(id)arg8 serialNumber:(id)arg9 osVersion:(id)arg10 policyVersion:(id)arg11 policySecrets:(id)arg12 signingPrivKeyPersistentRef:(id)arg13 encPrivKeyPersistentRef:(id)arg14 reply:(/*^block*/id)arg15 ;
-(void)establishWithContainer:(id)arg1 context:(id)arg2 ckksKeys:(id)arg3 tlkShares:(id)arg4 preapprovedKeys:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)vouchWithContainer:(id)arg1 context:(id)arg2 peerID:(id)arg3 permanentInfo:(id)arg4 permanentInfoSig:(id)arg5 stableInfo:(id)arg6 stableInfoSig:(id)arg7 ckksKeys:(id)arg8 reply:(/*^block*/id)arg9 ;
-(void)vouchWithBottleWithContainer:(id)arg1 context:(id)arg2 bottleID:(id)arg3 entropy:(id)arg4 bottleSalt:(id)arg5 tlkShares:(id)arg6 reply:(/*^block*/id)arg7 ;
-(void)vouchWithRecoveryKeyWithContainer:(id)arg1 context:(id)arg2 recoveryKey:(id)arg3 salt:(id)arg4 tlkShares:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)joinWithContainer:(id)arg1 context:(id)arg2 voucherData:(id)arg3 voucherSig:(id)arg4 ckksKeys:(id)arg5 tlkShares:(id)arg6 preapprovedKeys:(id)arg7 reply:(/*^block*/id)arg8 ;
-(void)preflightPreapprovedJoinWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)attemptPreapprovedJoinWithContainer:(id)arg1 context:(id)arg2 ckksKeys:(id)arg3 tlkShares:(id)arg4 preapprovedKeys:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)updateWithContainer:(id)arg1 context:(id)arg2 deviceName:(id)arg3 serialNumber:(id)arg4 osVersion:(id)arg5 policyVersion:(id)arg6 policySecrets:(id)arg7 reply:(/*^block*/id)arg8 ;
-(void)setPreapprovedKeysWithContainer:(id)arg1 context:(id)arg2 preapprovedKeys:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)updateTLKsWithContainer:(id)arg1 context:(id)arg2 ckksKeys:(id)arg3 tlkShares:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)fetchViableBottlesWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)fetchEscrowContentsWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)fetchPolicyDocumentsWithContainer:(id)arg1 context:(id)arg2 keys:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)fetchPolicyWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)validatePeersWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)fetchTrustStateWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)setRecoveryKeyWithContainer:(id)arg1 context:(id)arg2 recoveryKey:(id)arg3 salt:(id)arg4 ckksKeys:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)reportHealthWithContainer:(id)arg1 context:(id)arg2 stateMachineState:(id)arg3 trustState:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)pushHealthInquiryWithContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)getViewsWithContainer:(id)arg1 context:(id)arg2 inViews:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)requestHealthCheckWithContainer:(id)arg1 context:(id)arg2 requiresEscrowCheck:(BOOL)arg3 reply:(/*^block*/id)arg4 ;
@end


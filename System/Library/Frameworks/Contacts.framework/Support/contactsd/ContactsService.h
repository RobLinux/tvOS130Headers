/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:48:49 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/Frameworks/Contacts.framework/Support/contactsd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <contactsd/CNXPCDataMapperService.h>

@protocol CNScheduler, CNContactsLogger;
@class CNContactStore, CNiOSAddressBookDataMapper, NSXPCConnection, CNContactsEnvironment, CNAccessAuthorization, NSString;

@interface ContactsService : NSObject <CNXPCDataMapperService> {

	CNContactStore* _contactStore;
	CNiOSAddressBookDataMapper* _dataMapper;
	NSXPCConnection* _connection;
	id<CNScheduler> _workQueue;
	id<CNContactsLogger> _logger;
	CNContactsEnvironment* _environment;
	CNAccessAuthorization* _accessAuthorization;

}

@property (nonatomic,readonly) id<CNScheduler> workQueue;                                //@synthesize workQueue=_workQueue - In the implementation block
@property (nonatomic,readonly) id<CNContactsLogger> logger;                              //@synthesize logger=_logger - In the implementation block
@property (nonatomic,readonly) CNContactsEnvironment * environment;                      //@synthesize environment=_environment - In the implementation block
@property (nonatomic,readonly) CNAccessAuthorization * accessAuthorization;              //@synthesize accessAuthorization=_accessAuthorization - In the implementation block
@property (nonatomic,readonly) CNContactStore * contactStore;                            //@synthesize contactStore=_contactStore - In the implementation block
@property (nonatomic,readonly) CNiOSAddressBookDataMapper * dataMapper;                  //@synthesize dataMapper=_dataMapper - In the implementation block
@property (nonatomic,__weak,readonly) NSXPCConnection * connection;                      //@synthesize connection=_connection - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<CNScheduler>)workQueue;
-(NSXPCConnection *)connection;
-(CNContactsEnvironment *)environment;
-(id<CNContactsLogger>)logger;
-(BOOL)shouldNotReportFavoritesError:(id)arg1 ;
-(void)reportFavoritesIssue:(id)arg1 ;
-(void)configureServiceWithOptions:(id)arg1 ;
-(void)identifierWithReply:(/*^block*/id)arg1 ;
-(void)unifiedContactCountWithReply:(/*^block*/id)arg1 ;
-(void)contactCountForFetchRequest:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)sectionListOffsetsForSortOrder:(long long)arg1 reply:(/*^block*/id)arg2 ;
-(void)contactsForFetchRequest:(id)arg1 withMatchInfoReply:(/*^block*/id)arg2 ;
-(void)encodedContactsAndCursorForFetchRequest:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)progressiveContactsForFetchRequest:(id)arg1 progressHandler:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)meContactIdentifiersWithReply:(/*^block*/id)arg1 ;
-(void)executeSaveRequest:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)containersMatchingPredicate:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)serverSearchContainersMatchingPredicate:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)policyForContainerWithIdentifier:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)accountsMatchingPredicate:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)groupsMatchingPredicate:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)subgroupsOfGroupWithIdentifier:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)defaultContainerIdentifierWithReply:(/*^block*/id)arg1 ;
-(void)setDefaultAccountIdentifier:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)setMeContact:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)setMeContact:(id)arg1 forContainer:(id)arg2 withReply:(/*^block*/id)arg3 ;
-(void)setBestMeIfNeededForGivenName:(id)arg1 familyName:(id)arg2 email:(id)arg3 withReply:(/*^block*/id)arg4 ;
-(void)contactWithUserActivityUserInfo:(id)arg1 keysToFetch:(id)arg2 withReply:(/*^block*/id)arg3 ;
-(void)userActivityForContact:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)registerChangeHistoryClientIdentifier:(id)arg1 forContainerIdentifier:(id)arg2 withReply:(/*^block*/id)arg3 ;
-(void)unregisterChangeHistoryClientIdentifier:(id)arg1 forContainerIdentifier:(id)arg2 withReply:(/*^block*/id)arg3 ;
-(void)changeHistoryWithFetchRequest:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)executeChangeHistoryClearRequest:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)changeHistoryTokenWithReply:(/*^block*/id)arg1 ;
-(void)favoritesEntryDictionariesAtPath:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)writeFavoritesPropertyListData:(id)arg1 toPath:(id)arg2 withReply:(/*^block*/id)arg3 ;
-(void)reindexSearchableItemsWithIdentifiers:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)verifyIndexWithReply:(/*^block*/id)arg1 ;
-(void)authorizedKeysForContactKeys:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(CNContactStore *)contactStore;
-(id)initWithDataMapper:(id)arg1 workQueue:(id)arg2 environment:(id)arg3 connection:(id)arg4 accessAuthorization:(id)arg5 ;
-(void)performAsyncWorkWithDataMapper:(/*^block*/id)arg1 ;
-(CNiOSAddressBookDataMapper *)dataMapper;
-(void)performServicingRequestWork:(/*^block*/id)arg1 ;
-(BOOL)clientAllowedToUseSPI:(id*)arg1 ;
-(void)performWorkWithDataMapper:(/*^block*/id)arg1 ;
-(void)performWorkServicingSPI:(/*^block*/id)arg1 authenticationFailureHandler:(/*^block*/id)arg2 ;
-(CNAccessAuthorization *)accessAuthorization;
-(void)performWorkWithContactStore:(/*^block*/id)arg1 ;
-(id)initWithWorkQueue:(id)arg1 connection:(id)arg2 ;
@end


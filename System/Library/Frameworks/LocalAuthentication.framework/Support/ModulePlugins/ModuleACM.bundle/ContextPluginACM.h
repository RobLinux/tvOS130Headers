/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:50:05 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/Frameworks/LocalAuthentication.framework/Support/ModulePlugins/ModuleACM.bundle/ModuleACM
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ModuleACM/ModuleACM-Structs.h>
#import <ModuleBase/ContextPlugin.h>

@interface ContextPluginACM : ContextPlugin {

	BOOL _applicationPasswordWasSet;
	long long _applicationPasswordCounter;
	ACMHandleRef _acmContext;

}

@property (nonatomic,readonly) ACMHandleRef acmContext;              //@synthesize acmContext=_acmContext - In the implementation block
-(id)_operationAsString:(id)arg1 error:(id*)arg2 ;
-(char*)_acmPolicyForPolicy:(long long)arg1 ;
-(BOOL)_isSimpleACLConstraint:(id)arg1 ;
-(id)_decodeOperation:(id)arg1 ;
-(id)_unsatisfiedListForRequirement:(ACMRequirementRef)arg1 ;
-(unsigned)_credentialTypeForEvent:(long long)arg1 ;
-(void)_removeRequestedCredentials:(ACMRequirementRef)arg1 ;
-(void)_verifyACMPolicy:(char*)arg1 acmParameter:(id)arg2 maxGlobalCredentialAge:(unsigned)arg3 retryAllowed:(BOOL)arg4 reply:(/*^block*/id)arg5 ;
-(void)_handleAcmRequirement:(const ACMRequirementRef)arg1 policy:(long long)arg2 constraintData:(id)arg3 operation:(id)arg4 internalInfo:(id)arg5 uiDelegate:(id)arg6 originator:(id)arg7 request:(id)arg8 reply:(/*^block*/id)arg9 ;
-(BOOL)_validatePassword:(long long)arg1 options:(id)arg2 uiDelegate:(id)arg3 originator:(id)arg4 request:(id)arg5 callerName:(id)arg6 callerBundleId:(id)arg7 reply:(/*^block*/id)arg8 ;
-(unsigned)_credentialTypeForRequirementType:(unsigned)arg1 ;
-(void)evaluateACL:(id)arg1 operation:(id)arg2 options:(id)arg3 uiDelegate:(id)arg4 originator:(id)arg5 request:(id)arg6 callerName:(id)arg7 callerBundleId:(id)arg8 reply:(/*^block*/id)arg9 ;
-(void)finishedAuthenticationForPolicy:(long long)arg1 constraintData:(id)arg2 operation:(id)arg3 internalInfo:(id)arg4 uiDelegate:(id)arg5 originator:(id)arg6 request:(id)arg7 availabilityEvents:(id)arg8 result:(id)arg9 error:(id)arg10 reply:(/*^block*/id)arg11 ;
-(void)_evaluateACL:(id)arg1 operation:(id)arg2 options:(id)arg3 uiDelegate:(id)arg4 originator:(id)arg5 request:(id)arg6 callerName:(id)arg7 callerBundleId:(id)arg8 reply:(/*^block*/id)arg9 ;
-(void)_evaluateOperation:(id)arg1 aclRef:(id)arg2 options:(id)arg3 uiDelegate:(id)arg4 originator:(id)arg5 request:(id)arg6 validate:(BOOL)arg7 callerName:(id)arg8 callerBundleId:(id)arg9 reply:(/*^block*/id)arg10 ;
-(id)_acmParamForPolicy:(long long)arg1 userId:(unsigned)arg2 secondPass:(BOOL)arg3 ;
-(id)initWithACMContext:(ACMHandleRef)arg1 contextOwner:(BOOL)arg2 ;
-(void)_validateOperations:(id)arg1 aclRef:(id)arg2 evaluateOperation:(id)arg3 options:(id)arg4 uiDelegate:(id)arg5 originator:(id)arg6 request:(id)arg7 currentResult:(id)arg8 reply:(/*^block*/id)arg9 ;
-(void)_validateOperation:(id)arg1 aclRef:(id)arg2 evaluateOperation:(id)arg3 options:(id)arg4 uiDelegate:(id)arg5 originator:(id)arg6 request:(id)arg7 reply:(/*^block*/id)arg8 ;
-(void)_validateACL:(id)arg1 evaluateOperation:(id)arg2 options:(id)arg3 uiDelegate:(id)arg4 originator:(id)arg5 request:(id)arg6 callerName:(id)arg7 callerBundleId:(id)arg8 reply:(/*^block*/id)arg9 ;
-(id)_fillConstraint:(id)arg1 options:(id)arg2 userId:(id)arg3 error:(id*)arg4 ;
-(unsigned)_requirementTypeForCredentialType:(long long)arg1 ;
-(void)dealloc;
-(void)externalizedContextWithReply:(/*^block*/id)arg1 ;
-(void)authMethodWithReply:(/*^block*/id)arg1 ;
-(ACMHandleRef)acmContext;
-(void)evaluatePolicy:(long long)arg1 options:(id)arg2 uiDelegate:(id)arg3 originator:(id)arg4 request:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)evaluateACL:(id)arg1 operation:(id)arg2 options:(id)arg3 uiDelegate:(id)arg4 originator:(id)arg5 request:(id)arg6 reply:(/*^block*/id)arg7 ;
-(void)isCredentialSet:(long long)arg1 originator:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)setCredential:(id)arg1 type:(long long)arg2 originator:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)checkCredentialSatisfied:(long long)arg1 policy:(long long)arg2 reply:(/*^block*/id)arg3 ;
-(void)resetEvent:(long long)arg1 originator:(id)arg2 reply:(/*^block*/id)arg3 ;
@end


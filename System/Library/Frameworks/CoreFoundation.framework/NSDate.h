/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:48:59 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <CoreFoundation/INJSONSerializable.h>
#import <CoreFoundation/AFSecurityDigestibleChunksProviding.h>
#import <CoreFoundation/CKRecordValue.h>
#import <CoreFoundation/_DKDeduping.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSSecureCoding.h>

@class NSString;

@interface NSDate : NSObject <INJSONSerializable, AFSecurityDigestibleChunksProviding, CKRecordValue, _DKDeduping, NSCopying, NSSecureCoding>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) double timeIntervalSinceReferenceDate; 
+(BOOL)tvs_networkTimeIsApproximatelyCorrect;
+(id)tv_dateWithMillisecondsSince1970:(id)arg1 ;
+(id)_intents_decodeWithJSONDecoder:(id)arg1 codableDescription:(id)arg2 from:(id)arg3 ;
+(id)_geo_calendar;
+(id)geo_dateWithJulianDay:(double)arg1 ;
+(int)daysSince1970;
+(id)dateForDaysSince1970:(int)arg1 ;
+(BOOL)passedEpochDateInterval:(double)arg1 ;
+(id)dateWithNaturalLanguageString:(id)arg1 date:(id)arg2 locale:(id)arg3 ;
+(id)dateWithNaturalLanguageString:(id)arg1 ;
+(id)dateWithNaturalLanguageString:(id)arg1 locale:(id)arg2 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(BOOL)supportsSecureCoding;
+(id)dateWithTimeIntervalSinceReferenceDate:(double)arg1 ;
+(double)timeIntervalSinceReferenceDate;
+(id)distantFuture;
+(id)distantPast;
+(id)now;
+(id)date;
+(id)dateWithTimeIntervalSinceNow:(double)arg1 ;
+(id)dateWithTimeIntervalSince1970:(double)arg1 ;
+(id)dateWithTimeInterval:(double)arg1 sinceDate:(id)arg2 ;
+(id)dateWithDate:(id)arg1 ;
+(id)dateWithString:(id)arg1 ;
-(id)initWithCPLArchiver:(id)arg1 ;
-(id)plistArchiveWithCPLArchiver:(id)arg1 ;
-(id)ml_stringValueForSQL;
-(void)ml_bindToSQLiteStatement:(sqlite3_stmtRef)arg1 atPosition:(int)arg2 ;
-(id)tvs_dateByAddingDays:(long long)arg1 ;
-(BOOL)_isEqualToDateIgnoringTime:(id)arg1 ;
-(id)tvs_dateBySubtractingDays:(long long)arg1 ;
-(id)tvs_dateFlooredToNearestMinute:(int)arg1 ;
-(id)tvs_dateCeiledToNearestMinute:(int)arg1 ;
-(BOOL)tvs_isToday;
-(BOOL)tvs_isTomorrow;
-(BOOL)tvs_isYesterday;
-(id)initWithXPCEncoding:(id)arg1 ;
-(id)copyXPCEncoding;
-(id)_intents_encodeWithJSONEncoder:(id)arg1 codableDescription:(id)arg2 ;
-(id)_intents_readableDescriptionForLanguage:(id)arg1 withMetadata:(id)arg2 ;
-(id)_axRecursivelyPropertyListCoercedRepresentationWithError:(id*)arg1 ;
-(id)_axRecursivelyReconstitutedRepresentationFromPropertyListWithError:(id*)arg1 ;
-(void)af_enumerateDigestibleChunksWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(BOOL)_af_isSameDayAsDate:(id)arg1 ;
-(BOOL)af_isToday;
-(BOOL)af_isTomorrow;
-(double)geo_julianDay;
-(double)geo_hoursAndMinutes;
-(id)ak_serverFriendlyString;
-(id)cd_dateWithCeilingForAlignment:(double)arg1 withOffset:(double)arg2 inTimeZone:(id)arg3 ;
-(id)cd_dateWithFloorForAlignment:(double)arg1 ;
-(id)cd_dateWithCeilingForAlignment:(double)arg1 ;
-(id)cd_dateWithFloorForAlignment:(double)arg1 withOffset:(double)arg2 inTimeZone:(id)arg3 ;
-(id)dk_localtimeString;
-(double)timeSinceMidnight:(id*)arg1 ;
-(id)floorDateWithTotalSlotsInDay:(int)arg1 ;
-(int)slotFromMidnightWithTotalSlotsInDay:(int)arg1 ;
-(id)dedup;
-(BOOL)isAfterDate:(id)arg1 ;
-(BOOL)isBeforeDate:(id)arg1 ;
-(id)bs_dateByAddingDays:(long long)arg1 ;
-(int)daysSince1970;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(Class)classForCoder;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(id)dateWithCalendarFormat:(id)arg1 timeZone:(id)arg2 ;
-(id)descriptionWithCalendarFormat:(id)arg1 timeZone:(id)arg2 locale:(id)arg3 ;
-(long long)_web_compareDay:(id)arg1 ;
-(id)_web_RFC1123DateString;
-(BOOL)_web_isToday;
-(double)bucketToRoundingFactor:(unsigned)arg1 ;
-(double)timeIntervalSince1970WithBucket:(unsigned)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSString *)description;
-(BOOL)isNSDate__;
-(double)timeIntervalSince1970;
-(long long)compare:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)descriptionWithLocale:(id)arg1 ;
-(unsigned long long)_cfTypeID;
-(double)timeIntervalSinceReferenceDate;
-(id)initWithTimeIntervalSinceReferenceDate:(double)arg1 ;
-(BOOL)isEqualToDate:(id)arg1 ;
-(id)initWithString:(id)arg1 ;
-(id)dateByAddingTimeInterval:(double)arg1 ;
-(id)earlierDate:(id)arg1 ;
-(id)laterDate:(id)arg1 ;
-(double)timeIntervalSinceDate:(id)arg1 ;
-(double)timeIntervalSinceNow;
-(id)initWithTimeIntervalSinceNow:(double)arg1 ;
-(id)initWithTimeIntervalSince1970:(double)arg1 ;
-(id)initWithTimeInterval:(double)arg1 sinceDate:(id)arg2 ;
-(id)initWithDate:(id)arg1 ;
-(id)addTimeInterval:(double)arg1 ;
-(BOOL)isInToday;
-(BOOL)isInTomorrow;
-(BOOL)isInYesterday;
-(BOOL)isInSameDayAsDate:(id)arg1 ;
-(BOOL)isEqual:(id)arg1 toUnitGranularity:(unsigned long long)arg2 ;
-(long long)compare:(id)arg1 toUnitGranularity:(unsigned long long)arg2 ;
@end


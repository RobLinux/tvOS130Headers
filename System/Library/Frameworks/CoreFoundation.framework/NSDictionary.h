/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:48:59 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <CoreFoundation/PHFetchDictionaryAccessing.h>
#import <CoreFoundation/AMSHashable.h>
#import <CoreFoundation/INJSONSerializable.h>
#import <CoreFoundation/AFSecurityDigestibleChunksProviding.h>
#import <CoreFoundation/CUByteCodable.h>
#import <CoreFoundation/NSFetchRequestResult.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSMutableCopying.h>
#import <CoreFoundation/NSSecureCoding.h>
#import <CoreFoundation/NSFastEnumeration.h>

@class NSString, NSDate;

@interface NSDictionary : NSObject <PHFetchDictionaryAccessing, AMSHashable, INJSONSerializable, AFSecurityDigestibleChunksProviding, CUByteCodable, NSFetchRequestResult, NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSString * hashedDescription; 
@property (nonatomic,readonly) NSDate * ams_expirationDate; 
@property (getter=ams_isExpired,nonatomic,readonly) BOOL ams_expired; 
@property (nonatomic,copy,readonly) NSString * if_JSONStringRepresentation; 
@property (nonatomic,readonly) unsigned short fileHFSFlags; 
@property (nonatomic,readonly) unsigned long long fileHFSResourceForkSize; 
@property (readonly) unsigned long long count; 
+(id)safari_dictionaryWithPropertyListData:(id)arg1 ;
+(id)safari_dictionaryWithPropertyListData:(id)arg1 options:(unsigned long long)arg2 ;
+(id)safari_dictionaryWithObjectsInFastEnumerationCollection:(id)arg1 groupedUsingBlock:(/*^block*/id)arg2 ;
+(id)ams_dictionaryWithEncryptionResult:(SCD_Struct_NS18)arg1 ;
+(id)_intents_decodeWithJSONDecoder:(id)arg1 codableDescription:(id)arg2 from:(id)arg3 ;
+(id)_geo_dictionaryFromXPCObject:(id)arg1 ;
+(id)_geo_replyDictionaryForError:(id)arg1 key:(id)arg2 ;
+(id)createWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)dictionaryWithPlistData:(id)arg1 ;
+(id)dictionaryWithKeyArray:(id)arg1 defaultValue:(id)arg2 ;
+(id)ak_dictionaryWithResponseData:(id)arg1 ;
+(id)ak_jsonDictionaryWithResponseData:(id)arg1 ;
+(id)MCShortenedDictionary:(id)arg1 ;
+(id)MCShortenedArray:(id)arg1 ;
+(id)MCShortenedData:(id)arg1 ;
+(id)MCShortenedObject:(id)arg1 ;
+(id)MCDictionaryFromFile:(id)arg1 ;
+(id)dmlmr_buildVersionKey;
+(id)dmlmr_successKey;
+(id)dmlmr_lastMigrationResultsWithSuccess:(BOOL)arg1 buildVersion:(id)arg2 ;
+(id)MI_dictionaryWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
+(BOOL)supportsSecureCoding;
+(id)newWithContentsOf:(id)arg1 immutable:(BOOL)arg2 ;
+(id)newWithContentsOf:(id)arg1 immutable:(BOOL)arg2 error:(id*)arg3 ;
+(id)dictionaryWithContentsOfFile:(id)arg1 ;
+(id)dictionaryWithContentsOfURL:(id)arg1 ;
+(id)dictionaryWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)sharedKeySetForKeys:(id)arg1 ;
+(BOOL)supportsSecureCoding;
+(id)dictionaryWithObjects:(id)arg1 forKeys:(id)arg2 ;
+(id)dictionary;
+(id)dictionaryWithObject:(id)arg1 forKey:(id)arg2 ;
+(id)dictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
+(id)dictionaryWithObjectsAndKeys:(id)arg1 ;
+(id)newDictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
+(id)dictionaryWithDictionary:(id)arg1 copyItems:(BOOL)arg2 ;
+(id)dictionaryWithDictionary:(id)arg1 ;
-(id)safari_dateForKey:(id)arg1 ;
-(id)safari_stringForKey:(id)arg1 ;
-(id)safari_numberForKey:(id)arg1 ;
-(id)safari_arrayForKey:(id)arg1 ;
-(id)safari_dictionaryForKey:(id)arg1 ;
-(BOOL)safari_boolForKey:(id)arg1 ;
-(id)safari_mapAndFilterKeysAndObjectsUsingBlock:(/*^block*/id)arg1 ;
-(id)safari_dataForKey:(id)arg1 ;
-(id)_safari_sortedTupleArray;
-(id)safari_stringForKey:(id)arg1 returningNilIfEmpty:(BOOL)arg2 ;
-(id)safari_arrayContainingObjectsOfClass:(Class)arg1 forKey:(id)arg2 ;
-(id)safari_URLForKey:(id)arg1 ;
-(id)safari_UUIDForKey:(id)arg1 ;
-(id)safari_setForKey:(id)arg1 ;
-(id)safari_userActivityForKey:(id)arg1 ;
-(id)safari_mapTableForKey:(id)arg1 ;
-(id)safari_diffWithDictionary:(id)arg1 ;
-(id)_pl_prettyDescriptionWithIndent:(long long)arg1 ;
-(id)_uniquedDictionary:(Class)arg1 ;
-(id)uniquedDictionary;
-(id)mutableUniquedDictionary;
-(id)initWithCPLArchiver:(id)arg1 ;
-(id)plistArchiveWithCPLArchiver:(id)arg1 ;
-(id)MSMutableDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MSDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MSMutableDeepCopy;
-(id)MSDeepCopy;
-(BOOL)MSASIsGlobalResetSync;
-(id)MSASAlbumResetSyncAlbumGUID;
-(BOOL)MSASIsLocalChange;
-(id)MSASEventIsDueToAlbumDeletionAlbumGUID;
-(id)MSASEventIsDueToAssetCollectionDeletionAssetCollectionGUID;
-(BOOL)MSASIsNotInteresting;
-(BOOL)MSASIsErrorRecovery;
-(id)pbs_xpcSafeDeepCopy;
-(id)ic_dictionaryValueForKey:(id)arg1 ;
-(id)ic_numberValueForKey:(id)arg1 ;
-(int)ic_intValueForKey:(id)arg1 ;
-(id)ic_stringValueForKey:(id)arg1 ;
-(long long)ic_int64ValueForKey:(id)arg1 ;
-(id)ic_arrayValueForKey:(id)arg1 ;
-(BOOL)ic_boolValueForKey:(id)arg1 ;
-(unsigned)ic_uintValueForKey:(id)arg1 ;
-(id)ic_dataValueForKey:(id)arg1 ;
-(id)objectForKey:(id)arg1 matching:(Class)arg2 ;
-(id)_lookupValueForKey:(id)arg1 expectedClass:(Class)arg2 ;
-(id)tvs_dictionaryForKey:(id)arg1 ;
-(BOOL)tvs_boolForKey:(id)arg1 defaultValue:(BOOL)arg2 ;
-(id)tvs_arrayForKey:(id)arg1 ;
-(id)tvs_stringForKey:(id)arg1 ;
-(id)tvs_numberForKey:(id)arg1 ;
-(id)tvs_URLForKey:(id)arg1 ;
-(id)tvs_dateForKey:(id)arg1 ;
-(id)tvs_dateFromMillisecondsSince1970ForKey:(id)arg1 ;
-(id)tvs_dataForKey:(id)arg1 ;
-(long long)tvs_appleTimingAppHeaderValue;
-(id)tvs_dictionaryWithEntriesPassingTest:(/*^block*/id)arg1 ;
-(BOOL)_boolForKey:(id)arg1 ;
-(id)_ui_attributesForDictionaryContainingUIStringDrawingKeys;
-(BOOL)_ui_dictionaryContainsUIStringDrawingKeys;
-(id)_web_messageText;
-(int)_web_messageLineNumber;
-(id)_web_messageSourceURL;
-(int)_web_messageType;
-(NSString *)hashedDescription;
-(id)ams_firstObjectPassingTest:(/*^block*/id)arg1 ;
-(id)ams_filterUsingTest:(/*^block*/id)arg1 ;
-(id)ams_mapWithTransform:(/*^block*/id)arg1 ;
-(id)ams_objectForKey:(id)arg1 defaultValue:(id)arg2 ;
-(id)ams_objectForCaseInsensitiveKey:(id)arg1 ;
-(id)ams_arrayUsingTransform:(/*^block*/id)arg1 ;
-(id)ams_dictionaryByAddingEntriesFromDictionary:(id)arg1 ;
-(id)ams_firstKeyObjectPassingTest:(/*^block*/id)arg1 ;
-(id)ams_componentsJoinedByString:(id)arg1 ;
-(id)ams_firstKeyPassingTest:(/*^block*/id)arg1 ;
-(NSDate *)ams_expirationDate;
-(BOOL)ams_isExpired;
-(SCD_Struct_NS18)ams_encryptionResult;
-(id)aa_dictionaryByAddingEntriesFromDictionary:(id)arg1 ;
-(BOOL)getLinkState:(BOOL*)arg1 physicalAddress:(unsigned long long*)arg2 ;
-(id)_webkit_objectForMIMEType:(id)arg1 ;
-(id)_webkit_stringForKey:(id)arg1 ;
-(BOOL)_webkit_boolForKey:(id)arg1 ;
-(id)_webkit_arrayForKey:(id)arg1 ;
-(id)_webkit_numberForKey:(id)arg1 ;
-(id)_IS_objectOfClass:(Class)arg1 forKey:(id)arg2 ;
-(id)_IS_stringForKey:(id)arg1 ;
-(id)_IS_numberForKey:(id)arg1 ;
-(id)_IS_arrayForKey:(id)arg1 ;
-(id)_IS_dictionaryForKey:(id)arg1 ;
-(void)_cn_each:(/*^block*/id)arg1 ;
-(id)_cn_map:(/*^block*/id)arg1 ;
-(id)_cn_filter:(/*^block*/id)arg1 ;
-(id)_cn_keysAndValues;
-(id)_cn_mapKeys:(/*^block*/id)arg1 ;
-(id)_cn_mapValues:(/*^block*/id)arg1 ;
-(id)_cn_diff:(id)arg1 ;
-(id)_intents_encodeWithJSONEncoder:(id)arg1 codableDescription:(id)arg2 ;
-(id)descriptionAtIndent:(unsigned long long)arg1 ;
-(id)_intents_indexingRepresentation;
-(id)axssDecodeObjectOfClass:(Class)arg1 forKey:(id)arg2 ;
-(BOOL)axssDecodeBoolForKey:(id)arg1 ;
-(id)axssDecodeArrayOfClass:(Class)arg1 forKey:(id)arg2 ;
-(id)_axRecursivelyPropertyListCoercedRepresentationWithError:(id*)arg1 ;
-(id)_axRecursivelyReconstitutedRepresentationFromPropertyListWithError:(id*)arg1 ;
-(void)af_enumerateDigestibleChunksWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)_placeOrCurrentLocation:(BOOL*)arg1 ;
-(id)_geo_errorForKey:(id)arg1 ;
-(id)_geo_newXPCObject;
-(id)dictionaryChanging:(id)arg1 to:(id)arg2 ;
-(id)if_compactMap:(/*^block*/id)arg1 ;
-(NSString *)if_JSONStringRepresentation;
-(id)if_dictionaryWithNonEmptyValues;
-(id)if_dictionaryByAddingEntriesFromDictionary:(id)arg1 ;
-(id)CKDescriptionPropertiesWithPublic:(BOOL)arg1 private:(BOOL)arg2 shouldExpand:(BOOL)arg3 ;
-(id)CKFirstUrlForKeys:(id)arg1 ;
-(void)CKAssignToContainerWithID:(id)arg1 ;
-(id)_sa_mappedDictionaryWithBlock:(/*^block*/id)arg1 ;
-(BOOL)MR_isEqualToNowPlayingInfo:(id)arg1 ;
-(id)un_nonEmptyCopy;
-(id)un_safeCastObjectForKey:(id)arg1 class:(Class)arg2 ;
-(id)encodedDataAndReturnError:(id*)arg1 ;
-(const char*)encodedBytesAndReturnLength:(unsigned long long*)arg1 error:(id*)arg2 ;
-(BOOL)__imIsMutable;
-(id)__imDeepCopy;
-(id)keysOfChangedEntriesComparedTo:(id)arg1 ;
-(id)plistData;
-(id)dictionaryFromChanges:(id)arg1 ;
-(id)__imDictionaryByFilteringWithBlock:(/*^block*/id)arg1 ;
-(id)_dictionaryForKey:(id)arg1 ;
-(id)_arrayForKey:(id)arg1 ;
-(id)_numberForKey:(id)arg1 ;
-(id)_stringForKey:(id)arg1 ;
-(id)_dataForKey:(id)arg1 ;
-(unsigned short)fileHFSFlags;
-(unsigned long long)fileHFSResourceForkSize;
-(id)exMRL_dataForKey:(id)arg1 ;
-(id)exMRL_arrayForKey:(id)arg1 ;
-(id)exMRL_stringForKey:(id)arg1 ;
-(id)exMRL_numberForKey:(id)arg1 ;
-(BOOL)exMRL_boolForKey:(id)arg1 keyPresent:(BOOL*)arg2 ;
-(BOOL)exMRL_boolForKey:(id)arg1 ;
-(id)exMRL_dictionaryForKey:(id)arg1 ;
-(id)exMRL_setForKey:(id)arg1 ;
-(id)objectForCaseInsensitiveKey:(id)arg1 ;
-(id)ak_redactedCopy;
-(id)_ak_truncatedTokensCopy;
-(id)ak_mapObjects:(/*^block*/id)arg1 ;
-(id)ak_mapObjectsNullable:(/*^block*/id)arg1 ;
-(id)ak_urlQueryString;
-(id)ak_toJSONString;
-(id)invertedDictionary;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(KeyValueArray*)CA_copyRenderKeyValueArray;
-(BOOL)matchesUID:(id)arg1 ;
-(BOOL)bw_containsBuiltInMicAsAnInput;
-(id)bw_dataSourceDictionaryForDesiredMicOrientation:(unsigned)arg1 ;
-(unsigned)bw_optimalMicPolarPattern;
-(id)MCMutableDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MCDeepCopyWithZone:(NSZone*)arg1 ;
-(BOOL)MCWriteToBinaryFile:(id)arg1 atomically:(BOOL)arg2 ;
-(id)MCMutableDeepCopy;
-(id)MCDeepCopy;
-(id)MCRetainRequiredObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 missingDataCode:(long long)arg4 missingDataErrorString:(id)arg5 invalidDataCode:(long long)arg6 invalidDataErrorString:(id)arg7 outError:(id*)arg8 ;
-(id)MCRetainOptionalObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 invalidDataCode:(long long)arg4 invalidDataErrorString:(id)arg5 outError:(id*)arg6 ;
-(id)MCRetainRequiredNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 missingDataCode:(long long)arg3 missingDataErrorString:(id)arg4 invalidDataCode:(long long)arg5 invalidDataErrorString:(id)arg6 outError:(id*)arg7 ;
-(id)MCRetainOptionalNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 invalidDataCode:(long long)arg3 invalidDataErrorString:(id)arg4 outError:(id*)arg5 ;
-(id)MCShortenedPlistDescription;
-(unsigned long long)_LS_integerForKey:(id)arg1 ;
-(id)ls_parseQueryForIdentifiers:(id)arg1 ;
-(unsigned long long)ls_hashQuery;
-(id)ls_insertExtensionPointVersion:(id)arg1 ;
-(id)ls_resolvePlugInKitInfoPlistWithDictionary:(id)arg1 ;
-(BOOL)_LS_BoolForKey:(id)arg1 ;
-(void)bs_each:(/*^block*/id)arg1 ;
-(id)bs_safeObjectForKey:(id)arg1 ofType:(Class)arg2 ;
-(id)bs_filter:(/*^block*/id)arg1 ;
-(BOOL)bs_boolForKey:(id)arg1 ;
-(id)bs_safeNumberForKey:(id)arg1 ;
-(id)bs_safeStringForKey:(id)arg1 ;
-(id)bs_safeURLForKey:(id)arg1 ;
-(id)bs_safeArrayForKey:(id)arg1 ;
-(id)bs_safeDictionaryForKey:(id)arg1 ;
-(id)bs_dictionaryByAddingEntriesFromDictionary:(id)arg1 ;
-(id)dmlmr_success;
-(id)dmlmr_buildVersion;
-(id)ac_mapValues:(/*^block*/id)arg1 ;
-(id)ac_mapValuesNullable:(/*^block*/id)arg1 ;
-(BOOL)MI_writeToURL:(id)arg1 format:(unsigned long long)arg2 options:(unsigned long long)arg3 error:(id*)arg4 ;
-(id)ax_deepMutableCopy;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(Class)classForCoder;
-(id)initWithContentsOfFile:(id)arg1 ;
-(id)initWithContentsOfURL:(id)arg1 ;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(unsigned long long)fileSize;
-(id)valueForKey:(id)arg1 ;
-(BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2 ;
-(id)initWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
-(id)_stringToWrite;
-(BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2 ;
-(BOOL)writeToURL:(id)arg1 error:(id*)arg2 ;
-(id)descriptionInStringsFileFormat;
-(id)valueForKeyPath:(id)arg1 ;
-(id)fileModificationDate;
-(id)fileType;
-(unsigned long long)filePosixPermissions;
-(id)fileOwnerAccountName;
-(unsigned long long)fileOwnerAccountNumber;
-(id)fileGroupOwnerAccountName;
-(unsigned long long)fileGroupOwnerAccountNumber;
-(long long)fileSystemNumber;
-(unsigned long long)fileSystemFileNumber;
-(BOOL)fileExtensionHidden;
-(unsigned)fileHFSCreatorCode;
-(unsigned)fileHFSTypeCode;
-(BOOL)fileIsImmutable;
-(BOOL)fileIsAppendOnly;
-(id)fileCreationDate;
-(id)fileOwnerAccountID;
-(id)fileGroupOwnerAccountID;
-(id)_web_numberForKey:(id)arg1 ;
-(int)_web_intForKey:(id)arg1 ;
-(id)_web_stringForKey:(id)arg1 ;
-(id)_web_objectForMIMEType:(id)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(NSString *)description;
-(unsigned long long)count;
-(id)objectEnumerator;
-(void)getObjects:(id*)arg1 ;
-(id)allKeys;
-(unsigned long long)countByEnumeratingWithState:(SCD_Struct_NS13*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3 ;
-(id)_cfMutableCopy;
-(unsigned long long)countForKey:(id)arg1 ;
-(BOOL)containsKey:(id)arg1 ;
-(id)objectForKey:(id)arg1 ;
-(BOOL)__getValue:(id*)arg1 forKey:(id)arg2 ;
-(unsigned long long)countForObject:(id)arg1 ;
-(BOOL)containsObject:(id)arg1 ;
-(void)getObjects:(id*)arg1 andKeys:(id*)arg2 ;
-(void)__apply:(/*function pointer*/void*)arg1 context:(void*)arg2 ;
-(void)enumerateKeysAndObjectsWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(BOOL)isEqualToDictionary:(id)arg1 ;
-(id)keyEnumerator;
-(void)getObjects:(id*)arg1 andKeys:(id*)arg2 count:(unsigned long long)arg3 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)descriptionWithLocale:(id)arg1 ;
-(unsigned long long)_cfTypeID;
-(id)initWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
-(id)allValues;
-(id)keyOfEntryWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)keysOfEntriesWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)objectForKeyedSubscript:(id)arg1 ;
-(id)allObjects;
-(id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2 ;
-(id)keysSortedByValueWithOptions:(unsigned long long)arg1 usingComparator:(/*^block*/id)arg2 ;
-(id)initWithDictionary:(id)arg1 copyItems:(BOOL)arg2 ;
-(id)initWithObjects:(id)arg1 forKeys:(id)arg2 ;
-(BOOL)isNSDictionary__;
-(id)allKeysForObject:(id)arg1 ;
-(void)enumerateKeysAndObjectsUsingBlock:(/*^block*/id)arg1 ;
-(void)getKeys:(id*)arg1 ;
-(id)invertedDictionary;
-(id)keyOfEntryPassingTest:(/*^block*/id)arg1 ;
-(id)keysOfEntriesPassingTest:(/*^block*/id)arg1 ;
-(id)keysSortedByValueUsingComparator:(/*^block*/id)arg1 ;
-(id)keysSortedByValueUsingSelector:(SEL)arg1 ;
-(id)objectsForKeys:(id)arg1 notFoundMarker:(id)arg2 ;
-(id)initWithDictionary:(id)arg1 ;
-(id)initWithObject:(id)arg1 forKey:(id)arg2 ;
-(id)initWithObjectsAndKeys:(id)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:50:21 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/XPCServices/RemotePlayerService.xpc/RemotePlayerService
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <RemotePlayerService/MPCPlaybackEngineEventObserving.h>
#import <RemotePlayerService/MPRemotePlayerServiceProtocol.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSObject, NSString, NSMutableDictionary, NSMapTable, BKSApplicationStateMonitor, BKSProcessAssertion, NSMutableSet;

@interface MPRemotePlayerService : NSObject <MPCPlaybackEngineEventObserving, MPRemotePlayerServiceProtocol> {

	BOOL _supportsBackgroundAudio;
	BOOL _connectionInvalidated;
	int _pid;
	NSObject*<OS_dispatch_queue> _accessQueue;
	NSObject*<OS_dispatch_source> _assertionInvalidationTimer;
	NSString* _bundleID;
	NSMutableDictionary* _playbackEngines;
	NSMapTable* _playbackEngineStateMap;
	BKSApplicationStateMonitor* _stateMonitor;
	BKSProcessAssertion* _processAssertion;
	NSMutableSet* _playerIDsWantingAssertions;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> accessQueue;                            //@synthesize accessQueue=_accessQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> assertionInvalidationTimer;              //@synthesize assertionInvalidationTimer=_assertionInvalidationTimer - In the implementation block
@property (nonatomic,copy) NSString * bundleID;                                                     //@synthesize bundleID=_bundleID - In the implementation block
@property (assign,nonatomic) int pid;                                                               //@synthesize pid=_pid - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * playbackEngines;                                 //@synthesize playbackEngines=_playbackEngines - In the implementation block
@property (nonatomic,retain) NSMapTable * playbackEngineStateMap;                                   //@synthesize playbackEngineStateMap=_playbackEngineStateMap - In the implementation block
@property (nonatomic,retain) BKSApplicationStateMonitor * stateMonitor;                             //@synthesize stateMonitor=_stateMonitor - In the implementation block
@property (nonatomic,retain) BKSProcessAssertion * processAssertion;                                //@synthesize processAssertion=_processAssertion - In the implementation block
@property (nonatomic,retain) NSMutableSet * playerIDsWantingAssertions;                             //@synthesize playerIDsWantingAssertions=_playerIDsWantingAssertions - In the implementation block
@property (assign,nonatomic) BOOL supportsBackgroundAudio;                                          //@synthesize supportsBackgroundAudio=_supportsBackgroundAudio - In the implementation block
@property (assign,nonatomic) BOOL connectionInvalidated;                                            //@synthesize connectionInvalidated=_connectionInvalidated - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(NSString *)bundleID;
-(void)setBundleID:(NSString *)arg1 ;
-(int)pid;
-(void)setPid:(int)arg1 ;
-(id)initWithPID:(int)arg1 ;
-(NSObject*<OS_dispatch_queue>)accessQueue;
-(BOOL)connectionInvalidated;
-(BKSProcessAssertion *)processAssertion;
-(void)setProcessAssertion:(BKSProcessAssertion *)arg1 ;
-(void)engine:(id)arg1 didChangeToState:(unsigned long long)arg2 ;
-(void)getPlayerPathForPlayerID:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)startPlayerForPlayerID:(id)arg1 ;
-(void)becomeActiveForPlayerID:(id)arg1 ;
-(void)setWantsReverseProcessAssertion:(BOOL)arg1 forPlayerID:(id)arg2 ;
-(BKSApplicationStateMonitor *)stateMonitor;
-(void)setStateMonitor:(BKSApplicationStateMonitor *)arg1 ;
-(void)_takeProcessAssertion;
-(BOOL)supportsBackgroundAudio;
-(void)setSupportsBackgroundAudio:(BOOL)arg1 ;
-(NSMutableDictionary *)playbackEngines;
-(void)_performRequestFromResponse:(/*^block*/id)arg1 forPlaybackEngines:(id)arg2 withReason:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_updateProcessAssertion;
-(id)_playbackEngineForPlayerID:(id)arg1 ;
-(void)_cancelAssertionInvalidationTimerWithReason:(id)arg1 ;
-(void)_invalidateProcessAssertionWithReason:(id)arg1 ;
-(BOOL)_shouldPreventSuspensionForBackgroundPlayback;
-(void)_startAssertionInvalidationTimerWithEventHandler:(/*^block*/id)arg1 ;
-(void)setConnectionInvalidated:(BOOL)arg1 ;
-(NSObject*<OS_dispatch_source>)assertionInvalidationTimer;
-(void)setAssertionInvalidationTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)setPlaybackEngines:(NSMutableDictionary *)arg1 ;
-(NSMapTable *)playbackEngineStateMap;
-(void)setPlaybackEngineStateMap:(NSMapTable *)arg1 ;
-(NSMutableSet *)playerIDsWantingAssertions;
-(void)setPlayerIDsWantingAssertions:(NSMutableSet *)arg1 ;
@end


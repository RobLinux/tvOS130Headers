/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:46:38 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKScreenCameraController.h>
#import <VectorKit/VKGesturingCameraController.h>

@class VKMapModel, VKMapCanvas, VKTimedAnimation, NSString;

@interface VKMapCameraController : VKScreenCameraController <VKGesturingCameraController> {

	VKMapModel* _mapModel;
	VKMapCanvas* _mapCanvas;
	VKTimedAnimation* _horizontalOffsetAnimation;
	double _minDistanceToGroundAlongForwardVector;
	double _maxDistanceToGroundAlongForwardVector;
	double _finalYaw;
	double _finalPitch;

}

@property (nonatomic,retain) VKMapModel * mapModel;                 //@synthesize mapModel=_mapModel - In the implementation block
@property (assign,nonatomic) VKMapCanvas * mapCanvas;               //@synthesize mapCanvas=_mapCanvas - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(long long)tileSize;
-(double)pitch;
-(double)yaw;
-(double)heading;
-(double)altitude;
-(id)viewportInfo;
-(CGSize)centerCoordinate;
-(BOOL)allowDatelineWraparound;
-(void)setAllowDatelineWraparound:(BOOL)arg1 ;
-(float)currentNormalizedZoomLevel;
-(double)currentZoomLevel;
-(BOOL)canRotate;
-(void)setGesturing:(BOOL)arg1 ;
-(double)zoomLevelAdjustmentForTileSize:(long long)arg1 ;
-(BOOL)canEnter3DMode;
-(void)setCenterCoordinate:(CGSize)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 animationStyle:(long long)arg6 timingCurve:(/*^block*/id)arg7 completion:(/*^block*/id)arg8 ;
-(id)initWithMapDataAccess:(MapDataAccess*)arg1 animationRunner:(AnimationRunner*)arg2 runLoopController:(RunLoopController*)arg3 cameraDelegate:(id)arg4 ;
-(void)setMapModel:(VKMapModel *)arg1 ;
-(void)setMapCanvas:(VKMapCanvas *)arg1 ;
-(void)setYaw:(double)arg1 animated:(BOOL)arg2 ;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(/*^block*/id)arg5 ;
-(double)durationToAnimateToMapRegion:(id)arg1 ;
-(void)enter3DMode;
-(void)exit3DMode;
-(BOOL)isPitched;
-(BOOL)isFullyPitched;
-(void)panWithOffset:(CGPoint)arg1 relativeToScreenPoint:(CGPoint)arg2 animated:(BOOL)arg3 duration:(double)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)startTrackingAnnotation:(id)arg1 trackHeading:(BOOL)arg2 animated:(BOOL)arg3 ;
-(BOOL)restoreViewportFromInfo:(id)arg1 ;
-(void)setCenterCoordinateDistanceRange:(CGSize)arg1 duration:(double)arg2 timingFunction:(/*^block*/id)arg3 ;
-(void)setRegionRestriction:(id)arg1 duration:(double)arg2 timingFunction:(/*^block*/id)arg3 ;
-(void)zoomToLevel:(double)arg1 withFocusPoint:(CGPoint)arg2 ;
-(void)zoom:(double)arg1 withFocusPoint:(CGPoint)arg2 completionHandler:(/*^block*/id)arg3 ;
-(double)presentationYaw;
-(VKMapCanvas *)mapCanvas;
-(void)updateCameraToPositionOrientationLimits;
-(void)canvasDidLayout;
-(double)minimumZoomLevel;
-(double)maximumZoomLevel;
-(double)topDownMinimumZoomLevel;
-(double)distanceFromCenterCoordinate;
-(void)updateCameraZBounds;
-(float)currentDisplayZoomLevel;
-(void)rotateToPitch:(double)arg1 withPoint:(const Matrix<double, 3, 1>*)arg2 preserveAltitude:(BOOL)arg3 animated:(BOOL)arg4 exaggerate:(BOOL)arg5 ;
-(void)tapZoom:(CGPoint)arg1 levels:(double)arg2 completionHandler:(/*^block*/id)arg3 ;
-(float)currentMaximumNormalizedZoomLevel;
-(float)currentMinimumNormalizedZoomLevel;
-(void)zoom:(double)arg1 withPoint:(Matrix<double, 3, 1>)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)zoomToLevel:(double)arg1 withPoint:(Matrix<double, 3, 1>)arg2 ;
-(BOOL)snapMapIfNecessary:(BOOL)arg1 ;
-(Matrix<double, 3, 1>)positionClampedToCameraRestriction:(Matrix<double, 3, 1>)arg1 ;
-(void)clampZoomLevelIfNecessary;
-(float)minimumPitchForNormalizedZoomLevel:(float)arg1 ;
-(float)currentStyleZoomLevel;
-(void)rotateToYaw:(double)arg1 withPoint:(const Matrix<double, 3, 1>*)arg2 animated:(BOOL)arg3 ;
-(float)maxPitchForNormalizedZoomLevel:(float)arg1 ;
-(float)idealPitchForNormalizedZoomLevel:(float)arg1 ;
-(BOOL)canEnter3DModeNoUpdate;
-(float)maximumNormalizedZoomLevel;
-(float)minimumNormalizedZoomLevel;
-(CGSize)_mercatorCenterCoordinateForMapRegion:(id)arg1 ;
-(void)_animateToPosition:(Matrix<double, 3, 1>)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 timingCurve:(/*^block*/id)arg5 completion:(/*^block*/id)arg6 ;
-(void)_animateToPosition:(Matrix<double, 3, 1>)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 timingCurve:(/*^block*/id)arg5 forceDestination:(BOOL)arg6 completion:(/*^block*/id)arg7 ;
-(void)clampPitch:(double*)arg1 yaw:(double*)arg2 atTargetPositionZ:(double)arg3 ;
-(void)_jumpToCenterPoint:(Matrix<double, 3, 1>)arg1 pitchRadians:(double)arg2 yawRadians:(double)arg3 ;
-(void)setCenterCoordinate:(CGSize)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 animationStyle:(long long)arg6 timingCurve:(/*^block*/id)arg7 forceDestination:(BOOL)arg8 completion:(/*^block*/id)arg9 ;
-(void)animateRegionWithDuration:(double)arg1 timingFunction:(/*^block*/id)arg2 stepHandler:(/*^block*/id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(float)currentTopDownMinimumNormalizedZoomLevel;
-(float)normalizedZoomLevelAdjustmentForTileSize:(long long)arg1 ;
-(void)setCenterCoordinate3D:(SCD_Struct_VK52)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 animationStyle:(long long)arg6 timingCurve:(/*^block*/id)arg7 completion:(/*^block*/id)arg8 ;
-(VKMapModel *)mapModel;
@end


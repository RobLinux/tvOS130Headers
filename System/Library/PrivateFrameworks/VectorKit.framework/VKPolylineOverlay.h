/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:46:39 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKRouteOverlay.h>
#import <VectorKit/GEOComposedRouteObserver.h>

@protocol VKPolylineOverlayRouteRibbonObserver;
@class GEOComposedRoute, VKRouteLine, GEOComposedRouteTraffic, NSString, GEOMapRegion;

@interface VKPolylineOverlay : NSObject <VKRouteOverlay, GEOComposedRouteObserver> {

	CFSetRef _observers;
	GEOComposedRoute* _composedRoute;
	BOOL _isReadyForSnapping;
	VKRouteLine* _routeRibbon;
	id<VKPolylineOverlayRouteRibbonObserver> _routeRibbonObserver;
	double _trafficTimeStamp;
	unique_ptr<md::TrafficSegmentsAlongRoute, std::__1::default_delete<md::TrafficSegmentsAlongRoute> >* _trafficSegments;
	BOOL _selected;
	BOOL _hasFocus;
	BOOL _showTraffic;
	GEOComposedRouteTraffic* _traffic;

}

@property (nonatomic,readonly) double trafficTimeStamp;                                                 //@synthesize trafficTimeStamp=_trafficTimeStamp - In the implementation block
@property (assign,nonatomic) VKRouteLine * routeRibbon;                                                 //@synthesize routeRibbon=_routeRibbon - In the implementation block
@property (assign,nonatomic) id<VKPolylineOverlayRouteRibbonObserver> routeRibbonObserver;              //@synthesize routeRibbonObserver=_routeRibbonObserver - In the implementation block
@property (nonatomic,readonly) BOOL containsTransit; 
@property (nonatomic,readonly) GEOComposedRoute * composedRoute;                                        //@synthesize composedRoute=_composedRoute - In the implementation block
@property (nonatomic,readonly) GEOComposedRouteTraffic * traffic;                                       //@synthesize traffic=_traffic - In the implementation block
@property (assign,nonatomic) BOOL selected;                                                             //@synthesize selected=_selected - In the implementation block
@property (assign,nonatomic) BOOL hasFocus;                                                             //@synthesize hasFocus=_hasFocus - In the implementation block
@property (assign,nonatomic) BOOL showTraffic;                                                          //@synthesize showTraffic=_showTraffic - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) CGSize coordinate; 
@property (nonatomic,readonly) GEOMapRegion * boundingMapRegion; 
-(void)dealloc;
-(void)removeObserver:(id)arg1 ;
-(void)addObserver:(id)arg1 ;
-(CGSize)coordinate;
-(void)setSelected:(BOOL)arg1 ;
-(BOOL)selected;
-(BOOL)hasFocus;
-(GEOMapRegion *)boundingMapRegion;
-(void)composedRoute:(id)arg1 selectedSections:(id)arg2 deselectedSections:(id)arg3 ;
-(void)composedRouteUpdatedSnappedPaths:(id)arg1 ;
-(void)composedRoute:(id)arg1 appliedTransitRouteUpdates:(id)arg2 ;
-(void)composedRoute:(id)arg1 changedSelectedRideInClusteredLeg:(id)arg2 fromIndex:(unsigned long long)arg3 toIndex:(unsigned long long)arg4 ;
-(void)clearSnappedPathsForObserver:(id)arg1 ;
-(GEOComposedRoute *)composedRoute;
-(BOOL)showTraffic;
-(void)setShowTraffic:(BOOL)arg1 ;
-(GEOComposedRouteTraffic *)traffic;
-(VKRouteLine *)routeRibbon;
-(void)setRouteRibbon:(VKRouteLine *)arg1 ;
-(DebugTreeNode*)createDebugNode;
-(BOOL)containsTransit;
-(void)setHasFocus:(BOOL)arg1 ;
-(id)getPathsForRenderRegion:(id)arg1 shouldSnapToRoads:(BOOL)arg2 verifySnapping:(BOOL)arg3 observer:(id)arg4 ;
-(double)trafficTimeStamp;
-(void)updateTraffic:(id)arg1 ;
-(void)_setNeedsLayout;
-(id)initWithComposedRoute:(id)arg1 traffic:(id)arg2 ;
-(NSRange)sectionRangeForBounds:(Box<double, 2>)arg1 ;
-(BOOL)isSnappingForSceneTiles;
-(id<VKPolylineOverlayRouteRibbonObserver>)routeRibbonObserver;
-(void)setRouteRibbonObserver:(id<VKPolylineOverlayRouteRibbonObserver>)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:46:39 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol VKRouteMatchedAnnotationPresentation, VKGlobeLineContainerDelegate;
#import <VectorKit/VectorKit-Structs.h>
@class VKPolylineOverlay;

@interface VKGlobeLineContainer : NSObject {

	id<VKRouteMatchedAnnotationPresentation> _routeLineSplitAnnotation;
	id<VKGlobeLineContainerDelegate> _delegate;
	set<id<VKRouteOverlay>, std::__1::less<id<VKRouteOverlay> >, std::__1::allocator<id<VKRouteOverlay> > >* _overlays;
	set<id<VKRouteOverlay>, std::__1::less<id<VKRouteOverlay> >, std::__1::allocator<id<VKRouteOverlay> > >* _persistentOverlays;
	set<id<VKRouteOverlay>, std::__1::less<id<VKRouteOverlay> >, std::__1::allocator<id<VKRouteOverlay> > >* _nonPersistentOverlays;
	RouteRenderLayer* _routeRenderLayer;
	map<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData>, std::__1::less<VKPolylineOverlay *>, std::__1::allocator<std::__1::pair<VKPolylineOverlay *const, std::__1::weak_ptr<altitude::RouteLineData> > > >* _polylinesToRoutes;
	VKPolylineOverlay* _selectedPolyline;
	VKGlobeRouteSplit* _routeSplit;

}

@property (nonatomic,retain) id<VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation; 
@property (assign,nonatomic) id<VKGlobeLineContainerDelegate> delegate;                                      //@synthesize delegate=_delegate - In the implementation block
-(void)dealloc;
-(id<VKGlobeLineContainerDelegate>)delegate;
-(void)setDelegate:(id<VKGlobeLineContainerDelegate>)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)update;
-(void)addLine:(id)arg1 ;
-(const set<id<VKRouteOverlay>, std::__1::less<id<VKRouteOverlay> >, std::__1::allocator<id<VKRouteOverlay> > >*)overlays;
-(void)setRouteLineSplitAnnotation:(id<VKRouteMatchedAnnotationPresentation>)arg1 ;
-(id)initWithRouteRenderLayer:(RouteRenderLayer*)arg1 ;
-(void)addPersistentOverlay:(id)arg1 ;
-(void)addNonPersistentOverlay:(id)arg1 ;
-(void)removePersistentOverlay:(id)arg1 ;
-(void)removeNonPersistentOverlay:(id)arg1 ;
-(float)halfWidthForLine:(id)arg1 styleZ:(float)arg2 ;
-(const set<id<VKRouteOverlay>, std::__1::less<id<VKRouteOverlay> >, std::__1::allocator<id<VKRouteOverlay> > >*)persistentOverlays;
-(BOOL)hasPersistentOverlay:(id*)arg1 ;
-(BOOL)hasNonPersistentOverlay:(id*)arg1 ;
-(const set<id<VKRouteOverlay>, std::__1::less<id<VKRouteOverlay> >, std::__1::allocator<id<VKRouteOverlay> > >*)nonPersistentOverlays;
-(void)clearLineSelection;
-(void)setSelected:(id)arg1 selected:(BOOL)arg2 ;
-(void)_addOverlay:(id)arg1 ;
-(void)removeLine:(id)arg1 ;
-(void)_removeOverlay:(id)arg1 ;
-(void)_recreateLinesIfNeeded;
-(void)_updateRouteSplit;
-(id<VKRouteMatchedAnnotationPresentation>)routeLineSplitAnnotation;
@end


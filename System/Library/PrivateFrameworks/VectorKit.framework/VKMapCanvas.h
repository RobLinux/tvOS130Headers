/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:46:38 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKScreenCanvas.h>
#import <VectorKit/VKMapModelDelegate.h>
#import <VectorKit/VKInteractiveMap.h>

@protocol VKInteractiveMapDelegate;
@class NSArray, VKMapModel, VKTimedAnimation, NSString;

@interface VKMapCanvas : VKScreenCanvas <VKMapModelDelegate, VKInteractiveMap> {

	VKMapModel* _map;
	CGSize _lastCanvasSize;
	optional<float> _lastValidCanvasSizeZoomLevel;
	VKTimedAnimation* _horizontalOffsetAnimation;
	double _canonicalSkyHeight;
	shared_ptr<md::OverlayContainer>* _overlayContainer;
	BOOL _trafficEnabled;
	id<VKInteractiveMapDelegate> _delegate;

}

@property (assign,nonatomic) id<VKInteractiveMapDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL trafficEnabled;                                //@synthesize trafficEnabled=_trafficEnabled - In the implementation block
@property (nonatomic,readonly) VKMapModel * map;                                 //@synthesize map=_map - In the implementation block
@property (assign,nonatomic) double canonicalSkyHeight;                          //@synthesize canonicalSkyHeight=_canonicalSkyHeight - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSArray * overlays; 
@property (nonatomic,readonly) NSArray * visibleTileSets; 
+(BOOL)supportsMapType:(int)arg1 scale:(int)arg2 ;
-(void)dealloc;
-(id<VKInteractiveMapDelegate>)delegate;
-(void)setDelegate:(id<VKInteractiveMapDelegate>)arg1 ;
-(VKMapModel *)map;
-(long long)tileSize;
-(void)setContentsScale:(double)arg1 ;
-(void)setMapType:(int)arg1 ;
-(NSArray *)visibleTileSets;
-(id)detailedDescription;
-(BOOL)trafficEnabled;
-(void)setTrafficEnabled:(BOOL)arg1 ;
-(/*^block*/id)annotationRectTest;
-(/*^block*/id)annotationCoordinateTest;
-(shared_ptr<md::FeatureMarker>*)featureMarkerAtScreenPoint:(CGPoint)arg1 ;
-(void)updateCameraForFrameResize;
-(id)attributionsForCurrentRegion;
-(void)reloadStylesheet;
-(void)clearScene;
-(void)debugHighlightObjectAtPoint:(CGPoint)arg1 highlightTarget:(unsigned char)arg2 ;
-(void)setCanonicalSkyHeight:(double)arg1 ;
-(id)initWithMapEngine:(MapEngine*)arg1 inBackground:(BOOL)arg2 ;
-(void)setMapType:(int)arg1 animated:(BOOL)arg2 ;
-(NSArray *)overlays;
-(void)removeOverlay:(id)arg1 ;
-(void)addOverlay:(id)arg1 ;
-(void)transferStateFromCanvas:(id)arg1 ;
-(void)requestStylesheetMapDisplayStyle:(DisplayStyle)arg1 animated:(BOOL)arg2 ;
-(id)consoleString:(BOOL)arg1 ;
-(CGSize)convertPointToCoordinate:(CGPoint)arg1 ;
-(CGSize)convertPointToMapPoint:(CGPoint)arg1 ;
-(CGPoint)convertMapPointToPoint:(CGSize)arg1 ;
-(CGPoint)convertCoordinateToPoint:(CGSize)arg1 ;
-(CGPoint)convertCoordinateToCameraModelPoint:(CGSize)arg1 ;
-(void)transitionToTracking:(BOOL)arg1 mapMode:(long long)arg2 startLocation:(CGSize)arg3 startCourse:(double)arg4 cameraController:(id)arg5 pounceCompletionHandler:(/*^block*/id)arg6 ;
-(BOOL)shouldHideOffscreenSelectedAnnotation;
-(void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2 ;
-(void)insertOverlay:(id)arg1 belowOverlay:(id)arg2 ;
-(void)updateWithTimestamp:(double)arg1 ;
-(BOOL)isPointValidForGesturing:(CGPoint)arg1 ;
-(void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4 ;
-(void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3 ;
-(id)navigationPuck;
-(void)populateDebugNode:(DebugTreeNode*)arg1 withOptions:(const bitset<4>Ref)arg2 ;
-(void)_updateViewTransform;
-(optional<float>)_zoomLevelForCanvasSize:(CGSize)arg1 ;
-(void)updateOverlays;
-(void)setNavCameraIsDetached:(BOOL)arg1 ;
-(float)currentRoadSignOffset;
-(void)mapModelDidReloadStylesheet:(id)arg1 ;
-(void)mapModel:(id)arg1 selectedLabelMarkerWillDisappear:(const shared_ptr<md::LabelMarker>Ref)arg2 ;
-(void)mapModel:(id)arg1 labelMarkerDidChangeState:(const shared_ptr<md::LabelMarker>Ref)arg2 ;
-(void)mapModelLabelsDidLayout:(id)arg1 ;
-(void)mapModelDidUpdateMinMaxZoomLevel:(id)arg1 ;
-(double)canonicalSkyHeight;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:44:49 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/SharedWebCredentials.framework/Support/swcutil
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> > {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> >;

typedef struct _compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::hash<SWCDownloadPriority>, true> > {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::hash<SWCDownloadPriority>, true> >;

typedef struct _compressed_pair<float, std::__1::__unordered_map_equal<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::equal_to<SWCDownloadPriority>, true> > {
	float __value_;
} compressed_pair<float, std::__1::__unordered_map_equal<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::equal_to<SWCDownloadPriority>, true> >;

typedef struct _hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> __next_;
} hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *>;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> > > {
	hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> __value_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> > >;

typedef struct _bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> > {
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> > __data_;
} bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> >;

typedef struct _compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> > > {
	__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> __value_;
	bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> > __value_;
} compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> > >;

typedef struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> > > {
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> > > __ptr_;
} unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> > >;

typedef struct _hash_table<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::__unordered_map_hasher<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::hash<SWCDownloadPriority>, true>, std::__1::__unordered_map_equal<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::equal_to<SWCDownloadPriority>, true>, std::__1::allocator<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *> > > {
	unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *> *> > > __bucket_list_;
	compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, void *> > > __p1_;
	compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::hash<SWCDownloadPriority>, true> > __p2_;
	compressed_pair<float, std::__1::__unordered_map_equal<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::equal_to<SWCDownloadPriority>, true> > __p3_;
} hash_table<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::__unordered_map_hasher<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::hash<SWCDownloadPriority>, true>, std::__1::__unordered_map_equal<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::equal_to<SWCDownloadPriority>, true>, std::__1::allocator<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *> > >;

typedef struct unordered_map<SWCDownloadPriority, NSURLSession *, std::__1::hash<SWCDownloadPriority>, std::__1::equal_to<SWCDownloadPriority>, std::__1::allocator<std::__1::pair<const SWCDownloadPriority, NSURLSession *> > > {
	hash_table<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::__unordered_map_hasher<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::hash<SWCDownloadPriority>, true>, std::__1::__unordered_map_equal<SWCDownloadPriority, std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *>, std::__1::equal_to<SWCDownloadPriority>, true>, std::__1::allocator<std::__1::__hash_value_type<SWCDownloadPriority, NSURLSession *> > > __table_;
} unordered_map<SWCDownloadPriority, NSURLSession *, std::__1::hash<SWCDownloadPriority>, std::__1::equal_to<SWCDownloadPriority>, std::__1::allocator<std::__1::pair<const SWCDownloadPriority, NSURLSession *> > >;

typedef struct SWCFields {
	unsigned userApproval : 2;
	unsigned siteOrFrameworkApproval : 2;
	unsigned updating : 1;
	unsigned systemApplication : 1;
	unsigned readFromDisk : 1;
	unsigned alwaysEnabled : 1;
	unsigned commandLineAddition : 1;
} SWCFields;

typedef struct _NSZone* NSZoneRef;

typedef const struct SWCPatternStorage* SWCPatternStorageRef;

typedef struct __SecTrust* SecTrustRef;


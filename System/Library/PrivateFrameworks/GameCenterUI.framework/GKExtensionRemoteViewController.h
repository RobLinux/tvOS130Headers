/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:40:54 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKitCore/_UIRemoteViewController.h>
#import <GameCenterUI/GKExtensionProtocol.h>
#import <GameCenterUI/GKExtensionHostProtocol.h>

@class GKGame, NSExtension, NSString;

@interface GKExtensionRemoteViewController : _UIRemoteViewController <GKExtensionProtocol, GKExtensionHostProtocol> {

	GKGame* _game;
	NSExtension* _extension;
	id _requestIdentifier;

}

@property (nonatomic,retain) NSExtension * extension;               //@synthesize extension=_extension - In the implementation block
@property (nonatomic,copy) id requestIdentifier;                    //@synthesize requestIdentifier=_requestIdentifier - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) GKGame * game;                         //@synthesize game=_game - In the implementation block
+(BOOL)shouldPropagateAppearanceCustomizations;
+(void)setupCallbackBlocksForExtension:(id)arg1 withParentViewController:(id)arg2 ;
+(void)viewControllerForExtension:(id)arg1 inputItems:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
+(id)initialItemsForExtension;
+(BOOL)dismissAutomaticallyAfterExtensionCompletion;
-(id)init;
-(void)dealloc;
-(unsigned long long)supportedInterfaceOrientations;
-(id)requestIdentifier;
-(NSExtension *)extension;
-(void)setExtension:(NSExtension *)arg1 ;
-(void)setRequestIdentifier:(id)arg1 ;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidLoad;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(BOOL)shouldAutorotateToInterfaceOrientation:(long long)arg1 ;
-(GKGame *)game;
-(void)setGame:(GKGame *)arg1 ;
-(void)cancelExtension;
-(void)setInitialState:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)sendMessageToExtension:(id)arg1 ;
-(void)messageFromExtension:(id)arg1 ;
-(void)messageFromClient:(id)arg1 ;
-(void)hostApp:(id)arg1 grantingAccessExtensionSandbox:(id)arg2 replyWithEndpoint:(/*^block*/id)arg3 ;
-(id)extensionObjectProxy;
-(void)extensionIsCanceling;
-(long long)_desiredStatusBarStyle;
-(void)extensionIsFinishing;
@end


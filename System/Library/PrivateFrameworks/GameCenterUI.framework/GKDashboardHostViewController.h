/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:40:54 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GameCenterUI/GKExtensionRemoteViewController.h>
#import <GameCenterUI/GKGameCenterDashboardServiceProtocol.h>

@class GKGameCenterViewController, GKDashboardAssetController, NSString, GKGame;

@interface GKDashboardHostViewController : GKExtensionRemoteViewController <GKGameCenterDashboardServiceProtocol> {

	GKGameCenterViewController* _delegateWeak;
	GKDashboardAssetController* _dashboardAssetController;

}

@property (nonatomic,retain) GKDashboardAssetController * dashboardAssetController;              //@synthesize dashboardAssetController=_dashboardAssetController - In the implementation block
@property (assign,nonatomic) GKGameCenterViewController * delegate;                              //@synthesize delegateWeak=_delegateWeak - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) GKGame * game; 
+(id)dashboardExtension;
+(BOOL)dismissAutomaticallyAfterExtensionCompletion;
-(void)dealloc;
-(GKGameCenterViewController *)delegate;
-(void)setDelegate:(GKGameCenterViewController *)arg1 ;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)finishWithMatch:(id)arg1 ;
-(void)playerQuitMatch:(id)arg1 ;
-(void)hostDidChangeViewState:(id)arg1 ;
-(void)hostDidChangeLeaderboardIdentifier:(id)arg1 ;
-(void)hostDidChangeLeaderboardTimeScope:(id)arg1 ;
-(void)messageFromExtension:(id)arg1 ;
-(id)extensionObjectProxy;
-(void)extensionIsCanceling;
-(void)extensionIsFinishing;
-(void)playPressedForChallenge:(id)arg1 ;
-(void)hostSupportsShowingPlayForChallenge:(BOOL)arg1 ;
-(void)hostSupportsShowingPlayForTurnBasedMatch:(BOOL)arg1 ;
-(void)hostSupportsShowingQuitForTurnBasedMatch:(BOOL)arg1 ;
-(GKDashboardAssetController *)dashboardAssetController;
-(void)setDashboardAssetController:(GKDashboardAssetController *)arg1 ;
@end


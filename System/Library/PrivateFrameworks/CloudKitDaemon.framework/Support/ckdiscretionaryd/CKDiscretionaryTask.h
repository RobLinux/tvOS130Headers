/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 1:30:34 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/Support/ckdiscretionaryd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ckdiscretionaryd/NDApplicationObserver.h>

@protocol OS_dispatch_queue, OS_os_transaction, OS_dispatch_source;
@class CKDiscretionaryClientConnection, NSObject, NSString, CKDiscretionaryOptions, NDApplication, CKDiscretionarySchedulerTask;

@interface CKDiscretionaryTask : NSObject <NDApplicationObserver> {

	BOOL _isSpringBoardApp;
	BOOL _running;
	CKDiscretionaryClientConnection* _connection;
	NSObject*<OS_dispatch_queue> _serialQueue;
	NSString* _operationID;
	CKDiscretionaryOptions* _options;
	/*^block*/id _startHandler;
	/*^block*/id _suspendHandler;
	NSObject*<OS_os_transaction> _transaction;
	NSString* _bundleID;
	NDApplication* _application;
	NSObject*<OS_dispatch_source> _resourceTimer;
	Class _schedulerClass;
	CKDiscretionarySchedulerTask* _task;

}

@property (assign,nonatomic,__weak) CKDiscretionaryClientConnection * connection;              //@synthesize connection=_connection - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> serialQueue;                         //@synthesize serialQueue=_serialQueue - In the implementation block
@property (nonatomic,retain) NSString * operationID;                                           //@synthesize operationID=_operationID - In the implementation block
@property (nonatomic,retain) CKDiscretionaryOptions * options;                                 //@synthesize options=_options - In the implementation block
@property (nonatomic,copy) id startHandler;                                                    //@synthesize startHandler=_startHandler - In the implementation block
@property (nonatomic,copy) id suspendHandler;                                                  //@synthesize suspendHandler=_suspendHandler - In the implementation block
@property (nonatomic,retain) NSObject*<OS_os_transaction> transaction;                         //@synthesize transaction=_transaction - In the implementation block
@property (nonatomic,retain) NSString * bundleID;                                              //@synthesize bundleID=_bundleID - In the implementation block
@property (assign,nonatomic) BOOL isSpringBoardApp;                                            //@synthesize isSpringBoardApp=_isSpringBoardApp - In the implementation block
@property (nonatomic,retain) NDApplication * application;                                      //@synthesize application=_application - In the implementation block
@property (assign,nonatomic) BOOL running;                                                     //@synthesize running=_running - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> resourceTimer;                      //@synthesize resourceTimer=_resourceTimer - In the implementation block
@property (assign,nonatomic) Class schedulerClass;                                             //@synthesize schedulerClass=_schedulerClass - In the implementation block
@property (nonatomic,retain) CKDiscretionarySchedulerTask * task;                              //@synthesize task=_task - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(CKDiscretionaryOptions *)options;
-(void)setConnection:(CKDiscretionaryClientConnection *)arg1 ;
-(void)setOptions:(CKDiscretionaryOptions *)arg1 ;
-(CKDiscretionarySchedulerTask *)task;
-(void)setTask:(CKDiscretionarySchedulerTask *)arg1 ;
-(void)setStartHandler:(id)arg1 ;
-(void)setSuspendHandler:(id)arg1 ;
-(CKDiscretionaryClientConnection *)connection;
-(NSString *)bundleID;
-(void)setBundleID:(NSString *)arg1 ;
-(void)complete;
-(NSObject*<OS_dispatch_queue>)serialQueue;
-(NSObject*<OS_os_transaction>)transaction;
-(NSString *)operationID;
-(BOOL)running;
-(void)setRunning:(BOOL)arg1 ;
-(void)setTransaction:(NSObject*<OS_os_transaction>)arg1 ;
-(void)setOperationID:(NSString *)arg1 ;
-(void)setSerialQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NDApplication *)application;
-(void)setApplication:(NDApplication *)arg1 ;
-(id)startHandler;
-(id)suspendHandler;
-(BOOL)isSpringBoardApp;
-(void)setIsSpringBoardApp:(BOOL)arg1 ;
-(void)applicationEnteredForeground:(id)arg1 ;
-(void)applicationNoLongerInForeground:(id)arg1 ;
-(Class)schedulerClass;
-(void)setSchedulerClass:(Class)arg1 ;
-(void)setResourceTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)resourceTimer;
-(id)initWithConnection:(id)arg1 operationID:(id)arg2 group:(id)arg3 bundleID:(id)arg4 isSpringBoardApp:(BOOL)arg5 requiresPastBuddy:(BOOL)arg6 options:(id)arg7 schedulerClass:(Class)arg8 startHandler:(/*^block*/id)arg9 suspendHandler:(/*^block*/id)arg10 ;
-(id)_schedulerTaskIdentifier;
@end


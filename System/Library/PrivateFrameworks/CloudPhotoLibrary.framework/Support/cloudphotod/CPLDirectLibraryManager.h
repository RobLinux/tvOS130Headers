/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:39:43 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/Support/cloudphotod
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CloudPhotoLibrary/CPLPlatformObject.h>
#import <cloudphotod/CPLEngineLibraryOwner.h>
#import <cloudphotod/CPLLibraryManagerImplementation.h>
#import <cloudphotod/CPLEngineLibraryAttachedObject.h>
#import <cloudphotod/CPLEngineLibraryAttachedObject_DataRecovery.h>

@protocol CPLEngineTransportRampingRequestTask, OS_dispatch_queue;
@class NSCountedSet, CPLEngineLibrary, NSObject, NSString;

@interface CPLDirectLibraryManager : CPLPlatformObject <CPLEngineLibraryOwner, CPLLibraryManagerImplementation, CPLEngineLibraryAttachedObject, CPLEngineLibraryAttachedObject_DataRecovery> {

	BOOL _ownsLibrary;
	BOOL _closing;
	unsigned long long _foregroundCalls;
	unsigned long long _significantWorkCalls;
	NSCountedSet* _disablingReasons;
	unsigned long long _disablingMinglingCount;
	id<CPLEngineTransportRampingRequestTask> _currentRampingRequest;
	CPLEngineLibrary* _engineLibrary;
	NSObject*<OS_dispatch_queue> _clientQueue;

}

@property (nonatomic,retain) CPLEngineLibrary * engineLibrary;                      //@synthesize engineLibrary=_engineLibrary - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> clientQueue;              //@synthesize clientQueue=_clientQueue - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(NSString *)description;
-(NSObject*<OS_dispatch_queue>)clientQueue;
-(void)setClientQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)getStreamingURLForResource:(id)arg1 intent:(unsigned long long)arg2 hints:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)rampingRequestForResourceType:(unsigned long long)arg1 numRequested:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getMappedScopedIdentifiersForScopedIdentifiers:(id)arg1 inAreLocalIdentifiers:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)publishMomentShare:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchMomentShareFromShareURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)acceptMomentShare:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)queryUserIdentitiesWithParticipants:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)startSyncSession;
-(void)resetStatus;
-(void)noteClientIsInForeground;
-(void)noteClientIsInBackground;
-(void)checkHasBackgroundDownloadOperationsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)getStatusForRecordsWithScopedIdentifiers:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getChangedStatusesWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)addStatusChangesForRecordsWithScopedIdentifiers:(id)arg1 persist:(BOOL)arg2 ;
-(void)disableSynchronizationWithReason:(id)arg1 ;
-(void)enableSynchronizationWithReason:(id)arg1 ;
-(void)getSystemBudgetsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setShouldOverride:(BOOL)arg1 forSystemBudgets:(unsigned long long)arg2 ;
-(void)disableMingling;
-(void)enableMingling;
-(void)noteClientIsBeginningSignificantWork;
-(void)noteClientIsEndingSignificantWork;
-(void)setDiagnosticsEnabled:(BOOL)arg1 ;
-(void)resetCacheWithOption:(unsigned long long)arg1 reason:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getListOfComponentsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)getStatusForComponents:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getStatusArrayForComponents:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getStatusesForScopesWithIdentifiers:(id)arg1 includeStorages:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getCloudCacheForRecordWithScopedIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)cloudCacheGetDescriptionForRecordWithScopedIdentifier:(id)arg1 related:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getResourcesForItemWithScopedIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)compactFileCacheWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)addInfoToLog:(id)arg1 ;
-(void)reportSetting:(id)arg1 hasBeenSetToValue:(id)arg2 ;
-(void)reportMiscInformation:(id)arg1 ;
-(void)blockEngineElement:(id)arg1 ;
-(void)unblockEngineElement:(id)arg1 ;
-(void)unblockEngineElementOnce:(id)arg1 ;
-(void)provideLibraryInfoForScopeWithIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)provideRecordWithCloudScopeIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)provideCloudResource:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)enableMainScopeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)disableMainScopeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)boostPriorityForScopeWithIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)deleteResources:(id)arg1 checkServerIfNecessary:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)checkResourcesAreSafeToPrune:(id)arg1 checkServerIfNecessary:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)acknowledgeChangedStatuses:(id)arg1 ;
-(id)initWithAbstractObject:(id)arg1 ;
-(void)openWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)closeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)deactivateWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)noteClientReceivedNotificationOfServerChanges;
-(void)beginDownloadForResource:(id)arg1 clientBundleID:(id)arg2 highPriority:(BOOL)arg3 proposedTaskIdentifier:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)beginInMemoryDownloadOfResource:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)forceSynchronizingScopeWithIdentifiers:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(BOOL)diagnosticsEnabled;
-(CPLEngineLibrary *)engineLibrary;
-(void)engineLibrary:(id)arg1 noteClientIsInForeground:(BOOL)arg2 ;
-(id)displayableNameForEngineLibrary:(id)arg1 ;
-(void)engineLibrary:(id)arg1 provideLocalResource:(id)arg2 recordClass:(Class)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)engineLibrary:(id)arg1 sizeOfResourcesToUploadDidChangeToSize:(unsigned long long)arg2 sizeOfOriginalResourcesToUpload:(unsigned long long)arg3 numberOfImages:(unsigned long long)arg4 numberOfVideos:(unsigned long long)arg5 numberOfOtherItems:(unsigned long long)arg6 ;
-(void)engineLibrary:(id)arg1 uploadTask:(id)arg2 didFinishWithError:(id)arg3 ;
-(void)engineLibrary:(id)arg1 uploadTask:(id)arg2 didProgress:(float)arg3 ;
-(void)engineLibrary:(id)arg1 didStartUploadTask:(id)arg2 ;
-(void)engineLibrary:(id)arg1 didFailBackgroundDownloadOfResource:(id)arg2 ;
-(void)engineLibrary:(id)arg1 didDownloadResourceInBackground:(id)arg2 ;
-(void)engineLibraryHasStatusChanges:(id)arg1 ;
-(void)engineLibraryHasChangesInPullQueue:(id)arg1 ;
-(BOOL)isLibraryManagerForEngineLibrary:(id)arg1 ;
-(id)ownerNameForEngineLibrary:(id)arg1 ;
-(void)engineLibrary:(id)arg1 getStatusWithCompletionHandler:(/*^block*/id)arg2 ;
-(void)engineLibrary:(id)arg1 getStatusDictionaryWithCompletionHandler:(/*^block*/id)arg2 ;
-(void)setEngineLibrary:(CPLEngineLibrary *)arg1 ;
-(void)_dispatchForceSyncForScopeIdentifiers:(id)arg1 errors:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)_isManagementLibraryManager;
-(id)safeResourcesToDeleteFromProposedResources:(id)arg1 realPrune:(BOOL)arg2 checkServerIfNecessary:(BOOL)arg3 allowUnconfirmed:(BOOL)arg4 resourcesToCheckOnServer:(id*)arg5 transportScopes:(id*)arg6 unsafeResources:(id)arg7 ;
-(void)checkServerForResources:(id)arg1 transportScopes:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_deleteResources:(id)arg1 dryRun:(BOOL)arg2 checkServerIfNecessary:(BOOL)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)_resetStore:(id)arg1 reason:(id)arg2 resetSelector:(SEL)arg3 error:(id*)arg4 ;
-(void)engineLibrary:(id)arg1 didCloseWithError:(id)arg2 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:39:44 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/Support/cloudphotod
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <cloudphotod/cloudphotod-Structs.h>
#import <CloudPhotoLibrary/CPLPlatformObject.h>
#import <cloudphotod/CPLDuetTicketProviderBudgetDelegate.h>
#import <cloudphotod/CPLEngineTransportImplementation.h>
#import <cloudphotod/CPLCloudKitTaskController.h>

@protocol OS_dispatch_queue;
@class CKDatabase, CKContainer, CPLCloudKitOperationsTracker, NSObject, NSIndexSet, NSArray, NSDictionary, NSMutableSet, CPLCloudKitSimpleCache, CPLCloudKitTaskGroupThrottler, NSDate, CPLEngineLibrary, NSString;

@interface CPLCloudKitTransport : CPLPlatformObject <CPLDuetTicketProviderBudgetDelegate, CPLEngineTransportImplementation, CPLCloudKitTaskController> {

	NSObject*<OS_dispatch_queue> _workQueue;
	BOOL _opened;
	CPLCloudKitOperationsTracker* _operationTracker;
	BOOL _mightRejectVideoStreaming;
	NSIndexSet* _rejectedVideoStreamingIntents;
	BOOL _rejectVideoStreamingAtContentLevel;
	NSArray* _rejectedVideoStreamingIntentNames;
	NSDictionary* _operationGroupMapping;
	NSMutableSet* _invalidaOperationGroupMappingEntries;
	CPLCloudKitSimpleCache* _streamingURLCache;
	CPLCloudKitTaskGroupThrottler* _streamingThrottler;
	CKContainer* _container;
	CKDatabase* _database;
	CKDatabase* _sharedDatabase;
	NSDate* _significantWorkBeginDate;

}

@property (nonatomic,retain,readonly) NSObject*<OS_dispatch_queue> workQueue;                //@synthesize workQueue=_workQueue - In the implementation block
@property (nonatomic,retain) CKContainer * container;                                        //@synthesize container=_container - In the implementation block
@property (nonatomic,retain) CKDatabase * database;                                          //@synthesize database=_database - In the implementation block
@property (nonatomic,retain) CKDatabase * sharedDatabase;                                    //@synthesize sharedDatabase=_sharedDatabase - In the implementation block
@property (nonatomic,retain,readonly) CPLEngineLibrary * engineLibrary; 
@property (nonatomic,retain) NSDate * significantWorkBeginDate;                              //@synthesize significantWorkBeginDate=_significantWorkBeginDate - In the implementation block
@property (nonatomic,readonly) CPLCloudKitOperationsTracker * operationTracker;              //@synthesize operationTracker=_operationTracker - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) Class transportGroupClass; 
@property (nonatomic,readonly) Class userIdentifierClass; 
@property (getter=isNetworkConnected,nonatomic,readonly) BOOL networkConnected; 
@property (getter=isForeground,nonatomic,readonly) BOOL foreground; 
@property (nonatomic,readonly) BOOL canBoostOperations; 
@property (nonatomic,readonly) BOOL canBoostBackgroundOperations; 
+(id)_container;
+(BOOL)enableTurboMode;
+(void)transportWontBeUsed;
+(BOOL)useSandboxEnvironment;
+(unsigned long long)networkBehaviorForForegroundOperation:(BOOL)arg1 upload:(BOOL)arg2 metadata:(BOOL)arg3 ;
+(BOOL)allowsSyncOverCellular;
+(id)_errorsByTaskForTasksByRecordId:(id)arg1 fromUnderlyingError:(id)arg2 ;
+(id)_betterErrorForRecordId:(id)arg1 recordError:(id)arg2 ;
-(CKContainer *)container;
-(void)setContainer:(CKContainer *)arg1 ;
-(NSObject*<OS_dispatch_queue>)workQueue;
-(CKDatabase *)database;
-(void)setDatabase:(CKDatabase *)arg1 ;
-(BOOL)isForeground;
-(CKDatabase *)sharedDatabase;
-(void)getSystemBudgetsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setShouldOverride:(BOOL)arg1 forSystemBudgets:(unsigned long long)arg2 ;
-(void)noteClientIsBeginningSignificantWork;
-(void)noteClientIsEndingSignificantWork;
-(id)initWithAbstractObject:(id)arg1 ;
-(void)openWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)getStatusWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)getStatusDictionaryWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)closeAndDeactivate:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)componentName;
-(CPLEngineLibrary *)engineLibrary;
-(Class)transportGroupClass;
-(Class)userIdentifierClass;
-(id)setupTaskUpdateDisabledFeatures:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)checkRecordsExistenceTaskForRecords:(id)arg1 fetchRecordProperties:(id)arg2 transportScope:(id)arg3 scope:(id)arg4 additionalTransportScopes:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(id)uploadBatchTaskForBatch:(id)arg1 transportScope:(id)arg2 scope:(id)arg3 additionalTransportScopes:(id)arg4 progressHandler:(/*^block*/id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(id)queryTaskForCursor:(id)arg1 class:(Class)arg2 transportScope:(id)arg3 scopeIdentifier:(id)arg4 progressHandler:(/*^block*/id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(id)downloadBatchTaskForSyncAnchor:(NSData*)arg1 transportScope:(id)arg2 scope:(id)arg3 currentLibraryInfo:(id)arg4 progressHandler:(/*^block*/id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(id)fetchScopeListChangesForScopeListSyncAnchor:(NSData*)arg1 progressHandler:(/*^block*/id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)deleteTransportScope:(id)arg1 scope:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)updateTransportScope:(id)arg1 scope:(id)arg2 libraryInfo:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)getLibraryInfoAndStateWithTransportScope:(id)arg1 scope:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)getCurrentSyncAnchorWithTransportScope:(id)arg1 scope:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)fetchTransportScopeForScope:(id)arg1 transportScope:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)getStreamingURLTaskForResource:(id)arg1 intent:(unsigned long long)arg2 hints:(id)arg3 transportScope:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)resourceCheckTaskForResources:(id)arg1 transportScopes:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)rampingRequestTaskForResourceType:(unsigned long long)arg1 numRequested:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)resourcesDownloadTaskWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)inMemoryDownloadTaskForResource:(id)arg1 transportScope:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)publishTaskForMomentShare:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)fetchTaskForMomentShareURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)acceptTaskForMomentShare:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)queryUserIdentitiesTaskForParticipants:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)sendFeedbackTaskForMessages:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)bestErrorForUnderlyingError:(id)arg1 ;
-(id)simpleDescriptionForSyncAnchor:(NSData*)arg1 ;
-(id)simpleDescriptionForScopeListSyncAnchor:(NSData*)arg1 ;
-(void)cancelBlockedTasksIncludingBackground:(BOOL)arg1 ;
-(id)descriptionForTransportScope:(id)arg1 ;
-(id)scopeNameForTransportScope:(id)arg1 ;
-(id)transportScopeForUpgradeFromScopeName:(id)arg1 ;
-(void)upgradeFlags:(id)arg1 fromTransportScope:(id)arg2 ;
-(void)getPushEnvironmentWithCompletionHandler:(/*^block*/id)arg1 ;
-(BOOL)isResourceDynamic:(id)arg1 ;
-(void)findPersistedInitialSyncSession:(/*^block*/id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)createGroupForInitialUpload;
-(id)createGroupForResetSync;
-(id)createGroupForInitialDownload;
-(id)createGroupForPrefetch;
-(id)createGroupForThumbnailPrefetch;
-(id)createGroupForSetup;
-(id)createGroupForTransportScopeDelete;
-(id)createGroupForTransportScopeUpdate;
-(id)createGroupForFetchScopeListChanges;
-(id)createGroupForFeedback;
-(id)createGroupForLibraryStateCheck;
-(id)createGroupForChangeUpload;
-(id)createGroupForChangeDownload;
-(id)createGroupForThumbnailsDownload;
-(id)createGroupForResourcesDownload;
-(id)createGroupForMovieStreamingWithIntent:(unsigned long long)arg1 ;
-(id)createGroupForAnalysisDownload;
-(id)createGroupForPruningCheck;
-(id)createGroupForPublishingMomentShare;
-(id)createGroupForFetchingMomentShare;
-(id)createGroupForAcceptingMomentShare;
-(id)createGroupForQueryUserIdentities;
-(BOOL)isNetworkConnected;
-(BOOL)canBoostOperations;
-(BOOL)canBoostBackgroundOperations;
-(CPLCloudKitOperationsTracker *)operationTracker;
-(void)processTaskErrorIfNeeded:(id)arg1 ;
-(void)duetTicketProviderBlockedStatusDidChange;
-(void)_updateBudgets;
-(void)provideCKAssetWithRecordID:(id)arg1 fieldName:(id)arg2 recordType:(id)arg3 signature:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)setIsSignificantWorkPending:(BOOL)arg1 ;
-(id)createGroupAllowsCellular:(BOOL)arg1 foreground:(BOOL)arg2 upload:(BOOL)arg3 metadata:(BOOL)arg4 ;
-(id)_operationGroupNameForName:(id)arg1 ;
-(id)_tempDestinationURLForRecoveredDataWithError:(id*)arg1 ;
-(void)_cleanTempRecoveredDataURL:(id)arg1 ;
-(void)_withTempCKAssetForData:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)setSharedDatabase:(CKDatabase *)arg1 ;
-(NSDate *)significantWorkBeginDate;
-(void)setSignificantWorkBeginDate:(NSDate *)arg1 ;
-(id)tempCKAssetURL;
@end


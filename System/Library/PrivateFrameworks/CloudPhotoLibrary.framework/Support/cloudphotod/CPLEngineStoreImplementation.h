/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:39:42 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/Support/cloudphotod
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

@class CPLChangeSessionUpdate, NSDate;


@protocol CPLEngineStoreImplementation <CPLPlatformImplementation>
@property (nonatomic,readonly) BOOL hasStoredChangeSessionUpdate; 
@property (nonatomic,readonly) CPLChangeSessionUpdate * storedChangeSessionUpdate; 
@property (nonatomic,readonly) BOOL shouldUpdateDisabledFeatures; 
@property (readonly) NSDate * libraryCreationDate; 
@property (nonatomic,readonly) id corruptionInfo; 
@required
-(id)userIdentifier;
-(id)status;
-(void)performBarrier;
-(BOOL)openWithError:(id*)arg1;
-(id)libraryVersion;
-(BOOL)closeWithError:(id*)arg1;
-(NSDate *)libraryCreationDate;
-(unsigned long long)libraryOptions;
-(void)writeTransactionDidFail;
-(void)writeTransactionDidSucceed;
-(BOOL)storeLibraryVersion:(id)arg1 withError:(id*)arg2;
-(BOOL)updateLibraryOptions:(unsigned long long)arg1 error:(id*)arg2;
-(id)createNewLibraryVersion;
-(BOOL)storeUserIdentifier:(id)arg1 error:(id*)arg2;
-(id)lastQuarantineCountReportDate;
-(BOOL)storeLastQuarantineCountReportDate:(id)arg1 error:(id*)arg2;
-(id)clientCacheIdentifier;
-(BOOL)storeClientIsInSyncWithClientCacheWithError:(id*)arg1;
-(BOOL)isClientInSyncWithClientCache;
-(id)corruptionInfo;
-(BOOL)storeChangeSessionUpdate:(id)arg1 error:(id*)arg2;
-(id)disabledFeatures;
-(BOOL)shouldUpdateDisabledFeatures;
-(BOOL)setShouldUpdateDisabledFeaturesWithError:(id*)arg1;
-(id)derivativesFilter;
-(BOOL)storeDerivativesFilter:(id)arg1 error:(id*)arg2;
-(void)wipeStoreAtNextOpeningWithReason:(id)arg1 completionBlock:(/*^block*/id)arg2;
-(CPLChangeSessionUpdate *)storedChangeSessionUpdate;
-(BOOL)storeDisabledFeatures:(id)arg1 error:(id*)arg2;
-(BOOL)hasStoredChangeSessionUpdate;
-(void)performBarrierTransaction:(id)arg1 withBlock:(/*^block*/id)arg2;
-(BOOL)markDatabaseAsDeactivatedWithError:(id*)arg1;
-(void)performWriteTransaction:(id)arg1 withBlock:(/*^block*/id)arg2 completionHandler:(/*^block*/id)arg3;
-(void)performReadTransaction:(id)arg1 withBlock:(/*^block*/id)arg2;
-(BOOL)executePostOpenWithError:(id*)arg1;
-(BOOL)storeClientCacheIdentifier:(id)arg1 error:(id*)arg2;
-(id)createNewClientCacheIdentifier;
-(BOOL)storeClientIsNotInSyncWithClientCacheWithError:(id*)arg1;

@end


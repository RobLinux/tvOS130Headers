/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:39:42 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/Support/cloudphotod
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <cloudphotod/CPLDaemonLibraryManagerProtocol.h>
#import <cloudphotod/CPLLibraryManagerDelegate.h>
#import <cloudphotod/CPLResourceProgressDelegate.h>
#import <cloudphotod/CPLLibraryManagerForceSyncDelegate.h>
#import <cloudphotod/NSXPCConnectionDelegate.h>

@protocol OS_dispatch_queue, CPLDaemonLibraryManagerDelegate;
@class CPLLibraryManager, CPLDirectLibraryManager, NSMutableDictionary, NSObject, Protocol, NSXPCConnection, NSString;

@interface CPLDaemonLibraryManager : NSObject <CPLDaemonLibraryManagerProtocol, CPLLibraryManagerDelegate, CPLResourceProgressDelegate, CPLLibraryManagerForceSyncDelegate, NSXPCConnectionDelegate> {

	CPLLibraryManager* _manager;
	CPLDirectLibraryManager* _platformManager;
	NSMutableDictionary* _downloadTasksPerIdentifier;
	NSMutableDictionary* _uploadTasksPerIdentifier;
	NSMutableDictionary* _forceSyncTasksPerIdentifier;
	NSMutableDictionary* _vouchersPerTaskIdentifier;
	NSObject*<OS_dispatch_queue> _queue;
	Protocol* _allowedProtocol;
	BOOL _killed;
	BOOL _isLibraryManager;
	BOOL _isManagement;
	NSXPCConnection* _connection;
	NSString* _name;
	id<CPLDaemonLibraryManagerDelegate> _delegate;

}

@property (nonatomic,readonly) NSXPCConnection * connection;                                   //@synthesize connection=_connection - In the implementation block
@property (nonatomic,copy,readonly) NSString * name;                                           //@synthesize name=_name - In the implementation block
@property (nonatomic,readonly) BOOL isLibraryManager;                                          //@synthesize isLibraryManager=_isLibraryManager - In the implementation block
@property (nonatomic,readonly) BOOL isManagement;                                              //@synthesize isManagement=_isManagement - In the implementation block
@property (assign,nonatomic,__weak) id<CPLDaemonLibraryManagerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(NSString *)name;
-(NSString *)description;
-(void)dealloc;
-(id<CPLDaemonLibraryManagerDelegate>)delegate;
-(void)setDelegate:(id<CPLDaemonLibraryManagerDelegate>)arg1 ;
-(void)cancelTaskWithIdentifier:(id)arg1 ;
-(NSXPCConnection *)connection;
-(void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(BOOL)arg3 ;
-(void)connectWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)openLibraryWithClientLibraryBaseURL:(id)arg1 cloudLibraryStateStorageURL:(id)arg2 cloudLibraryResourceStorageURL:(id)arg3 libraryIdentifier:(id)arg4 options:(unsigned long long)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)closeLibraryWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)deactivateLibraryWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)beginDownloadForResource:(id)arg1 clientBundleID:(id)arg2 highPriority:(BOOL)arg3 proposedTaskIdentifier:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)getStreamingURLForResource:(id)arg1 intent:(unsigned long long)arg2 hints:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)rampingRequestForResourceType:(unsigned long long)arg1 numRequested:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)beginInMemoryDownloadOfResource:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)getMappedScopedIdentifiersForScopedIdentifiers:(id)arg1 inAreLocalIdentifiers:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)publishMomentShare:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchMomentShareFromShareURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)acceptMomentShare:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)queryUserIdentitiesWithParticipants:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)forceSyncForScopeIdentifiers:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)cancelSyncTaskWithIdentifier:(id)arg1 ;
-(void)startSyncSession;
-(void)resetStatus;
-(void)noteClientIsInForeground;
-(void)noteClientIsInBackground;
-(void)checkHasBackgroundDownloadOperationsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)getStatusForRecordsWithScopedIdentifiers:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getChangedStatusesWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)addStatusChangesForRecordsWithScopedIdentifiers:(id)arg1 persist:(BOOL)arg2 ;
-(void)disableSynchronizationWithReason:(id)arg1 ;
-(void)enableSynchronizationWithReason:(id)arg1 ;
-(void)getSystemBudgetsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setShouldOverride:(BOOL)arg1 forSystemBudgets:(unsigned long long)arg2 ;
-(void)disableMingling;
-(void)enableMingling;
-(void)noteClientIsBeginningSignificantWork;
-(void)noteClientIsEndingSignificantWork;
-(void)setDiagnosticsEnabled:(BOOL)arg1 ;
-(void)resetCacheWithOption:(unsigned long long)arg1 reason:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getListOfComponentsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)getStatusForComponents:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getStatusArrayForComponents:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getStatusesForScopesWithIdentifiers:(id)arg1 includeStorages:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getCloudCacheForRecordWithScopedIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)cloudCacheGetDescriptionForRecordWithScopedIdentifier:(id)arg1 related:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getResourcesForItemWithScopedIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)compactFileCacheWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)addInfoToLog:(id)arg1 ;
-(void)reportSetting:(id)arg1 hasBeenSetToValue:(id)arg2 ;
-(void)reportMiscInformation:(id)arg1 ;
-(void)blockEngineElement:(id)arg1 ;
-(void)unblockEngineElement:(id)arg1 ;
-(void)unblockEngineElementOnce:(id)arg1 ;
-(void)provideLibraryInfoForScopeWithIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)provideRecordWithCloudScopeIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)provideCloudResource:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)enableMainScopeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)disableMainScopeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)boostPriorityForScopeWithIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)beginPushSessionWithKnownLibraryVersion:(id)arg1 context:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)beginPullSessionWithKnownLibraryVersion:(id)arg1 context:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)finalizeSessionWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)getChangeBatchWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)acknowledgeChangeBatch:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)commitChangeBatch:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)deleteResources:(id)arg1 checkServerIfNecessary:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)checkResourcesAreSafeToPrune:(id)arg1 checkServerIfNecessary:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)acknowledgeChangedStatuses:(id)arg1 ;
-(void)libraryManagerStatusDidChange:(id)arg1 ;
-(void)libraryManager:(id)arg1 downloadDidFinishForResourceTransferTask:(id)arg2 withError:(id)arg3 ;
-(void)libraryManager:(id)arg1 inMemoryDownloadDidFinishForResourceTransferTask:(id)arg2 data:(id)arg3 withError:(id)arg4 ;
-(void)libraryManager:(id)arg1 uploadDidFinishForResourceTransferTask:(id)arg2 withError:(id)arg3 ;
-(void)libraryManager:(id)arg1 didFinishForceSyncTask:(id)arg2 withErrors:(id)arg3 ;
-(void)_storeVoucher:(id)arg1 forTaskWithIdentifier:(id)arg2 ;
-(void)libraryManager:(id)arg1 downloadDidStartForResourceTransferTask:(id)arg2 ;
-(void)_withVoucherForTaskWithIdentifier:(id)arg1 do:(/*^block*/id)arg2 ;
-(void)libraryManager:(id)arg1 downloadDidProgress:(float)arg2 forResourceTransferTask:(id)arg3 ;
-(void)_dropVoucherForTaskWithIdentifier:(id)arg1 ;
-(void)libraryManager:(id)arg1 backgroundDownloadDidFinishForResource:(id)arg2 ;
-(void)libraryManager:(id)arg1 backgroundDownloadDidFailForResource:(id)arg2 ;
-(void)libraryManager:(id)arg1 uploadDidStartForResourceTransferTask:(id)arg2 ;
-(void)libraryManager:(id)arg1 uploadDidProgress:(float)arg2 forResourceTransferTask:(id)arg3 ;
-(void)libraryManagerHasChangesToPull:(id)arg1 ;
-(void)libraryManagerHasStatusChanges:(id)arg1 ;
-(void)libraryManager:(id)arg1 provideLocalResource:(id)arg2 recordClass:(Class)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)sizeOfResourcesToUploadDidChangeForLibraryManager:(id)arg1 ;
-(id)displayableNameForLibraryManager:(id)arg1 ;
-(void)libraryManagerDidStartSynchronization:(id)arg1 ;
-(id)initWithConnection:(id)arg1 name:(id)arg2 queue:(id)arg3 allowedProcol:(id)arg4 isManagement:(BOOL)arg5 ;
-(BOOL)isLibraryManager;
-(void)_dropManagerWithCompletionBlock:(/*^block*/id)arg1 ;
-(id)_clientWithErrorHandler:(/*^block*/id)arg1 ;
-(void)_callBlockWhenThereIsNoOtherLibraryManagers:(/*^block*/id)arg1 ;
-(void)_killWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)processSessionContext:(id)arg1 ;
-(void)_storeUploadTransferTask:(id)arg1 ;
-(BOOL)isLibraryManager:(id)arg1 ;
-(BOOL)isManagementLibraryManager:(id)arg1 ;
-(BOOL)isManagement;
@end


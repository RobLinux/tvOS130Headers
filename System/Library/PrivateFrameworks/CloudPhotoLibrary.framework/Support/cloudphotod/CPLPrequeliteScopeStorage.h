/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:39:42 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/Support/cloudphotod
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <cloudphotod/cloudphotod-Structs.h>
#import <cloudphotod/CPLPrequeliteStorage.h>
#import <cloudphotod/CPLEngineScopeStorageImplementation.h>

@class CPLPrequeliteVariable, NSMutableSet, _CPLPrequeliteScopeBase, _CPLPrequeliteScopeSyncState, CPLPrequeliteTodoVar, CPLPrequeliteVariableGroup, NSString;

@interface CPLPrequeliteScopeStorage : CPLPrequeliteStorage <CPLEngineScopeStorageImplementation> {

	CPLPrequeliteVariable* _nextIndexVar;
	CPLPrequeliteVariable* _scopeListSyncAnchorVar;
	NSMutableSet* _modifiedVariables;
	_CPLPrequeliteScopeBase* _base;
	CPLPrequeliteVariable* _flagsVar;
	CPLPrequeliteVariable* _disabledDateVar;
	CPLPrequeliteVariable* _deleteDateVar;
	CPLPrequeliteVariable* _libraryInfoVar;
	CPLPrequeliteVariable* _lastLibraryInfoUpdateVar;
	CPLPrequeliteVariable* _transportScopeVar;
	_CPLPrequeliteScopeSyncState* _syncState;
	CPLPrequeliteVariable* _estimatedSizeVar;
	CPLPrequeliteVariable* _estimatedAssetCountVar;
	CPLPrequeliteVariable* _initialSyncDateVar;
	CPLPrequeliteTodoVar* _pushToTransportTodoVar;
	CPLPrequeliteTodoVar* _pullFromTransportTodoVar;
	CPLPrequeliteTodoVar* _clientNeedsToPullTodoVar;
	CPLPrequeliteTodoVar* _updateTransportTodoVar;
	CPLPrequeliteVariableGroup* _all;
	CPLPrequeliteVariableGroup* _libraryStateGroup;
	Class _transportGroupClass;
	BOOL _noteEndOfResetIfNecessary;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) BOOL hasStagedSyncAnchors; 
+(BOOL)_scopeType:(long long)arg1 supportsClientSyncWithOptions:(unsigned long long)arg2 ;
+(id)_supportedScopeTypesWithOptions:(unsigned long long)arg1 ;
-(id)initWithAbstractObject:(id)arg1 ;
-(void)writeTransactionDidFail;
-(void)writeTransactionDidSucceed;
-(id)statusDictionary;
-(id)enumeratorForScopesIncludeInactive:(BOOL)arg1 ;
-(id)enumeratorForScopesNeedingUpdateFromTransport;
-(id)enumeratorForScopesNeedingToPushHighPriorityChangesToTransport;
-(BOOL)hasScopesNeedingToPushHighPriorityChangesToTransport;
-(id)enumeratorForScopesNeedingToPushChangesToTransport;
-(BOOL)hasScopesNeedingToPushChangesToTransport;
-(BOOL)setScopeHasChangesToPushToTransport:(id)arg1 error:(id*)arg2 ;
-(long long)pushToTransportTaskForScope:(id)arg1 ;
-(BOOL)setScope:(id)arg1 hasCompletedPushToTransportTask:(long long)arg2 error:(id*)arg3 ;
-(BOOL)doesScopeNeedToPushChangesToTransport:(id)arg1 ;
-(id)enumeratorForScopesNeedingToPullChangesFromTransport;
-(BOOL)hasScopesNeedingToPullChangesFromTransport;
-(BOOL)setScopeHasChangesToPullFromTransport:(id)arg1 error:(id*)arg2 ;
-(BOOL)setAllScopesHasChangesToPullFromTransportWithError:(id*)arg1 ;
-(long long)pullFromTransportTaskForScope:(id)arg1 ;
-(BOOL)setScope:(id)arg1 hasCompletedPullFromTransportTask:(long long)arg2 error:(id*)arg3 ;
-(BOOL)doesScopeNeedToPullChangesFromTransport:(id)arg1 ;
-(BOOL)setPullFromTransportExpirationInterval:(double)arg1 scope:(id)arg2 error:(id*)arg3 ;
-(BOOL)setScopeNeedsToBePulledByClient:(id)arg1 error:(id*)arg2 ;
-(BOOL)doesScopeNeedToBePulledByClient:(id)arg1 ;
-(id)enumeratorForScopesNeedingToUpdateTransport;
-(BOOL)hasScopesNeedingToUpdateTransport;
-(BOOL)setScopeNeedsToUpdateTransport:(id)arg1 error:(id*)arg2 ;
-(long long)transportUpdateTaskForScope:(id)arg1 ;
-(BOOL)setScope:(id)arg1 hasCompletedTransportUpdate:(long long)arg2 error:(id*)arg3 ;
-(BOOL)doesScopeNeedToUpdateTransport:(id)arg1 ;
-(BOOL)deleteScopeWithIdentifier:(id)arg1 error:(id*)arg2 ;
-(BOOL)setScopeType:(long long)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(BOOL)resetSyncAnchorForScope:(id)arg1 error:(id*)arg2 ;
-(id)flagsForScope:(id)arg1 ;
-(BOOL)updateFlags:(id)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(id)disabledDateForScope:(id)arg1 ;
-(BOOL)setDisabledDate:(id)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(id)deleteDateForScope:(id)arg1 ;
-(BOOL)setDeleteDate:(id)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(BOOL)resetSyncStateForScope:(id)arg1 error:(id*)arg2 ;
-(id)uploadTransportGroupForScope:(id)arg1 ;
-(id)downloadTransportGroupForScope:(id)arg1 ;
-(id)scopeWithIdentifier:(id)arg1 ;
-(BOOL)setScopeNeedsUpdateFromTransport:(id)arg1 error:(id*)arg2 ;
-(id)transportScopeForScope:(id)arg1 ;
-(BOOL)setTransportScope:(id)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(id)libraryInfoForScope:(id)arg1 ;
-(BOOL)didDropSomeRecordsForScope:(id)arg1 ;
-(BOOL)setDidDropSomeRecordsForScope:(id)arg1 error:(id*)arg2 ;
-(BOOL)setSyncAnchor:(NSData*)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(BOOL)commitSyncAnchorForScope:(id)arg1 error:(id*)arg2 ;
-(BOOL)discardStagedSyncAnchorForScope:(id)arg1 error:(id*)arg2 ;
-(BOOL)discardStagedSyncAnchorWithScopeFilter:(id)arg1 error:(id*)arg2 ;
-(BOOL)hasStagedSyncAnchorForScope:(id)arg1 ;
-(BOOL)hasStagedSyncAnchors;
-(NSData*)transientSyncAnchorForScope:(id)arg1 ;
-(BOOL)storeTransientSyncAnchor:(NSData*)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(BOOL)hasScopeFetchedInitialSyncAnchor:(id)arg1 ;
-(BOOL)setHasFetchedInitialSyncAnchor:(BOOL)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(BOOL)setInitialSyncAnchor:(NSData*)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(NSData*)initialSyncAnchorForScope:(id)arg1 ;
-(BOOL)hasFinishedAFullSyncForScope:(id)arg1 ;
-(id)lastDateOfClearedPushRepositoryForScope:(id)arg1 ;
-(BOOL)storeLastDateOfClearedPushRepository:(id)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(id)lastDateOfCompletedPullFromTransportForScope:(id)arg1 ;
-(unsigned long long)supportedFeatureVersionInLastSyncForScope:(id)arg1 ;
-(BOOL)storeSupportedFeatureVersionInLastSync:(unsigned long long)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(BOOL)storeEstimatedSize:(unsigned long long)arg1 estimatedAssetCount:(unsigned long long)arg2 forScope:(id)arg3 error:(id*)arg4 ;
-(unsigned long long)estimatedSizeForScope:(id)arg1 ;
-(unsigned long long)estimatedAssetCountForScope:(id)arg1 ;
-(BOOL)upgradeScopesWithNewLibraryOption:(unsigned long long)arg1 error:(id*)arg2 ;
-(id)primaryScope;
-(NSData*)scopeListSyncAnchor;
-(BOOL)storeScopeListSyncAnchor:(NSData*)arg1 error:(id*)arg2 ;
-(id)filterForIncludedScopeIdentifiers:(id)arg1 ;
-(id)filterForExcludedScopeIdentifiers:(id)arg1 ;
-(NSData*)syncAnchorForScope:(id)arg1 isCommitted:(BOOL*)arg2 ;
-(id)lastLibraryInfoUpdateDateForScope:(id)arg1 ;
-(id)initialSyncDateForScope:(id)arg1 ;
-(BOOL)setClassNameOfRecordsForInitialQuery:(id)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(id)classNameOfRecordsForInitialQueryForScope:(id)arg1 ;
-(BOOL)setLibraryInfo:(id)arg1 forScope:(id)arg2 libraryInfoHasBeenUpdated:(BOOL*)arg3 error:(id*)arg4 ;
-(BOOL)storeDownloadTransportGroup:(id)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(BOOL)storeUploadTransportGroup:(id)arg1 forScope:(id)arg2 error:(id*)arg3 ;
-(BOOL)bumpStableIndexForScopeWithIdentifier:(id)arg1 error:(id*)arg2 ;
-(BOOL)bumpCloudIndexForScopeWithIdentifier:(id)arg1 error:(id*)arg2 ;
-(BOOL)bumpLocalIndexForScopeWithIdentifier:(id)arg1 error:(id*)arg2 ;
-(id)validCloudIndexes;
-(id)validLocalIndexes;
-(id)addScopeWithIdentifier:(id)arg1 scopeType:(long long)arg2 error:(id*)arg3 ;
-(BOOL)setScope:(id)arg1 hasCompletedClientNeedsToPullTask:(long long)arg2 error:(id*)arg3 ;
-(id)enumeratorForScopesNeedingToBePulledByClientWithMaximumCount:(unsigned long long)arg1 ;
-(long long)clientNeedsToPullTaskForScope:(id)arg1 ;
-(id)librarySateForScope:(id)arg1 ;
-(id)scopeWithStableIndex:(long long)arg1 ;
-(id)scopeWithCloudIndex:(long long)arg1 ;
-(id)scopeWithLocalIndex:(long long)arg1 ;
-(BOOL)_scopeTypeSupportClientSync:(long long)arg1 ;
-(double)_minimalPullFromTranportExpirationInterval;
-(BOOL)_addScope:(id)arg1 error:(id*)arg2 ;
-(BOOL)initializeStorage;
-(BOOL)_createInitialPrimarySyncScope;
-(BOOL)_transferValueFromVariable:(id)arg1 type:(id)arg2 ofStorage:(id)arg3 toColumnVariable:(id)arg4 transformer:(/*^block*/id)arg5 ;
-(BOOL)bumpPullFromTransportExpirationIntervalWithError:(id*)arg1 ;
-(id)_valueForColumnVariable:(id)arg1 scope:(id)arg2 ;
-(BOOL)_setScope:(id)arg1 hasTaskTodo:(id)arg2 error:(id*)arg3 ;
-(long long)_taskItemForScope:(id)arg1 task:(id)arg2 ;
-(BOOL)_setScope:(id)arg1 hasCompletedTaskItem:(long long)arg2 task:(id)arg3 error:(id*)arg4 ;
-(BOOL)_storeValue:(id)arg1 forColumnVariable:(id)arg2 scope:(id)arg3 error:(id*)arg4 ;
-(long long)_bumpIndexWithError:(id*)arg1 ;
-(id)_scopeWithQuery:(id)arg1 ;
-(void)_cacheValue:(id)arg1 forColumnVariable:(id)arg2 scope:(id)arg3 ;
-(Class)_transportGroupClass;
-(void)_discardCachedValuesForGroup:(id)arg1 ;
-(id)_transportGroupForColumnVariable:(id)arg1 forScope:(id)arg2 ;
-(BOOL)_storeTransportGroup:(id)arg1 inColumnVariable:(id)arg2 forScope:(id)arg3 error:(id*)arg4 ;
-(void)_markFirstSyncOfPrimaryAsSuccessfulWithScope:(id)arg1 ;
-(id)_taskItemCompletionDateForScope:(id)arg1 task:(id)arg2 ;
-(void)_getLocalIndexes:(id*)arg1 cloudIndexes:(id*)arg2 forScopeIdentifiers:(id)arg3 ;
-(void)_noteEndOfResetIfNecessary;
-(BOOL)upgradeStorageToVersion:(long long)arg1 ;
-(id)recordsDesignation;
-(BOOL)forceIdentifyUknownScopesWithError:(id*)arg1 ;
-(BOOL)forcePushToTransportForActiveScopesWithError:(id*)arg1 ;
-(BOOL)allActiveScopesHasFinishedSyncs;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:39:43 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/Support/cloudphotod
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <cloudphotod/NSSecureCoding.h>

@class CKReference, CKRecordZone, NSData, CKRecordZoneID;

@interface CPLCloudKitScope : NSObject <NSSecureCoding> {

	CKReference* _rootRef;
	CKRecordZone* _zone;
	long long _options;

}

@property (nonatomic,readonly) NSData * transportScope; 
@property (nonatomic,readonly) long long databaseScope; 
@property (nonatomic,readonly) CKRecordZone * zone;                      //@synthesize zone=_zone - In the implementation block
@property (nonatomic,readonly) long long options;                        //@synthesize options=_options - In the implementation block
@property (nonatomic,readonly) CKRecordZoneID * zoneID; 
@property (getter=isShared,nonatomic,readonly) BOOL shared; 
+(BOOL)supportsSecureCoding;
+(id)_rootRecordNameForScopeType:(long long)arg1 ;
+(id)_recordNamesForScopeType:(long long)arg1 ;
+(id)_updatedLibraryInfoFromLibraryInfoForLibrary:(id)arg1 proposedScopeType:(long long*)arg2 fromCKRecords:(id)arg3 cloudKitScope:(id)arg4 ;
+(id)_libraryStateFromCKRecords:(id)arg1 scopeType:(long long)arg2 ;
+(id)_libraryStateFromCKRecordsForLibrary:(id)arg1 ;
+(id)scopeFromTransportScope:(id)arg1 ;
+(id)allRecordNamesForLibraryInfoAndState;
+(id)libraryInfoAndState:(id*)arg1 proposedScopeType:(long long*)arg2 fromCKRecords:(id)arg3 cloudKitScope:(id)arg4 ;
-(CKRecordZone *)zone;
-(long long)options;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(CKRecordZoneID *)zoneID;
-(long long)databaseScope;
-(BOOL)isShared;
-(id)initWithZoneID:(id)arg1 options:(long long)arg2 ;
-(NSData *)transportScope;
-(BOOL)supportsZoneDeleteInScope:(id)arg1 ;
-(id)shareRecordNameToDeleteInScope:(id)arg1 ;
-(id)initWithZone:(id)arg1 options:(long long)arg2 ;
-(id)updatedLibraryInfoFromLibraryInfo:(id)arg1 ckRecord:(id)arg2 scope:(id)arg3 ;
-(id)libraryStateFromCKRecord:(id)arg1 scope:(id)arg2 ;
-(id)rootRecordNameForScope:(id)arg1 ;
-(id)_rootRefForScope:(id)arg1 ;
-(id)_updatedLibraryInfoFromLibraryInfo:(id)arg1 fromCKRecords:(id)arg2 scope:(id)arg3 ;
-(id)recordsToUpdateFromLibraryInfo:(id)arg1 inScope:(id)arg2 ;
-(BOOL)supportsDeletionOfRecord:(id)arg1 inScope:(id)arg2 ;
-(BOOL)supportsDirectDeletionOfRecord:(id)arg1 inScope:(id)arg2 ;
-(id)recordIDForIdentifier:(id)arg1 ;
-(void)setupRootOnRecord:(id)arg1 scope:(id)arg2 ;
-(id)recordNamesForLibraryInfoAndStateInScope:(id)arg1 ;
-(id)libraryInfoFromCKRecords:(id)arg1 scope:(id)arg2 ;
-(id)libraryStateFromCKRecords:(id)arg1 scope:(id)arg2 ;
@end


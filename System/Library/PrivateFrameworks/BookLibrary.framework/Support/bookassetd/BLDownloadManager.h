/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 1:43:05 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/BookLibrary.framework/Support/bookassetd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, BLOSTransactionCoordinating;
@class NSObject, BLDownloadPipeline, BLDatabaseManager, BLDownloadPolicyManager;

@interface BLDownloadManager : NSObject {

	NSObject*<OS_dispatch_queue> _dispatchQueue;
	BLDownloadPipeline* _downloadPipeline;
	BLDatabaseManager* _databaseManager;
	BLDownloadPolicyManager* _downloadPolicyManager;
	id<BLOSTransactionCoordinating> _transactionCoordinator;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> dispatchQueue;                                      //@synthesize dispatchQueue=_dispatchQueue - In the implementation block
@property (nonatomic,retain) BLDownloadPipeline * downloadPipeline;                                           //@synthesize downloadPipeline=_downloadPipeline - In the implementation block
@property (assign,nonatomic,__weak) BLDatabaseManager * databaseManager;                                      //@synthesize databaseManager=_databaseManager - In the implementation block
@property (assign,nonatomic,__weak) BLDownloadPolicyManager * downloadPolicyManager;                          //@synthesize downloadPolicyManager=_downloadPolicyManager - In the implementation block
@property (assign,nonatomic,__weak) id<BLOSTransactionCoordinating> transactionCoordinator;                   //@synthesize transactionCoordinator=_transactionCoordinator - In the implementation block
@property (nonatomic,readonly) id<BLBookInstallManagerProgressDelegate> installProgressDelegate; 
+(id)downloadsDirectory;
+(void)cleanupDownloadScratchDirectoryForDownloadID:(id)arg1 ;
+(id)downloadDirectoryForDownloadID:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)dispatchQueue;
-(void)setDispatchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)cancelDownloadWithID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)pauseDownloadWithID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)resumeDownloadWithID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(BLDatabaseManager *)databaseManager;
-(void)setDatabaseManager:(BLDatabaseManager *)arg1 ;
-(id)initWithDatabaseManager:(id)arg1 downloadPolicyManager:(id)arg2 transactionCoordinator:(id)arg3 installManager:(id)arg4 ;
-(id<BLBookInstallManagerProgressDelegate>)installProgressDelegate;
-(void)checkDownloadsWithCompletion:(/*^block*/id)arg1 ;
-(void)purgeStaleDownloadsWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchDownloadListWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchDownloadFromDownloadID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)requestDownloadWithParameters:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BLDownloadPolicyManager *)downloadPolicyManager;
-(void)setDownloadPolicyManager:(BLDownloadPolicyManager *)arg1 ;
-(id<BLOSTransactionCoordinating>)transactionCoordinator;
-(void)setTransactionCoordinator:(id<BLOSTransactionCoordinating>)arg1 ;
-(BLDownloadPipeline *)downloadPipeline;
-(void)dq_purgeStaleDownloadsWithCompletion:(/*^block*/id)arg1 ;
-(void)dq_startNextDownloadsFromList:(id)arg1 ;
-(void)downloadCompletedWithDownloadID:(id)arg1 ;
-(void)setDownloadPipeline:(BLDownloadPipeline *)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:39:58 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/CoreAccessories.framework/Support/accessoryd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <accessoryd/accessoryd-Structs.h>
@class NSSet, NSLock, NSMutableSet, NSMutableDictionary;

@interface ACCExternalAccessorySessionManager : NSObject {

	NSSet* _sessionUUIDs;
	NSLock* _openEASessionsLock;
	NSMutableSet* _openEASessions;
	NSMutableDictionary* _openEASessionHandlers;
	NSMutableDictionary* _openEASessionUUIDsForEndpointUUID;

}

@property (nonatomic,retain) NSLock * openEASessionsLock;                                          //@synthesize openEASessionsLock=_openEASessionsLock - In the implementation block
@property (nonatomic,retain) NSMutableSet * openEASessions;                                        //@synthesize openEASessions=_openEASessions - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * openEASessionHandlers;                          //@synthesize openEASessionHandlers=_openEASessionHandlers - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * openEASessionUUIDsForEndpointUUID;              //@synthesize openEASessionUUIDsForEndpointUUID=_openEASessionUUIDsForEndpointUUID - In the implementation block
@property (nonatomic,readonly) NSSet * sessionUUIDs;                                               //@synthesize sessionUUIDs=_sessionUUIDs - In the implementation block
+(id)sharedManager;
+(unsigned short)_generateSessionID;
-(id)init;
-(void)_handleApplicationStateChange:(id)arg1 ;
-(BOOL)openSocketFromAccessoryToApp:(id)arg1 ;
-(BOOL)openSocketFromAppToAccessory:(id)arg1 ;
-(BOOL)outgoingEADataFromClientAvailable:(id)arg1 ;
-(id)closeSessionForEASessionUUID:(id)arg1 ;
-(BOOL)closeSessionsForPrimaryAccessoryUUID:(id)arg1 ;
-(unsigned)readAppToAccessoryDataForSession:(id)arg1 maxBufferSize:(unsigned)arg2 dataBuffer:(CFDataRef)arg3 ;
-(CFDataRef)returnAppToAccessoryDataForSession:(id)arg1 maxBufferSize:(unsigned)arg2 ;
-(void)stopIncomingDataNotificationsForEASessionUUID:(id)arg1 ;
-(void)startIncomingDataNotificationsForEASessionUUID:(id)arg1 ;
-(BOOL)handleIncomingExternalAccessoryData:(id)arg1 forSessionID:(unsigned short)arg2 ;
-(id)eaSessionUUIDForEndpointUUID:(id)arg1 ;
-(BOOL)handleIncomingExternalAccessoryData:(id)arg1 forEndpointUUID:(id)arg2 ;
-(id)eaSessionUUIDForSessionID:(unsigned short)arg1 ;
-(BOOL)accessoryCloseSessionforEASessionID:(unsigned short)arg1 ;
-(BOOL)eaClientHasOpenEASession:(id)arg1 ;
-(void)_eaNativeDataArrived:(id)arg1 ;
-(BOOL)_isSessionOpenForProtocol:(id)arg1 filterPrimaryUUID:(id)arg2 filterClientBundleID:(id)arg3 ;
-(id)_clientsOwningSessionForProtocol:(id)arg1 withAccessoryUUID:(id)arg2 ;
-(id)_sessionInfoMatchingProtocol:(id)arg1 withPrimaryAccessoryUUID:(id)arg2 ;
-(BOOL)_accessoryCloseSessionForEASessionUUID:(id)arg1 informAccessory:(BOOL)arg2 ;
-(id)_accessoryForPrimaryUUID:(id)arg1 ;
-(BOOL)_eaProtocolHasValidMatchActionForOpeningSession:(id)arg1 ;
-(BOOL)_continueOpenSessionForSingleSessionPerEAProtocol:(id)arg1 fromPrimaryAccessoryUUID:(id)arg2 fromClient:(id)arg3 ;
-(NSMutableDictionary *)openEASessionHandlers;
-(NSMutableDictionary *)openEASessionUUIDsForEndpointUUID;
-(NSLock *)openEASessionsLock;
-(NSMutableSet *)openEASessions;
-(id)sessionInfoDictionaryForSessionUUID:(id)arg1 ;
-(id)_internalCloseSessionForEASessionUUID:(id)arg1 informAccessory:(BOOL)arg2 ;
-(BOOL)_sessionUUIDClientSupportsBackgroundEA:(id)arg1 ;
-(id)_appBundleIDForSessionUUID:(id)arg1 ;
-(id)_eaSessionUUIDsOwnedByClientBundleID:(id)arg1 ;
-(id)createSessionForProtocol:(id)arg1 fromPrimaryAccessoryUUID:(id)arg2 fromClient:(id)arg3 result:(BOOL*)arg4 ;
-(id)_copySessionInfoDictionaryForSessionUUID:(id)arg1 ;
-(NSSet *)sessionUUIDs;
-(void)setOpenEASessionsLock:(NSLock *)arg1 ;
-(void)setOpenEASessions:(NSMutableSet *)arg1 ;
-(void)setOpenEASessionHandlers:(NSMutableDictionary *)arg1 ;
-(void)setOpenEASessionUUIDsForEndpointUUID:(NSMutableDictionary *)arg1 ;
@end


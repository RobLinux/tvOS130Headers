/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:39:58 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/CoreAccessories.framework/Support/accessoryd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_source;
@class NSMutableDictionary, NSString, NSDictionary, ACCUserNotification, NSXPCConnection, NSObject;

@interface OOBBTPairing2Accessory : NSObject {

	NSMutableDictionary* _componentList;
	NSString* _accessoryUID;
	NSDictionary* _accInfo;
	NSString* _activeComponentUID;
	ACCUserNotification* _userNotification;
	NSXPCConnection* _connectionToACCBluetoothPairingService;
	NSObject*<OS_dispatch_source> _waitForBeginPairingTimer;

}

@property (retain) NSMutableDictionary * componentList;                                   //@synthesize componentList=_componentList - In the implementation block
@property (retain) NSString * accessoryUID;                                               //@synthesize accessoryUID=_accessoryUID - In the implementation block
@property (retain) NSDictionary * accInfo;                                                //@synthesize accInfo=_accInfo - In the implementation block
@property (retain) NSString * activeComponentUID;                                         //@synthesize activeComponentUID=_activeComponentUID - In the implementation block
@property (readonly) NSString * name; 
@property (readonly) NSString * displayName; 
@property (readonly) NSString * model; 
@property (readonly) NSString * manufacturer; 
@property (readonly) NSString * serialNum; 
@property (readonly) NSString * fwVer; 
@property (readonly) NSString * hwVer; 
@property (readonly) BOOL carPlaySupported; 
@property (retain) ACCUserNotification * userNotification;                                //@synthesize userNotification=_userNotification - In the implementation block
@property (retain) NSXPCConnection * connectionToACCBluetoothPairingService;              //@synthesize connectionToACCBluetoothPairingService=_connectionToACCBluetoothPairingService - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> waitForBeginPairingTimer;                //@synthesize waitForBeginPairingTimer=_waitForBeginPairingTimer - In the implementation block
+(void)addAccessory:(id)arg1 ;
+(id)accessoryList;
+(id)accessoryListLock;
+(id)accessoryForUID:(id)arg1 ;
+(void)removeAccessoryForUID:(id)arg1 ;
-(NSString *)name;
-(NSString *)displayName;
-(NSString *)model;
-(NSString *)manufacturer;
-(void)addComponent:(id)arg1 ;
-(void)removeComponent:(id)arg1 ;
-(ACCUserNotification *)userNotification;
-(void)setUserNotification:(ACCUserNotification *)arg1 ;
-(NSString *)accessoryUID;
-(void)setAccessoryUID:(NSString *)arg1 ;
-(NSMutableDictionary *)componentList;
-(void)setComponentList:(NSMutableDictionary *)arg1 ;
-(void)connectToACCBluetoothPairingService;
-(BOOL)checkAlreadyPairedComponent:(id)arg1 ;
-(void)disconnectFromACCBluetoothPairingService;
-(id)initWithUID:(id)arg1 accInfo:(id)arg2 ;
-(NSString *)serialNum;
-(NSString *)fwVer;
-(NSString *)hwVer;
-(BOOL)carPlaySupported;
-(id)getComponentForUID:(id)arg1 ;
-(id)getPendingComponent;
-(id)getDeviceMacAddress;
-(int)checkComponentsAlreadyPaired;
-(void)startPairing:(id)arg1 macAddr:(id)arg2 pairingDataP192:(id)arg3 pairingDataP256:(id)arg4 ;
-(void)cancelPairing:(id)arg1 ;
-(NSDictionary *)accInfo;
-(void)setAccInfo:(NSDictionary *)arg1 ;
-(NSString *)activeComponentUID;
-(void)setActiveComponentUID:(NSString *)arg1 ;
-(NSXPCConnection *)connectionToACCBluetoothPairingService;
-(void)setConnectionToACCBluetoothPairingService:(NSXPCConnection *)arg1 ;
-(NSObject*<OS_dispatch_source>)waitForBeginPairingTimer;
-(void)setWaitForBeginPairingTimer:(NSObject*<OS_dispatch_source>)arg1 ;
@end


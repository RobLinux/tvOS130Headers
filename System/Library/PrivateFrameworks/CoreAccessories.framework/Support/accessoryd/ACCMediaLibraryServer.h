/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:39:58 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/CoreAccessories.framework/Support/accessoryd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <accessoryd/ACCFeatureServer.h>
#import <accessoryd/NSXPCListenerDelegate.h>

@class NSMutableDictionary, NSString;

@interface ACCMediaLibraryServer : ACCFeatureServer <NSXPCListenerDelegate> {

	NSMutableDictionary* _mediaLibraryProviderInfoList;
	NSMutableDictionary* _mediaLibraryProviderInfoListByProviderUID;
	NSMutableDictionary* _registeredAccessoryConnections;

}

@property (nonatomic,readonly) NSMutableDictionary * mediaLibraryProviderInfoList;                           //@synthesize mediaLibraryProviderInfoList=_mediaLibraryProviderInfoList - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * mediaLibraryProviderInfoListByProviderUID;              //@synthesize mediaLibraryProviderInfoListByProviderUID=_mediaLibraryProviderInfoListByProviderUID - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * registeredAccessoryConnections;                         //@synthesize registeredAccessoryConnections=_registeredAccessoryConnections - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedServer;
-(void)dealloc;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(BOOL)shouldAcceptXPCConnection:(id)arg1 ;
-(id)initWithXPCServiceName:(id)arg1 andFeatureNotification:(const char*)arg2 ;
-(void)iterateAttachedConnectionsSync:(/*^block*/id)arg1 ;
-(NSMutableDictionary *)registeredAccessoryConnections;
-(void)accessoryMediaLibraryAttached:(id)arg1 windowPerLibrary:(unsigned)arg2 ;
-(void)accessoryMediaLibraryDetached:(id)arg1 ;
-(void)accessoryMediaLibraryUpdate:(id)arg1 windowPerLibrary:(unsigned)arg2 ;
-(void)requestMediaLibraryUpdate:(id)arg1 ;
-(void)confirmUpdate:(id)arg1 library:(id)arg2 lastRevision:(id)arg3 updateCount:(unsigned)arg4 ;
-(void)confirmPlaylistContentUpdate:(id)arg1 library:(id)arg2 lastRevision:(id)arg3 ;
-(void)startMediaLibraryUpdate:(id)arg1 library:(id)arg2 lastRevision:(id)arg3 mediaItemProperties:(unsigned long long)arg4 playlistProperties:(unsigned long long)arg5 playlistContentStyle:(int)arg6 playlistContentProperties:(unsigned long long)arg7 reqOptions:(unsigned long long)arg8 ;
-(void)stopMediaLibraryUpdate:(id)arg1 library:(id)arg2 ;
-(void)playCurrentSelection:(id)arg1 library:(id)arg2 ;
-(void)playItems:(id)arg1 library:(id)arg2 itemList:(id)arg3 startIndex:(unsigned)arg4 ;
-(void)playCollection:(id)arg1 library:(id)arg2 collection:(unsigned long long)arg3 type:(int)arg4 startItem:(unsigned long long)arg5 ;
-(void)playCollection:(id)arg1 library:(id)arg2 collection:(unsigned long long)arg3 type:(int)arg4 startIndex:(unsigned)arg5 ;
-(void)playAllSongs:(id)arg1 library:(id)arg2 startItem:(unsigned long long)arg3 ;
-(void)handleMediaLibraryList:(id)arg1 provider:(id)arg2 xpcConn:(id)arg3 ;
-(BOOL)nexUpdateStartFull:(id)arg1 accessory:(id)arg2 ;
-(void)resetUpdate:(id)arg1 accessory:(id)arg2 ;
-(void)iterateMediaLibraryProviderListSync:(/*^block*/id)arg1 ;
-(BOOL)_isDifferentLibraryList:(id)arg1 otherList:(id)arg2 ;
-(void)sendAvailableLibrariesToAccessory:(id)arg1 ;
-(void)stopAllMediaLibraryUpdate:(id)arg1 ;
-(NSMutableDictionary *)mediaLibraryProviderInfoList;
-(BOOL)findMediaLibraryInfoSync:(id)arg1 block:(/*^block*/id)arg2 ;
-(NSMutableDictionary *)mediaLibraryProviderInfoListByProviderUID;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:39:57 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/CoreAccessories.framework/Support/accessoryd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <accessoryd/ACCFeatureServer.h>
#import <accessoryd/NSXPCListenerDelegate.h>

@protocol AccessoryNowPlayingXPCClientProtocol;
@class NSMutableArray, NSXPCConnection, NSString;

@interface ACCNowPlayingServer : ACCFeatureServer <NSXPCListenerDelegate> {

	NSMutableArray* _clientConnections;
	NSXPCConnection* _activeConnection;
	id<AccessoryNowPlayingXPCClientProtocol> _remoteObject;

}

@property (nonatomic,retain) NSMutableArray * clientConnections;                                 //@synthesize clientConnections=_clientConnections - In the implementation block
@property (nonatomic,retain) NSXPCConnection * activeConnection;                                 //@synthesize activeConnection=_activeConnection - In the implementation block
@property (nonatomic,retain) id<AccessoryNowPlayingXPCClientProtocol> remoteObject;              //@synthesize remoteObject=_remoteObject - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedServer;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(id<AccessoryNowPlayingXPCClientProtocol>)remoteObject;
-(void)setRemoteObject:(id<AccessoryNowPlayingXPCClientProtocol>)arg1 ;
-(NSMutableArray *)clientConnections;
-(void)setClientConnections:(NSMutableArray *)arg1 ;
-(NSXPCConnection *)activeConnection;
-(void)setActiveConnection:(NSXPCConnection *)arg1 ;
-(BOOL)shouldAcceptXPCConnection:(id)arg1 ;
-(void)sendUpdatedSubscriberList;
-(id)initWithXPCServiceName:(id)arg1 andFeatureNotification:(const char*)arg2 ;
-(void)requestPlaybackQueueListInfo:(id)arg1 requestID:(id)arg2 startIndex:(unsigned)arg3 upToCount:(unsigned)arg4 infoMask:(unsigned)arg5 ;
-(void)cancelRequestPlaybackQueueListInfo:(id)arg1 requestID:(id)arg2 ;
-(void)triggerMediaItemAttributesUpdate;
-(void)triggerMediaItemArtworkUpdate;
-(void)triggerPlaybackAttributesUpdate;
-(void)setPlaybackElapsedTime:(id)arg1 ;
-(void)setPlaybackQueueIndex:(id)arg1 ;
@end


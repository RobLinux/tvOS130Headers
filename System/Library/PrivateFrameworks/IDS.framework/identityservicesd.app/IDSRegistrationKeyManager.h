/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:41:52 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <identityservicesd/identityservicesd-Structs.h>
#import <identityservicesd/IDSClientDataRegistrationKeyManager.h>
#import <identityservicesd/IMSystemMonitorListener.h>

@protocol IDSRegistrationKeyManagerKeyPairProvider;
@class NSRecursiveLock, IDSNGMKeyLoadingErrorContainer, IDSRegistrationKeyConfig, IMTimer, IMSystemMonitor, IDSKeychainWrapper, IDSRegistrationKeyManagerIdentityDataSource, IDSRateLimiter;

@interface IDSRegistrationKeyManager : NSObject <IDSClientDataRegistrationKeyManager, IMSystemMonitorListener> {

	NSRecursiveLock* _lock;
	BOOL _forceRoll;
	BOOL _loaded;
	BOOL _identityLoaded;
	BOOL _detectedMigrationNeeded;
	BOOL _needsReRegister;
	BOOL _pendingIdentityRegeneration;
	BOOL _hasCheckedMigrationThisLaunch;
	BOOL _failedToGeneratedPublicDataForNGMIdentity;
	IDSNGMKeyLoadingErrorContainer* _recentKeyLoadingErrors;
	IDSRegistrationKeyConfig* _config;
	IMTimer* _purgePreviousIdentityTimer;
	IMTimer* _regenerateIdentityTimer;
	IMSystemMonitor* _systemMonitor;
	IDSKeychainWrapper* _keychainWrapper;
	IDSRegistrationKeyManagerIdentityDataSource* _identityDataSource;
	IDSRateLimiter* _loadingRateLimiter;
	id<IDSRegistrationKeyManagerKeyPairProvider> _keyPairProvider;
	BOOL _allowPairingIdentities;
	BOOL _allowRegenerateRegisteredIdentity;

}

@property (nonatomic,retain) IMSystemMonitor * systemMonitor;                                               //@synthesize systemMonitor=_systemMonitor - In the implementation block
@property (nonatomic,retain) IDSKeychainWrapper * keychainWrapper;                                          //@synthesize keychainWrapper=_keychainWrapper - In the implementation block
@property (nonatomic,retain) IDSRateLimiter * loadingRateLimiter;                                           //@synthesize loadingRateLimiter=_loadingRateLimiter - In the implementation block
@property (nonatomic,retain) id<IDSRegistrationKeyManagerKeyPairProvider> keyPairProvider;                  //@synthesize keyPairProvider=_keyPairProvider - In the implementation block
@property (assign,nonatomic) BOOL allowPairingIdentities;                                                   //@synthesize allowPairingIdentities=_allowPairingIdentities - In the implementation block
@property (assign,nonatomic) BOOL allowRegenerateRegisteredIdentity;                                        //@synthesize allowRegenerateRegisteredIdentity=_allowRegenerateRegisteredIdentity - In the implementation block
@property (nonatomic,retain) IDSRegistrationKeyConfig * config;                                             //@synthesize config=_config - In the implementation block
@property (nonatomic,retain) IDSRegistrationKeyManagerIdentityDataSource * identityDataSource;              //@synthesize identityDataSource=_identityDataSource - In the implementation block
@property (assign,nonatomic) BOOL forceRoll;                                                                //@synthesize forceRoll=_forceRoll - In the implementation block
+(id)sharedInstance;
+(BOOL)setupKeys;
-(id)init;
-(void)dealloc;
-(IDSRegistrationKeyConfig *)config;
-(void)setConfig:(IDSRegistrationKeyConfig *)arg1 ;
-(void)systemDidLeaveFirstDataProtectionLock;
-(void)systemDidLeaveDataProtectionLock;
-(IMSystemMonitor *)systemMonitor;
-(void)setSystemMonitor:(IMSystemMonitor *)arg1 ;
-(_SecKey*)identityPrivateKey;
-(_SecKey*)identityPublicKey;
-(void)regenerateRegisteredIdentity;
-(BOOL)_save;
-(IDSKeychainWrapper *)keychainWrapper;
-(void)setKeychainWrapper:(IDSKeychainWrapper *)arg1 ;
-(void)_loadIfNeeded:(BOOL)arg1 ;
-(void)regeneratePairingIdentitiesIncludingClassD:(BOOL)arg1 ;
-(BOOL)_migrateRegisteredIdentityFromClassDtoClassCIfNeeded;
-(void)loadPairingIdentities:(BOOL)arg1 ;
-(IDSRegistrationKeyManagerIdentityDataSource *)identityDataSource;
-(BOOL)_serializeAndPersistIdentityContainer:(id)arg1 identityIdentifier:(long long)arg2 deleteIfNull:(BOOL)arg3 ;
-(void)_serializeAndPersistBuildOfIdentityGeneration:(id)arg1 itemName:(id)arg2 ;
-(BOOL)allowPairingIdentities;
-(id<IDSRegistrationKeyManagerKeyPairProvider>)keyPairProvider;
-(BOOL)_isUnderFirstDataProtectionLock;
-(id)_loadAndDeserializeBuildOfIdentityGenerationForItemName:(id)arg1 ;
-(id)accountSigningKeyReference;
-(double)_purgePreviousIdentityDelay;
-(void)_schedulePurgeOfPreviousIdentityAfterDelay:(double)arg1 ;
-(BOOL)_generateUnregisteredIdentityWithExistingLegacyIdentity:(id)arg1 existingNGMIdentity:(id)arg2 ;
-(void)_notifyUnregisteredIdentityRegenerated;
-(BOOL)_shouldRegenerateRegisteredIdentity;
-(double)_identityRegenerationDelay;
-(void)_scheduleRegenerationOfRegisteredIdentityAfterDelay:(double)arg1 ;
-(id)_getPublicMessageProtectionDataForIdentity:(id)arg1 ;
-(id)initWithSystemMonitor:(id)arg1 keychainWrapper:(id)arg2 loadingRateLimiter:(id)arg3 identityDataSource:(id)arg4 allowPairingIdentities:(BOOL)arg5 allowRegenerateRegisteredIdentity:(BOOL)arg6 keyPairProvider:(id)arg7 ;
-(id)fullDeviceIdentityContainerUsableForKeyType:(unsigned long long)arg1 ;
-(id)latestMessageProtectionFullIdentityForDataProtectionClass:(unsigned)arg1 ;
-(BOOL)_loadClassAIdentityIfNeeded:(id*)arg1 ;
-(BOOL)_loadClassCIdentityIfNeeded:(id*)arg1 ;
-(BOOL)_loadClassDIdentityIfNeeded:(id*)arg1 ;
-(id)_generateIdentityWithExistingIdentity:(id)arg1 identifier:(long long)arg2 dataProtectionClass:(long long)arg3 ;
-(void)_saveClassXIdentity:(id*)arg1 savedIdentity:(id*)arg2 protectionClass:(long long)arg3 savedUnsavedIdentity:(BOOL*)arg4 ;
-(BOOL)_isSecurelyStoringIdentity:(id)arg1 withExpectedProtectionClass:(long long)arg2 ;
-(BOOL)_migrateIdentity:(id)arg1 toProtectionClass:(long long)arg2 ;
-(double)_notifyRegenerateDelay;
-(SecMPFullIdentityRef)latestCopyMessageProtectionIdentityForDataProtectionClass:(unsigned)arg1 ;
-(id)publicMessageProtectionDeviceIdentityContainerToRegister:(id*)arg1 ;
-(void)_ensureIdentity:(id*)arg1 savedIndentity:(id*)arg2 protectionClass:(long long)arg3 didSaveIdentity:(BOOL*)arg4 ;
-(id)publicMessageProtectionDataToRegisterForClassA;
-(id)publicMessageProtectionDataToRegisterForClassC;
-(id)publicMessageProtectionDataToRegisterForClassD;
-(BOOL)requiresKeychainMigration;
-(BOOL)allowRegenerateRegisteredIdentity;
-(void)_purgePreviousIdentityTimerFired;
-(void)_purgePreviousIdentityFromMemoryAndKeychain;
-(void)_regenerateIdentityTimerFired;
-(double)_randomizedIdentityRegenerationInterval;
-(void)setForceRoll:(BOOL)arg1 ;
-(id)generateCSRForUserID:(id)arg1 ;
-(id)fullDeviceIdentityContainer;
-(id)previousFullDeviceIdentityContainer;
-(id)publicMessageProtectionIdentityDataToRegisterWithError:(id*)arg1 ;
-(id)keyTransparencyVersionNumberToRegisterForServiceType:(id)arg1 ;
-(SecMPFullIdentityRef)copyMessageProtectionIdentity;
-(SecMPFullIdentityRef)copyPreviousMessageProtectionIdentity;
-(id)publicMessageProtectionData;
-(id)fullMessageProtectionIdentity;
-(id)previousFullMessageProtectionIdentity;
-(id)fullMessageProtectionIdentityForDataProtectionClass:(unsigned)arg1 ;
-(void)notePublicIdentityDidRegisterLegacyData:(id)arg1 ngmIdentityData:(id)arg2 ngmPrekeyData:(id)arg3 ;
-(void)purgeMessageProtectionIdentity;
-(id)keyPairSignature;
-(BOOL)needsPublicDataUpdated;
-(BOOL)isMigratedKeyPairSignature;
-(BOOL)isUsingSecureStorageForClassA;
-(BOOL)isUsingSecureStorageForClassC;
-(BOOL)migrateToSecureStorageForClassA;
-(BOOL)migrateToSecureStorageForClassC;
-(id)errorContainerToReport;
-(IDSRateLimiter *)loadingRateLimiter;
-(void)setLoadingRateLimiter:(IDSRateLimiter *)arg1 ;
-(void)setIdentityDataSource:(IDSRegistrationKeyManagerIdentityDataSource *)arg1 ;
-(void)setAllowPairingIdentities:(BOOL)arg1 ;
-(void)setAllowRegenerateRegisteredIdentity:(BOOL)arg1 ;
-(BOOL)forceRoll;
-(void)setKeyPairProvider:(id<IDSRegistrationKeyManagerKeyPairProvider>)arg1 ;
@end


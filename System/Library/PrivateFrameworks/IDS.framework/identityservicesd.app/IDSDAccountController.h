/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:41:54 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <identityservicesd/IDSUTunDeliveryControllerConnectivityDelegate.h>

@protocol OS_dispatch_queue, IDSDAccountControllerDeviceSupport, IDSDAccountControllerDelegate;
@class NSMutableDictionary, NSMutableSet, NSRecursiveLock, NSObject, IDSSystemAccountAdapter, IDSDServiceController, IDSRegistrationController, NSArray, NSSet, NSString;

@interface IDSDAccountController : NSObject <IDSUTunDeliveryControllerConnectivityDelegate> {

	NSMutableDictionary* _accountIDMap;
	NSMutableSet* _enabledAccounts;
	NSMutableDictionary* _deviceProperties;
	NSRecursiveLock* _accountIDMapLock;
	BOOL _accountsLoaded;
	BOOL _isLoading;
	BOOL _hasHardDeregistered;
	NSObject*<OS_dispatch_queue> _authkitQueue;
	IDSSystemAccountAdapter* _systemAccountAdapter;
	IDSDServiceController* _serviceController;
	IDSRegistrationController* _registrationController;
	id<IDSDAccountControllerDeviceSupport> _deviceSupport;
	id<IDSDAccountControllerDelegate> _delegate;

}

@property (nonatomic,readonly) NSArray * accounts; 
@property (nonatomic,readonly) NSSet * enabledAccounts; 
@property (nonatomic,readonly) BOOL hasHardDeregistered;                              //@synthesize hasHardDeregistered=_hasHardDeregistered - In the implementation block
@property (nonatomic,retain) id<IDSDAccountControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
+(BOOL)isDefaultPairedDeviceFromID:(id)arg1 accountUniqueID:(id)arg2 serviceName:(id)arg3 ;
-(id)init;
-(void)dealloc;
-(id<IDSDAccountControllerDelegate>)delegate;
-(void)setDelegate:(id<IDSDAccountControllerDelegate>)arg1 ;
-(NSArray *)accounts;
-(BOOL)isiCloudSignedIn;
-(BOOL)isiTunesSignedIn;
-(id)daemon;
-(BOOL)isLoading;
-(void)removeAccount:(id)arg1 ;
-(id)userDefaults;
-(id)registrationListener;
-(void)addAccount:(id)arg1 ;
-(NSSet *)enabledAccounts;
-(void)_removeAccount:(id)arg1 ;
-(void)hardDeregister;
-(void)triggerFinalDeregister;
-(void)startLocalSetup;
-(void)stopLocalSetup;
-(id)accountWithUniqueID:(id)arg1 ;
-(void)delayedSaveSettings;
-(id)deviceNameForDeviceID:(id)arg1 ;
-(void)issueGetDependentRequest;
-(void)updateExpiredDependent;
-(void)enableAccountWithUniqueID:(id)arg1 ;
-(id)appleIDAccountOnService:(id)arg1 ;
-(void)issueDependentIDQueriesWithCompletionBlock:(/*^block*/id)arg1 ;
-(id)deviceIDForPushToken:(id)arg1 ;
-(id)accountsOnService:(id)arg1 ;
-(id)accountsOfAdHocType:(unsigned)arg1 ;
-(void)disableAccountWithUniqueID:(id)arg1 ;
-(id)accountsOnService:(id)arg1 withType:(int)arg2 ;
-(id)existingAccountOnService:(id)arg1 withType:(int)arg2 loginID:(id)arg3 ;
-(void)setupLocalAccountForService:(id)arg1 ;
-(id)localAccountOnService:(id)arg1 ;
-(void)enablePrimaryAccountWithUniqueID:(id)arg1 ;
-(id)accountWithServiceName:(id)arg1 loginID:(id)arg2 ;
-(void)addPrimaryAccount:(id)arg1 ;
-(BOOL)hasHardDeregistered;
-(BOOL)isLocalSetupEnabled;
-(BOOL)hasActiveSMSAccount;
-(void)updateDevicePropertiesWithDevices:(id)arg1 ;
-(BOOL)isEnabledAccount:(id)arg1 ;
-(void)disablePrimaryAccountWithUniqueID:(id)arg1 ;
-(id)accountsWithType:(int)arg1 ;
-(void)loadStoredAccounts;
-(void)deliveryController:(id)arg1 uniqueID:(id)arg2 isNearby:(BOOL)arg3 ;
-(void)deliveryController:(id)arg1 uniqueID:(id)arg2 isConnected:(BOOL)arg3 ;
-(void)deliveryController:(id)arg1 uniqueID:(id)arg2 isCloudConnected:(BOOL)arg3 ;
-(void)_servicesRemoved:(id)arg1 ;
-(void)_servicesChanged;
-(void)_registerForAllRegistrationsSucceeded;
-(void)loadDeviceProperties;
-(id)initWithServiceController:(id)arg1 registrationController:(id)arg2 systemAccountAdapter:(id)arg3 deviceSupport:(id)arg4 ;
-(void)_storeAccounts;
-(void)_disableAccountWithUniqueID:(id)arg1 ;
-(void)_cleanUpAccountCredentialForRemovedAccount:(id)arg1 ;
-(id)_inUseUsernames;
-(id)_inUseProfileIDs;
-(void)_addAccount:(id)arg1 ;
-(void)_setupAdHocAccountsForPrimaryAccount:(id)arg1 ;
-(void)_removePrimaryAccount:(id)arg1 ;
-(void)_disablePrimaryAccountWithUniqueID:(id)arg1 userAction:(BOOL)arg2 ;
-(void)_enableAccountWithUniqueID:(id)arg1 ;
-(void)_setupLocalAccounts;
-(void)_setupUsingRemoteInfo;
-(void)_setupForLocal;
-(void)_setupAdHocAccounts;
-(void)_cleanupLocalAccounts;
-(void)_migrateLegacyAccounts1;
-(void)_migrateLegacyAccounts2;
-(id)_legacyAccountsOnService:(id)arg1 ;
-(void)_persistAccounts:(id)arg1 ;
-(id)_preferencesOnDomain:(id)arg1 ;
-(BOOL)hasForcedReRegistered;
-(void)issueGetDependentRequestForAccount:(id)arg1 ;
-(void)_refreshLocalAccounts;
-(void)_migrateLegacyAccounts;
-(BOOL)_loadAndEnableStoredAccounts;
-(void)_loadAndEnableStoredLegacyAccounts;
-(void)_cleanupLegacyAccounts;
-(void)_cleanupLegacyLocalAccounts;
-(void)_setupLinkedAccounts;
-(void)_cleanUpAccountCredentialStore;
-(void)_resumeGDRReAuthenticateIfNecessary;
-(id)_createAccountWithDictionary:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 ;
-(void)_addAccountDuringInitialSetup:(id)arg1 ;
-(void)_updateDeviceProperties;
-(void)saveDevicePropertiesWithOldKeys:(id)arg1 ;
-(id)accountWithServiceName:(id)arg1 aliasURI:(id)arg2 ;
-(void)forceRemoveAccount:(id)arg1 ;
-(id)accountOnService:(id)arg1 withAliasURI:(id)arg2 ;
-(id)accountOnService:(id)arg1 withLoginID:(id)arg2 ;
-(id)accountWithServiceName:(id)arg1 myID:(id)arg2 ;
-(id)accountUniqueIDsWithType:(int)arg1 ;
-(id)primaryAccountForAdHocAccount:(id)arg1 ;
-(id)threadSafeServiceWithAccountUniqueID:(id)arg1 ;
-(id)_strippedAccountInfo:(id)arg1 ;
-(BOOL)_isAccountInfoRegistered:(id)arg1 ;
-(void)__pairedDeviceStateUpdated;
-(BOOL)accountsLoaded;
-(id)registeredAccountsOnService:(id)arg1 ;
-(void)issueGetDependentAndGetHandlesRequest;
-(id)cloudPairedIDForDeviceID:(id)arg1 ;
-(id)pushTokenForDeviceID:(id)arg1 ;
-(id)publicKeyForDeviceID:(id)arg1 ;
-(void)setNSUUID:(id)arg1 onDeviceWithUniqueID:(id)arg2 ;
-(id)propertiesForDeviceWithUniqueID:(id)arg1 ;
-(void)authKitAccountUpdate:(id)arg1 ;
-(id)deviceCertificateForService:(id)arg1 uri:(id)arg2 ;
@end


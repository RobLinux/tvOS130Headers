/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:41:49 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/HomeSharing.framework/Support/itunescloudd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <itunescloudd/NSXPCListenerDelegate.h>

@protocol OS_dispatch_queue;
@class NSXPCListener, NSObject, NSOperationQueue, SSVPlayActivityController, NSString;

@interface CloudPlayActivityRequestListener : NSObject <NSXPCListenerDelegate> {

	NSXPCListener* _listener;
	NSObject*<OS_dispatch_queue> _queue;
	NSOperationQueue* _flushOperationQueue;
	long long _flushOperationCount;
	double _nextFlushPlayActivityFireSyncInterval;
	double _testNextFlushPlayActivityFireSyncInterval;
	SSVPlayActivityController* _playActivityController;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(id)init;
-(id)_init;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(void)start;
-(void)stop;
-(void)completePendingPlayActivityEvents:(id)arg1 forSessionToken:(unsigned long long)arg2 result:(unsigned long long)arg3 withReplyBlock:(/*^block*/id)arg4 ;
-(void)flushPlayActivityEventsForEndPointIdentifier:(id)arg1 withReplyBlock:(/*^block*/id)arg2 ;
-(void)insertPlayActivityEvents:(id)arg1 withReplyBlock:(/*^block*/id)arg2 ;
-(void)removePlayActivityEventsUpToRevision:(unsigned long long)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)removePlayActivityEventsUptoRevision:(unsigned long long)arg1 withReplyBlock:(/*^block*/id)arg2 ;
-(void)setRevision:(unsigned long long)arg1 revisionVersionToken:(id)arg2 forEndpointIdentifier:(id)arg3 withReplyBlock:(/*^block*/id)arg4 ;
-(void)acquirePendingPlayActivityEventsForEndpointIdentifier:(id)arg1 storeAccountID:(unsigned long long)arg2 shouldFilterStoreAccountID:(BOOL)arg3 withReplyBlock:(/*^block*/id)arg4 ;
-(void)acquirePendingPlayActivityEventsForEndpointIdentifier:(id)arg1 withStoreAccountID:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)acquirePendingPlayActivityEventsForEndpointIdentifier:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)completePendingPlayActivityEvents:(id)arg1 forSessionToken:(unsigned long long)arg2 withResult:(unsigned long long)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)flushPendingPlayActivityEventsForEndpointIdentifier:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)getHasPendingPlayEventsForEndpointIdentifier:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)recordPlayActivityEvents:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)setCurrentRevision:(unsigned long long)arg1 revisionVersionToken:(id)arg2 forEndpointIdentifier:(id)arg3 withCompletionHandler:(/*^block*/id)arg4 ;
-(void)_playActivityControllerEndpointRevisionInformationDidChangeNotification:(id)arg1 ;
-(void)_playActivityControllerDidRecordEventsNotification:(id)arg1 ;
-(void)_scheduleNextPlayActivityFlushOperationWithCriteria:(id)arg1 ;
-(void)_flushPlayActivityEventsForEndPointIdentifier:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(id)_criteriaDictionaryForEndPointIdentifier:(id)arg1 withPostFrequency:(double)arg2 ;
-(void)_timeIntervalForNextFlushOperationWithReplyBlock:(/*^block*/id)arg1 ;
-(BOOL)_isValidTimeInterval:(double)arg1 ;
@end


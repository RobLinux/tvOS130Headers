/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:41:49 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/HomeSharing.framework/Support/itunescloudd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <itunescloudd/BaseRequestHandler.h>
#import <itunescloudd/ICEnvironmentMonitorObserver.h>
#import <itunescloudd/LibraryManaging.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class SagaLibrary, SagaArtworkImporter, NSObject, CloudUpdateLibraryOperation, NSMutableArray, NSOperationQueue, NSString;

@interface SagaRequestHandler : BaseRequestHandler <ICEnvironmentMonitorObserver, LibraryManaging> {

	SagaLibrary* _library;
	SagaArtworkImporter* _artworkImporter;
	NSObject*<OS_dispatch_queue> _uploadItemPropertiesQueue;
	NSObject*<OS_dispatch_queue> _uploadPlaylistPropertiesQueue;
	NSObject*<OS_dispatch_queue> _updateCloudLibraryQueue;
	NSObject*<OS_dispatch_queue> _retryCloudAuthenticationQueue;
	CloudUpdateLibraryOperation* _updateCloudLibraryOperation;
	NSMutableArray* _updateLibraryCompletionHandlers;
	NSObject*<OS_dispatch_source> _itemPropertiesCoalescingTimer;
	NSObject*<OS_dispatch_source> _playlistPropertiesCoalescingTimer;
	NSOperationQueue* _autoEnableOperationQueue;
	NSOperationQueue* _autoRetryCloudAuthenticateOperationQueue;
	unsigned long long _autoEnableFailureCount;
	unsigned long long _autoRetryCloudAuthenticateFailureCount;
	BOOL _autoEnableRetryScheduled;
	BOOL _autoRetryCloudAuthenticateScheduled;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)handler;
+(id)handlers;
-(id)init;
-(void)dealloc;
-(float)updateProgress;
-(id)initWithConfiguration:(id)arg1 ;
-(id)_library;
-(void)deauthenticateAndDisableActiveLockerAccountWithCompletion:(/*^block*/id)arg1 ;
-(void)environmentMonitorDidChangePower:(id)arg1 ;
-(void)loadArtworkInfoForSagaIDs:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)loadArtworkInfoForContainerSagaIDs:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)loadScreenshotInfoForSagaIDs:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setCloudAddToPlaylistBehavior:(long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)createPlaylistWithPersistentID:(long long)arg1 properties:(id)arg2 trackList:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)setPlaylistProperties:(id)arg1 trackList:(id)arg2 forPlaylistPersistentID:(long long)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)addStoreItemWithAdamID:(long long)arg1 referral:(id)arg2 toPlaylistWithPersistentID:(long long)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)addItemWithSagaID:(unsigned long long)arg1 toPlaylistWithPersistentID:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)publishPlaylistWithSagaID:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)uploadArtworkForPlaylistWithPersistentID:(long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)addStoreItemWithAdamID:(long long)arg1 referral:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)addStorePlaylistWithGlobalID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)removePlaylistsWithSagaIDs:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)removeItemsWithSagaIDs:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)becomeActive;
-(void)deauthenticateWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)importItemArtworkForSagaID:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)importScreenshotForSagaID:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)importContainerArtworkForSagaID:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)deprioritizeItemArtworkForSagaID:(unsigned long long)arg1 ;
-(void)deprioritizeScreenshotForSagaID:(unsigned long long)arg1 ;
-(void)deprioritizeContainerArtworkForSagaID:(unsigned long long)arg1 ;
-(void)loadGeniusItemsForSagaID:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)updateLibraryWithReason:(long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)becomeInactiveWithDeauthentication:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)decreasePriorityForAllOperations;
-(void)increasePriorityForAllOperations;
-(void)cancelOperationsWithCompletion:(/*^block*/id)arg1 ;
-(void)_handleMusicSubscriptionStatusDidChangeNotification:(id)arg1 ;
-(void)addOperation:(id)arg1 priority:(int)arg2 ;
-(void)addBackgroundOperation:(id)arg1 priority:(int)arg2 ;
-(void)enableCloudLibraryForDaemonStartup;
-(void)cancelPendingChangesWithCompletion:(/*^block*/id)arg1 ;
-(void)_handleAutomaticEnablingOfCloudLibraryForReason:(long long)arg1 ;
-(BOOL)_isValidReasonForOverride:(long long)arg1 ;
-(void)_handleAutomaticEnablingOfCloudLibraryError:(id)arg1 reason:(long long)arg2 ;
-(void)_updateLibraryWithRequestReason:(long long)arg1 enableICMLReason:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)authenticateAndStartInitialImport:(BOOL)arg1 mergeWithCloudLibrary:(BOOL)arg2 isExplicitUserAction:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)deauthenticateDeletingDB:(BOOL)arg1 disableActiveLockerAccount:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)uploadItemPropertiesWithMinimumTimeInterval:(double)arg1 ;
-(void)uploadPlaylistPropertiesWithMinimumTimeInterval:(double)arg1 ;
-(void)_addLibraryOperation:(id)arg1 priority:(int)arg2 noLibraryHandler:(/*^block*/id)arg3 ;
-(void)updateItemPlayDataWithCompletionHandler:(/*^block*/id)arg1 ;
-(long long)_cloudLibraryEnableReasonFromICRequestReason:(long long)arg1 ;
-(void)_authenticateAndStartInitialImport:(BOOL)arg1 mergeWithCloudLibrary:(BOOL)arg2 isExplicitUserAction:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)_handleAutomaticAuthenticatingOfCloudLibraryStartInitialImport:(BOOL)arg1 mergeWithCloudLibrary:(BOOL)arg2 isExplicitUserAction:(BOOL)arg3 ;
-(void)_authenticateWithMergeToCloudLibraryPreference:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(BOOL)_isValidReason:(long long)arg1 forInstallDispositionWithProperties:(id)arg2 ;
-(BOOL)_isInstallDispositionUpgradeOrRestoreFromBackup;
-(void)performInitialLibraryUpdateWithCompletion:(/*^block*/id)arg1 ;
-(void)cancelPendingChanges;
-(void)updatePlaylistPlayDataWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)createPlaylistWithPersistentID:(long long)arg1 properties:(id)arg2 trackList:(id)arg3 requestingBundleID:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)addGeniusPlaylistWithPersistentID:(long long)arg1 name:(id)arg2 seedItemIDs:(id)arg3 itemIDs:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)addStoreItemWithOpaqueID:(id)arg1 toPlaylistWithPersistentID:(long long)arg2 requestingBundleID:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)updateSubscribedPlaylistsWithSagaIDs:(id)arg1 ignoreMinRefreshInterval:(BOOL)arg2 requestReason:(long long)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)addStoreItemWithOpaqueID:(id)arg1 requestingBundleID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setAlbumProperties:(id)arg1 forItemsWithAlbumPersistentID:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)isUpdateInProgressWithIsInitialImport:(BOOL*)arg1 ;
-(void)setItemProperties:(id)arg1 forSagaID:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)loadLastKnownEnableICMLStatusWithCompletionHandler:(/*^block*/id)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:38:54 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/AppStoreDaemon.framework/Support/appstored
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <appstored/SQLiteMemoryEntity.h>

@class NSString, NSNumber, NSArray, NSURL, NSDictionary;

@interface ODRAssetPack : SQLiteMemoryEntity

@property (nonatomic,readonly) NSString * applicationBundleID; 
@property (nonatomic,readonly) NSString * bundleKey; 
@property (nonatomic,readonly) NSNumber * chunkSize; 
@property (nonatomic,copy) NSNumber * downloadIdentifier; 
@property (nonatomic,readonly) NSNumber * downloadPriority; 
@property (nonatomic,copy) NSArray * downloadRequestUUIDs; 
@property (assign,nonatomic) BOOL effectiveAlwaysPreserve; 
@property (assign,nonatomic) double effectivePreservationPriority; 
@property (nonatomic,readonly) NSNumber * fileSize; 
@property (nonatomic,readonly) NSArray * hashes; 
@property (nonatomic,readonly) NSArray * knownContentHashes; 
@property (nonatomic,retain) NSURL * localURL; 
@property (nonatomic,readonly) NSString * MD5; 
@property (assign,nonatomic) long long pinCount; 
@property (nonatomic,readonly) NSDictionary * primaryContentHash; 
@property (assign,nonatomic) BOOL purgeable; 
@property (assign,nonatomic) long long purgeReason; 
@property (nonatomic,readonly) NSString * SHA; 
@property (getter=isStreamable,nonatomic,readonly) NSNumber * streamable; 
@property (nonatomic,readonly) NSNumber * uncompressedSize; 
@property (nonatomic,copy) NSURL * URL; 
+(id)defaultProperties;
+(Class)databaseEntityClass;
+(id)legacyPathPrefixForApplication:(id)arg1 ;
+(BOOL)isOnDeviceAtURL:(id)arg1 withValidMetadata:(id)arg2 ;
+(BOOL)deleteAssetPackOnDiskAtURL:(id)arg1 ;
+(BOOL)writeMetadata:(id)arg1 forAssetPackAtURL:(id)arg2 ;
+(id)_metadataURLForURL:(id)arg1 ;
+(id)_metadataFromURL:(id)arg1 ;
-(id)description;
-(NSURL *)URL;
-(NSNumber *)fileSize;
-(void)setURL:(NSURL *)arg1 ;
-(BOOL)purgeable;
-(NSNumber *)downloadIdentifier;
-(void)setDownloadIdentifier:(NSNumber *)arg1 ;
-(NSString *)applicationBundleID;
-(void)setPurgeable:(BOOL)arg1 ;
-(long long)purgeReason;
-(void)setPurgeReason:(long long)arg1 ;
-(NSURL *)localURL;
-(void)setLastUsedDate:(id)arg1 ;
-(id)isStreamable;
-(NSArray *)hashes;
-(NSNumber *)uncompressedSize;
-(void)setLocalURL:(NSURL *)arg1 ;
-(NSNumber *)chunkSize;
-(NSNumber *)downloadPriority;
-(id)contentHash;
-(id)initWithDictionary:(id)arg1 andBundleID:(id)arg2 ;
-(NSString *)bundleKey;
-(BOOL)isOnDevice;
-(long long)pinCount;
-(void)setPinCount:(long long)arg1 ;
-(NSArray *)downloadRequestUUIDs;
-(double)effectivePreservationPriority;
-(void)setEffectivePreservationPriority:(double)arg1 ;
-(void)setEffectiveAlwaysPreserve:(BOOL)arg1 ;
-(BOOL)writeMetadata;
-(double)downloadPercentageComplete;
-(unsigned long long)tagStatus;
-(id)suggestedDestinationPathWithStorageID:(id)arg1 ;
-(id)integrityHashingDictionary;
-(NSString *)MD5;
-(id)humanReadablePurgeReason;
-(BOOL)effectiveAlwaysPreserve;
-(void)removeDownloadRequestUUID:(id)arg1 ;
-(void)addDownloadRequestUUID:(id)arg1 ;
-(BOOL)purgeWithReason:(long long)arg1 ;
-(id)_suggestedLocalFilename;
-(void)setDownloadRequestUUIDs:(NSArray *)arg1 ;
-(NSString *)SHA;
-(NSArray *)knownContentHashes;
-(NSDictionary *)primaryContentHash;
@end


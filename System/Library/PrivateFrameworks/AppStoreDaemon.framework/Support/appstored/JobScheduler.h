/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:38:52 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/AppStoreDaemon.framework/Support/appstored
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <appstored/JobAgentObserver.h>
#import <appstored/JobPolicyManagerDelegate.h>

@protocol OS_dispatch_queue;
@class JobPolicyManager, NSObject, JobAgentSupervisor, NSString;

@interface JobScheduler : NSObject <JobAgentObserver, JobPolicyManagerDelegate> {

	BOOL _limitForThermal;
	long long _maxConcurrentJobCount;
	long long _maxConcurrentThermalLimitedJobCount;
	JobPolicyManager* _policyManager;
	BOOL _started;
	NSObject*<OS_dispatch_queue> _approvalQueue;
	JobAgentSupervisor* _jobSupervisor;
	NSObject*<OS_dispatch_queue> _runQueue;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> approvalQueue;              //@synthesize approvalQueue=_approvalQueue - In the implementation block
@property (nonatomic,retain) JobAgentSupervisor * jobSupervisor;                      //@synthesize jobSupervisor=_jobSupervisor - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> runQueue;                   //@synthesize runQueue=_runQueue - In the implementation block
@property (getter=isStarted) BOOL started;                                            //@synthesize started=_started - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)_bucketNames;
+(id)jobApprovalDate;
+(void)_setJobApprovalDate:(id)arg1 ;
+(id)_errorWithCode:(unsigned long long)arg1 ;
+(BOOL)_assignOrderValueToJob:(id)arg1 inPriorityBucket:(unsigned long long)arg2 jobType:(long long)arg3 ;
+(id)_idleStates;
+(long long)_nextOrderValueForPriorityBucket:(unsigned long long)arg1 database:(id)arg2 ;
+(unsigned long long)_currentActiveJobsInBucket:(unsigned long long)arg1 inDatabase:(id)arg2 ;
+(unsigned long long)_priorityBucketForJobPriority:(long long)arg1 ;
+(unsigned long long)_currentActiveJobsInBuckets:(id)arg1 inDatabase:(id)arg2 ;
+(unsigned long long)_maxJobsForRestoreOperation;
+(id)_bootstrapPredicateForSystem;
+(id)_copyOrderedPIDsForPredicate:(id)arg1 ;
+(unsigned long long)_bucketForPriority:(long long)arg1 ;
+(id)_currentActiveJobsIDsForBuckets:(id)arg1 inDatabase:(id)arg2 ;
+(id)_predicateForPriorityBucket:(unsigned long long)arg1 ;
+(id)_bootstrapPredicateForStore;
+(unsigned long long)_currentActiveJobsInDatabase:(id)arg1 ;
+(BOOL)_jobTypeIsNonDiscretionary:(long long)arg1 ;
+(BOOL)_jobTypeIsUserInitiated:(long long)arg1 ;
-(void)start;
-(BOOL)isStarted;
-(long long)networkType;
-(void)setStarted:(BOOL)arg1 ;
-(BOOL)networkReachable;
-(NSObject*<OS_dispatch_queue>)runQueue;
-(void)setRunQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)initWithJobSupervisor:(id)arg1 ;
-(JobAgentSupervisor *)jobSupervisor;
-(void)runWithReason:(id)arg1 ;
-(id)getJobSchedulerDiagnosticData;
-(void)PID:(long long)arg1 didEnterState:(id)arg2 ;
-(void)policyManagerBatterySaverEnabled:(id)arg1 ;
-(void)policyManagerBatterySaverDisabled:(id)arg1 ;
-(void)policyManagerDeviceDidUnlock:(id)arg1 ;
-(void)policyManagerDeviceDidLock:(id)arg1 ;
-(void)policyManager:(id)arg1 receivedTrigger:(unsigned long long)arg2 ;
-(BOOL)isBatterySaverEnabled;
-(BOOL)isPowerPluggedIn;
-(void)runAssigningOrderToSystemAppsWithReason:(id)arg1 ;
-(BOOL)_isRecoverableNetworkError:(id)arg1 ;
-(void)_throwExceptionIfNotStarted;
-(id)_assignOrderPredicate:(BOOL)arg1 ;
-(void)_assignOrderValuesToJobsWithPredicate:(id)arg1 reason:(id)arg2 ;
-(void)_startJobsIfNeeded;
-(void)_performBlockOnRunQueue:(/*^block*/id)arg1 ;
-(id)_getNextWaitJobsDiagnostics;
-(id)_humanReadableTrigger:(unsigned long long)arg1 ;
-(void)_clearSoftFailuresForTrigger:(unsigned long long)arg1 ;
-(id)_assignOrderToSystemAppsPredicate;
-(void)_limitActiveJobsIfNecessary;
-(void)_rescheduleSoftFailedJobsIfNecessary;
-(void)processTrigger:(unsigned long long)arg1 ;
-(void)_approveAllPendingJobs;
-(void)_runOncePerLaunchChecks;
-(unsigned long long)_availableSlotsForQueue:(long long)arg1 inDatabase:(id)arg2 ;
-(id)_agentRefWithPID:(long long)arg1 ;
-(NSObject*<OS_dispatch_queue>)approvalQueue;
-(void)_approvePendingApps:(id)arg1 pendingUpdatePIDS:(id)arg2 ;
-(id)_findPIDsMatchingPredicate:(id)arg1 initialList:(id)arg2 maxCount:(unsigned long long)arg3 ;
-(id)_performBootstrapForSystemPIDs:(id)arg1 ;
-(id)_collectRemainingResultsForPIDs:(id)arg1 ;
-(BOOL)_isRetryImmediatelyError:(id)arg1 ;
-(id)_findJobsInDatabase:(id)arg1 diagnosticsContext:(id)arg2 ;
-(id)_humanReadableBucketName:(unsigned long long)arg1 ;
-(BOOL)_shouldRetrySoftFailedJob:(id)arg1 diagnosticsContext:(id)arg2 ;
-(id)_findPolicyValidPIDsMatchingPredicate:(id)arg1 maxCount:(unsigned long long)arg2 inDatabase:(id)arg3 ;
-(id)_findJobsInDatabase:(id)arg1 ;
-(id)_collectBootstrapResultsForPIDs:(id)arg1 ;
-(void)_scheduleAutomaticRetry;
-(id)_bootstrapJobsIfNeeded:(id)arg1 ;
-(unsigned long long)_applyResults:(id)arg1 ;
-(id)_jobPIDsToStart;
-(id)_bootstrapUserInitiatedJobs;
-(unsigned long long)_startJobs:(id)arg1 ;
-(void)didPrioritizePID:(long long)arg1 ;
-(void)_scheduleAccountNotAvailableDuringDataMigratorRetry;
-(void)_scheduleCancelRetry;
-(void)setApprovalQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setJobSupervisor:(JobAgentSupervisor *)arg1 ;
-(BOOL)expediteJob:(long long)arg1 error:(id*)arg2 ;
-(void)runWithReason:(id)arg1 assignExternalOrder:(BOOL)arg2 ;
@end


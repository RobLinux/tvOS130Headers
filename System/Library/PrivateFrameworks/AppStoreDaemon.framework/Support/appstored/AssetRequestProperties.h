/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:38:47 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/AppStoreDaemon.framework/Support/appstored
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <appstored/appstored-Structs.h>
#import <appstored/NSCopying.h>
#import <appstored/NSMutableCopying.h>

@protocol AssetDataConsumer;
@class NSNumber, NSUUID, NSString, NSArray;

@interface AssetRequestProperties : NSObject <NSCopying, NSMutableCopying> {

	BOOL _allowsAuthentication;
	BOOL _allowsCellularAccess;
	BOOL _allowsConstrainedNetworkAccess;
	BOOL _allowsWatchCellularAccess;
	BOOL _locateAssetCache;
	BOOL _requiresPowerPluggedIn;
	unsigned _qosClass;
	NSNumber* _bytesPerSecondLimit;
	NSUUID* _clientIdentifier;
	long long _connectionPool;
	id<AssetDataConsumer> _dataConsumer;
	long long _discretionaryType;
	NSString* _duetBudgetingIdentifier;
	unsigned long long _expectedContentLength;
	unsigned long long _expectedDiskUsage;
	NSNumber* _loadingPriority;
	NSString* _logKey;
	NSNumber* _maximumWatchCellularTransferSize;
	NSString* _networkBudgetingIdentifier;
	NSArray* _protocolClasses;
	unsigned long long _rangeOffset;
	long long _requestReason;
	NSUUID* _requestUUID;
	NSNumber* _taskPriority;

}

@property (assign) BOOL allowsAuthentication;                                //@synthesize allowsAuthentication=_allowsAuthentication - In the implementation block
@property (assign) BOOL allowsCellularAccess;                                //@synthesize allowsCellularAccess=_allowsCellularAccess - In the implementation block
@property (assign) BOOL allowsConstrainedNetworkAccess;                      //@synthesize allowsConstrainedNetworkAccess=_allowsConstrainedNetworkAccess - In the implementation block
@property (assign) BOOL allowsWatchCellularAccess;                           //@synthesize allowsWatchCellularAccess=_allowsWatchCellularAccess - In the implementation block
@property (retain) NSNumber * bytesPerSecondLimit;                           //@synthesize bytesPerSecondLimit=_bytesPerSecondLimit - In the implementation block
@property (retain) NSUUID * clientIdentifier;                                //@synthesize clientIdentifier=_clientIdentifier - In the implementation block
@property (assign) long long connectionPool;                                 //@synthesize connectionPool=_connectionPool - In the implementation block
@property (retain) id<AssetDataConsumer> dataConsumer;                       //@synthesize dataConsumer=_dataConsumer - In the implementation block
@property (assign) long long discretionaryType;                              //@synthesize discretionaryType=_discretionaryType - In the implementation block
@property (retain) NSString * duetBudgetingIdentifier;                       //@synthesize duetBudgetingIdentifier=_duetBudgetingIdentifier - In the implementation block
@property (assign) unsigned long long expectedContentLength;                 //@synthesize expectedContentLength=_expectedContentLength - In the implementation block
@property (assign) unsigned long long expectedDiskUsage;                     //@synthesize expectedDiskUsage=_expectedDiskUsage - In the implementation block
@property (retain) NSNumber * loadingPriority;                               //@synthesize loadingPriority=_loadingPriority - In the implementation block
@property (assign) BOOL locateAssetCache;                                    //@synthesize locateAssetCache=_locateAssetCache - In the implementation block
@property (retain) NSString * logKey;                                        //@synthesize logKey=_logKey - In the implementation block
@property (retain) NSNumber * maximumWatchCellularTransferSize;              //@synthesize maximumWatchCellularTransferSize=_maximumWatchCellularTransferSize - In the implementation block
@property (retain) NSString * networkBudgetingIdentifier;                    //@synthesize networkBudgetingIdentifier=_networkBudgetingIdentifier - In the implementation block
@property (retain) NSArray * protocolClasses;                                //@synthesize protocolClasses=_protocolClasses - In the implementation block
@property (assign) unsigned qosClass;                                        //@synthesize qosClass=_qosClass - In the implementation block
@property (assign) unsigned long long rangeOffset;                           //@synthesize rangeOffset=_rangeOffset - In the implementation block
@property (assign) BOOL requiresPowerPluggedIn;                              //@synthesize requiresPowerPluggedIn=_requiresPowerPluggedIn - In the implementation block
@property (assign) long long requestReason;                                  //@synthesize requestReason=_requestReason - In the implementation block
@property (retain) NSUUID * requestUUID;                                     //@synthesize requestUUID=_requestUUID - In the implementation block
@property (retain) NSNumber * taskPriority;                                  //@synthesize taskPriority=_taskPriority - In the implementation block
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)init;
-(NSArray *)protocolClasses;
-(unsigned long long)expectedContentLength;
-(void)setBytesPerSecondLimit:(NSNumber *)arg1 ;
-(void)setAllowsCellularAccess:(BOOL)arg1 ;
-(BOOL)allowsCellularAccess;
-(void)setProtocolClasses:(NSArray *)arg1 ;
-(NSNumber *)bytesPerSecondLimit;
-(NSNumber *)loadingPriority;
-(void)setLoadingPriority:(NSNumber *)arg1 ;
-(BOOL)allowsConstrainedNetworkAccess;
-(void)setAllowsConstrainedNetworkAccess:(BOOL)arg1 ;
-(NSUUID *)clientIdentifier;
-(void)setClientIdentifier:(NSUUID *)arg1 ;
-(void)setRequiresPowerPluggedIn:(BOOL)arg1 ;
-(BOOL)requiresPowerPluggedIn;
-(id<AssetDataConsumer>)dataConsumer;
-(NSUUID *)requestUUID;
-(unsigned)qosClass;
-(void)setQosClass:(unsigned)arg1 ;
-(NSNumber *)taskPriority;
-(void)setTaskPriority:(NSNumber *)arg1 ;
-(void)setDataConsumer:(id<AssetDataConsumer>)arg1 ;
-(void)setExpectedContentLength:(unsigned long long)arg1 ;
-(NSString *)logKey;
-(void)setLogKey:(NSString *)arg1 ;
-(long long)connectionPool;
-(long long)requestReason;
-(void)setRequestReason:(long long)arg1 ;
-(void)setRequestUUID:(NSUUID *)arg1 ;
-(BOOL)allowsAuthentication;
-(void)setAllowsWatchCellularAccess:(BOOL)arg1 ;
-(NSNumber *)maximumWatchCellularTransferSize;
-(void)setMaximumWatchCellularTransferSize:(NSNumber *)arg1 ;
-(unsigned long long)rangeOffset;
-(BOOL)locateAssetCache;
-(void)setConnectionPool:(long long)arg1 ;
-(void)setRangeOffset:(unsigned long long)arg1 ;
-(void)setNetworkBudgetingIdentifier:(NSString *)arg1 ;
-(void)setLocateAssetCache:(BOOL)arg1 ;
-(void)setDiscretionaryType:(long long)arg1 ;
-(void)setDuetBudgetingIdentifier:(NSString *)arg1 ;
-(void)setAllowsAuthentication:(BOOL)arg1 ;
-(void)setExpectedDiskUsage:(unsigned long long)arg1 ;
-(unsigned long long)expectedDiskUsage;
-(NSString *)networkBudgetingIdentifier;
-(NSString *)duetBudgetingIdentifier;
-(long long)discretionaryType;
-(BOOL)allowsWatchCellularAccess;
@end


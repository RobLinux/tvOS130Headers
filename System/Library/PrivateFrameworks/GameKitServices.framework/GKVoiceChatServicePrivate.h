/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:40:56 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GameKitServices/GameKitServices-Structs.h>
#import <GameKitServices/VideoConferenceDelegate.h>

@protocol GKVoiceChatClient;
@class GKVoiceChatDictionary, NSRecursiveLock, NSLock, GKVoiceChatService, VideoConference;

@interface GKVoiceChatServicePrivate : NSObject <VideoConferenceDelegate> {

	id<GKVoiceChatClient> client;
	BOOL outputMeteringEnabled;
	BOOL inputMeteringEnabled;
	BOOL microphoneMuted;
	unsigned curCallID;
	int state;
	GKVoiceChatDictionary* incomingCallDict;
	GKVoiceChatDictionary* outgoingCallDict;
	tagCONNRESULT* currentConnResult;
	NSRecursiveLock* stateLock;
	NSLock* clientLock;
	GKVoiceChatService* wrapperService;
	BOOL forceNoICE;
	VideoConference* conf;
	int chatMode;
	BOOL focus;

}

@property (assign) int state; 
@property (assign) int chatMode; 
@property (assign) GKVoiceChatService * wrapperService; 
@property (assign,nonatomic) id client; 
@property (getter=isMicrophoneMuted) BOOL microphoneMuted; 
@property (assign) float remoteParticipantVolume; 
@property (getter=isOutputMeteringEnabled) BOOL outputMeteringEnabled; 
@property (getter=isInputMeteringEnabled) BOOL inputMeteringEnabled; 
@property (nonatomic,readonly) float outputMeterLevel; 
@property (nonatomic,readonly) float inputMeterLevel; 
@property (getter=isFocus) BOOL focus; 
@property (assign,nonatomic) void* localVideoLayer; 
@property (assign,nonatomic) void* remoteVideoLayer; 
@property (readonly) double localFramerate; 
@property (readonly) double localBitrate; 
@property (readonly) double remoteFramerate; 
@property (readonly) double remoteBitrate; 
@property (nonatomic,readonly) long long outputAudioPowerSpectrumToken; 
+(id)defaultVoiceChatService;
-(id)init;
-(void)dealloc;
-(int)state;
-(void)setState:(int)arg1 ;
-(id)client;
-(void)cleanup;
-(void)setClient:(id)arg1 ;
-(void)resetState;
-(long long)outputAudioPowerSpectrumToken;
-(BOOL)isInputMeteringEnabled;
-(void)setMicrophoneMuted:(BOOL)arg1 ;
-(BOOL)isMicrophoneMuted;
-(BOOL)isOutputMeteringEnabled;
-(void)setOutputMeteringEnabled:(BOOL)arg1 ;
-(void)setInputMeteringEnabled:(BOOL)arg1 ;
-(float)outputMeterLevel;
-(float)inputMeterLevel;
-(void*)remoteVideoLayer;
-(void)setRemoteVideoLayer:(void*)arg1 ;
-(void)videoConference:(id)arg1 didStartSession:(BOOL)arg2 withCallID:(unsigned)arg3 error:(id)arg4 ;
-(void)videoConference:(id)arg1 didStopWithCallID:(unsigned)arg2 error:(id)arg3 ;
-(void)setChatMode:(int)arg1 ;
-(void)forceNoICE:(BOOL)arg1 ;
-(int)chatMode;
-(BOOL)isFocus;
-(void)setFocus:(BOOL)arg1 ;
-(BOOL)getNSError:(id*)arg1 code:(long long)arg2 description:(id)arg3 reason:(id)arg4 ;
-(id)createInvite:(id*)arg1 toParticipant:(id)arg2 callID:(unsigned*)arg3 ;
-(id)createReplyUsingDictionary:(id)arg1 replyCode:(unsigned long long)arg2 error:(id*)arg3 ;
-(int)startICEConnectionCheck:(id)arg1 isCaller:(BOOL)arg2 withCallID:(unsigned)arg3 ;
-(void)informClientVoiceChatDidNotStart:(id)arg1 ;
-(void)informClientOfInviteFromParticipant:(id)arg1 ;
-(void)informClientVoiceChatDidStart:(id)arg1 ;
-(void)informClientVoiceChatDidStop:(id)arg1 ;
-(BOOL)startVoiceChatWithParticipantID:(id)arg1 error:(id*)arg2 ;
-(void)stopVoiceChatProc:(id)arg1 ;
-(BOOL)acceptCallID:(unsigned)arg1 error:(id*)arg2 ;
-(void)denyCallID:(unsigned)arg1 ;
-(void)receivedData:(id)arg1 fromParticipantID:(id)arg2 ;
-(void)setLocalVideoLayer:(void*)arg1 ;
-(void*)localVideoLayer;
-(double)localFramerate;
-(double)localBitrate;
-(double)remoteFramerate;
-(double)remoteBitrate;
-(id)localDisplayNameForCallID:(unsigned)arg1 ;
-(id)remoteDisplayNameForCallID:(unsigned)arg1 ;
-(int)startICEConnectionCheck:(id)arg1 isCaller:(BOOL)arg2 ;
-(void)informClientVoiceChatDidStartMainSelector:(id)arg1 ;
-(void)informClientVoiceChatDidNotStartMainSelector:(id)arg1 ;
-(BOOL)inviteIsValid:(id)arg1 ;
-(void)stopVoiceChatWithParticipantID:(id)arg1 ;
-(BOOL)getNSError:(id*)arg1 code:(long long)arg2 description:(id)arg3 hResult:(int)arg4 ;
-(float)remoteParticipantVolume;
-(void)setRemoteParticipantVolume:(float)arg1 ;
-(GKVoiceChatService *)wrapperService;
-(void)setWrapperService:(GKVoiceChatService *)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 2:41:33 AM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HMFoundation/HMFObject.h>
#import <HomeKitDaemon/HMDCameraRecordingSessionNotificationTriggerDelegate.h>
#import <HomeKitDaemon/HMDCameraRecordingSettingsControlDelegate.h>
#import <HomeKitDaemon/HMDDevicePreferenceDataSource.h>
#import <HomeKitDaemon/HMFLogging.h>
#import <HomeKitDaemon/HMDCameraRecordingSessionDelegate.h>
#import <HomeKitDaemon/HMDHomeMessageReceiver.h>
#import <HomeKitDaemon/HMDCameraClipManagerDelegate.h>
#import <HomeKitDaemon/HMFTimerDelegate.h>

@protocol OS_dispatch_queue, HMDDataStreamBulkSendSession;
@class NSString, NSUUID, HMDStreamDataChunkAssembler, HMDCameraRecordingResidentElector, HMDCameraRecordingBulkSendDataReadEvent, NSObject, HMDCameraRecordingSessionNotificationTrigger, HMDCameraRecordingSettingsControl, HMDCameraRecordingManagerFactory, HMFMessageDispatcher, HMDHAPAccessory, HMDCameraProfile, HMDCameraRecordingBulkSendSessionInitiator, HMFTimer, HMDCameraRecordingSession, NSMutableSet, NSDictionary, NSSet;

@interface HMDCameraRecordingManager : HMFObject <HMDCameraRecordingSessionNotificationTriggerDelegate, HMDCameraRecordingSettingsControlDelegate, HMDDevicePreferenceDataSource, HMFLogging, HMDCameraRecordingSessionDelegate, HMDHomeMessageReceiver, HMDCameraClipManagerDelegate, HMFTimerDelegate> {

	BOOL _motionActive;
	NSString* _logIdentifier;
	NSUUID* _messageTargetUUID;
	HMDStreamDataChunkAssembler* _dataChunkAssembler;
	HMDCameraRecordingResidentElector* _recordingResidentElector;
	unsigned long long _failedSessionRetryCount;
	unsigned long long _failedSessionMaxRetryCount;
	HMDCameraRecordingBulkSendDataReadEvent* _readEvent;
	NSObject*<OS_dispatch_queue> _workQueue;
	HMDCameraRecordingSessionNotificationTrigger* _notificationTrigger;
	HMDCameraRecordingSettingsControl* _recordingSettingsControl;
	HMDCameraRecordingManagerFactory* _factory;
	HMFMessageDispatcher* _msgDispatcher;
	HMDHAPAccessory* _accessory;
	HMDCameraProfile* _camera;
	id<HMDDataStreamBulkSendSession> _currentBulkSendSession;
	HMDCameraRecordingBulkSendSessionInitiator* _bulkSendSessionInitiator;
	HMFTimer* _readCallbackTimer;
	HMDCameraRecordingSession* _currentRecordingSession;
	NSMutableSet* _activeRecordingSessions;

}

@property (retain) HMDStreamDataChunkAssembler * dataChunkAssembler;                                     //@synthesize dataChunkAssembler=_dataChunkAssembler - In the implementation block
@property (readonly) NSString * logIdentifier;                                                           //@synthesize logIdentifier=_logIdentifier - In the implementation block
@property (readonly) HMDCameraRecordingResidentElector * recordingResidentElector;                       //@synthesize recordingResidentElector=_recordingResidentElector - In the implementation block
@property (readonly) NSDictionary * homePresenceByPairingIdentity; 
@property (assign) unsigned long long failedSessionRetryCount;                                           //@synthesize failedSessionRetryCount=_failedSessionRetryCount - In the implementation block
@property (readonly) unsigned long long failedSessionMaxRetryCount;                                      //@synthesize failedSessionMaxRetryCount=_failedSessionMaxRetryCount - In the implementation block
@property (getter=isMotionActive) BOOL motionActive;                                                     //@synthesize motionActive=_motionActive - In the implementation block
@property (retain) HMDCameraRecordingBulkSendDataReadEvent * readEvent;                                  //@synthesize readEvent=_readEvent - In the implementation block
@property (readonly) NSObject*<OS_dispatch_queue> workQueue;                                             //@synthesize workQueue=_workQueue - In the implementation block
@property (readonly) HMDCameraRecordingSessionNotificationTrigger * notificationTrigger;                 //@synthesize notificationTrigger=_notificationTrigger - In the implementation block
@property (readonly) HMDCameraRecordingSettingsControl * recordingSettingsControl;                       //@synthesize recordingSettingsControl=_recordingSettingsControl - In the implementation block
@property (readonly) HMDCameraRecordingManagerFactory * factory;                                         //@synthesize factory=_factory - In the implementation block
@property (readonly) HMFMessageDispatcher * msgDispatcher;                                               //@synthesize msgDispatcher=_msgDispatcher - In the implementation block
@property (__weak,readonly) HMDHAPAccessory * accessory;                                                 //@synthesize accessory=_accessory - In the implementation block
@property (__weak,readonly) HMDCameraProfile * camera;                                                   //@synthesize camera=_camera - In the implementation block
@property (retain) id<HMDDataStreamBulkSendSession> currentBulkSendSession;                              //@synthesize currentBulkSendSession=_currentBulkSendSession - In the implementation block
@property (readonly) HMDCameraRecordingBulkSendSessionInitiator * bulkSendSessionInitiator;              //@synthesize bulkSendSessionInitiator=_bulkSendSessionInitiator - In the implementation block
@property (retain) HMFTimer * readCallbackTimer;                                                         //@synthesize readCallbackTimer=_readCallbackTimer - In the implementation block
@property (retain) HMDCameraRecordingSession * currentRecordingSession;                                  //@synthesize currentRecordingSession=_currentRecordingSession - In the implementation block
@property (readonly) NSMutableSet * activeRecordingSessions;                                             //@synthesize activeRecordingSessions=_activeRecordingSessions - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSUUID * messageTargetUUID;                                               //@synthesize messageTargetUUID=_messageTargetUUID - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> messageReceiveQueue; 
@property (copy,readonly) NSSet * messageReceiverChildren; 
+(id)logCategory;
+(BOOL)hasMessageReceiverChildren;
-(void)dealloc;
-(NSObject*<OS_dispatch_queue>)workQueue;
-(void)start;
-(void)_start;
-(HMDCameraProfile *)camera;
-(HMDCameraRecordingManagerFactory *)factory;
-(HMDHAPAccessory *)accessory;
-(void)timerDidFire:(id)arg1 ;
-(NSString *)logIdentifier;
-(NSUUID *)messageTargetUUID;
-(NSObject*<OS_dispatch_queue>)messageReceiveQueue;
-(HMFMessageDispatcher *)msgDispatcher;
-(BOOL)supportsDeviceWithCapabilities:(id)arg1 ;
-(id)initWithCamera:(id)arg1 recordingManagementService:(id)arg2 factory:(id)arg3 ;
-(HMDCameraRecordingResidentElector *)recordingResidentElector;
-(HMDCameraRecordingSettingsControl *)recordingSettingsControl;
-(HMDCameraRecordingBulkSendSessionInitiator *)bulkSendSessionInitiator;
-(HMDCameraRecordingSessionNotificationTrigger *)notificationTrigger;
-(void)handleStartRecordingSessionRequest:(id)arg1 ;
-(void)handleCameraSettingsDidChangeNotification:(id)arg1 ;
-(void)setMotionActive:(BOOL)arg1 ;
-(HMDCameraRecordingSession *)currentRecordingSession;
-(unsigned long long)failedSessionRetryCount;
-(void)setFailedSessionRetryCount:(unsigned long long)arg1 ;
-(void)_coordinateRecordingSessionForAccessory:(unsigned long long)arg1 ;
-(BOOL)isMotionActive;
-(void)_closeCurrentSessionsWithReason:(unsigned short)arg1 ;
-(void)_startCameraRecordingSessionForTrigger:(unsigned long long)arg1 ;
-(void)_forwardRecordingSession:(unsigned long long)arg1 withSortedDevices:(id)arg2 withRetries:(long long)arg3 ;
-(NSDictionary *)homePresenceByPairingIdentity;
-(void)setCurrentRecordingSession:(HMDCameraRecordingSession *)arg1 ;
-(NSMutableSet *)activeRecordingSessions;
-(void)_startCameraRecordingSession:(id)arg1 ;
-(void)_startRecordingSessionForTrigger:(unsigned long long)arg1 presenceByPairingIdentity:(id)arg2 completionCallback:(/*^block*/id)arg3 ;
-(id<HMDDataStreamBulkSendSession>)currentBulkSendSession;
-(void)_createRecordingSessionForTrigger:(unsigned long long)arg1 presenceByPairingIdentity:(id)arg2 ;
-(void)_resetCurrentRecordingSession:(id)arg1 ;
-(void)_handleBulkSendSessionCreated:(id)arg1 ;
-(void)setReadEvent:(HMDCameraRecordingBulkSendDataReadEvent *)arg1 ;
-(HMDCameraRecordingBulkSendDataReadEvent *)readEvent;
-(void)_submitReadEventWithStatus:(unsigned short)arg1 ;
-(void)_startBulkSendDataReadEvent;
-(void)setCurrentBulkSendSession:(id<HMDDataStreamBulkSendSession>)arg1 ;
-(void)_readDataForCurrentSession;
-(void)setReadCallbackTimer:(HMFTimer *)arg1 ;
-(HMFTimer *)readCallbackTimer;
-(void)_handleDataReceived:(id)arg1 ;
-(HMDStreamDataChunkAssembler *)dataChunkAssembler;
-(void)setDataChunkAssembler:(HMDStreamDataChunkAssembler *)arg1 ;
-(void)_bulkSendReadDidReceiveStreamDataChunk:(id)arg1 ;
-(unsigned long long)failedSessionMaxRetryCount;
-(unsigned short)_closeEventReasonForRecordingSessionError:(id)arg1 ;
-(void)notificationTrigger:(id)arg1 didObserveTriggerType:(unsigned long long)arg2 changeToActive:(BOOL)arg3 ;
-(void)recordingSettingsControlDidConfigure:(id)arg1 ;
-(void)closeSession:(id)arg1 withError:(id)arg2 ;
-(void)clipManagerDidBecomeAvailable:(id)arg1 ;
-(void)clipManagerDidBecomeUnavailable:(id)arg1 ;
-(id)initWithCamera:(id)arg1 recordingManagementService:(id)arg2 ;
@end


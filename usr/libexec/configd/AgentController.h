/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:33 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/configd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <configd/configd-Structs.h>
#import <Network/NWNetworkAgentRegistration.h>

@protocol OS_dispatch_queue;
@class NSObject, NSMutableDictionary, NEPolicySession;

@interface AgentController : NWNetworkAgentRegistration {

	NSObject*<OS_dispatch_queue> _controllerQueue;
	NSMutableDictionary* _floatingProxyAgentList;
	NSMutableDictionary* _floatingDNSAgentList;
	NSMutableDictionary* _policyDB;
	NEPolicySession* _policySession;
	NEPolicySession* _controlPolicySession;

}

@property (nonatomic,retain) NSMutableDictionary * floatingProxyAgentList;              //@synthesize floatingProxyAgentList=_floatingProxyAgentList - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * floatingDNSAgentList;                //@synthesize floatingDNSAgentList=_floatingDNSAgentList - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * policyDB;                            //@synthesize policyDB=_policyDB - In the implementation block
@property (nonatomic,retain) NEPolicySession * policySession;                           //@synthesize policySession=_policySession - In the implementation block
@property (nonatomic,retain) NEPolicySession * controlPolicySession;                    //@synthesize controlPolicySession=_controlPolicySession - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> controllerQueue;                        //@synthesize controllerQueue=_controllerQueue - In the implementation block
+(id)sharedController;
-(id)init;
-(NEPolicySession *)policySession;
-(void)setPolicySession:(NEPolicySession *)arg1 ;
-(id)createPolicySession;
-(BOOL)isControllerReady;
-(BOOL)initializeController;
-(NSMutableDictionary *)floatingProxyAgentList;
-(void)setFloatingProxyAgentList:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)floatingDNSAgentList;
-(void)setFloatingDNSAgentList:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)policyDB;
-(void)setPolicyDB:(NSMutableDictionary *)arg1 ;
-(void)setControllerQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)dataForProxyDictionary:(CFDictionaryRef)arg1 ;
-(BOOL)getIntValue:(void*)arg1 valuePtr:(int*)arg2 ;
-(id)getAgentList:(id)arg1 agentType:(unsigned long long)arg2 agentSubType:(unsigned long long)arg3 ;
-(int)countProxyEntriesEnabled:(CFDictionaryRef)arg1 ;
-(void)cleanConflictingAgentsFromList:(id)arg1 new_list:(id)arg2 agentDictionary:(id)arg3 ;
-(BOOL)destroyFloatingAgent:(id)arg1 ;
-(id)getProxyDataFromCurrentConfig:(CFDictionaryRef)arg1 domain:(id)arg2 ;
-(BOOL)publishToAgent:(id)arg1 ;
-(BOOL)spawnFloatingAgent:(Class)arg1 entity:(id)arg2 agentSubType:(unsigned long long)arg3 addPolicyOfType:(long long)arg4 publishData:(id)arg5 ;
-(id)getAgentWithSameDataAndSubType:(id)arg1 data:(id)arg2 subType:(unsigned long long)arg3 ;
-(BOOL)spawnMappedFloatingAgent:(id)arg1 entity:(id)arg2 agentSubType:(unsigned long long)arg3 addPolicyOfType:(long long)arg4 updateData:(id)arg5 ;
-(id)dataForProxyArray:(CFArrayRef)arg1 ;
-(void)deleteAgentList:(id)arg1 list:(id)arg2 ;
-(BOOL)isGlobalProxy:(CFDictionaryRef)arg1 ;
-(void)processDefaultProxyChanges:(CFDictionaryRef)arg1 ;
-(void)processScopedProxyChanges:(CFDictionaryRef)arg1 ;
-(void)processSupplementalProxyChanges:(CFDictionaryRef)arg1 ;
-(void)processServiceSpecificProxyChanges:(CFDictionaryRef)arg1 ;
-(BOOL)isResolverMulticast:(SCD_Struct_Ag2*)arg1 ;
-(BOOL)isResolverPrivate:(SCD_Struct_Ag2*)arg1 ;
-(id)dataForResolver:(SCD_Struct_Ag2*)arg1 ;
-(id)getDNSDataFromCurrentConfig:(SCD_Struct_Ag3*)arg1 domain:(id)arg2 ;
-(resolverList*)copyResolverList:(SCD_Struct_Ag3*)arg1 ;
-(void)freeResolverList:(resolverList*)arg1 ;
-(BOOL)isResolverOnion:(SCD_Struct_Ag2*)arg1 ;
-(void)processDNSResolvers:(SCD_Struct_Ag3*)arg1 ;
-(void)processScopedDNSResolvers:(SCD_Struct_Ag3*)arg1 ;
-(void)processSupplementalDNSResolvers:(SCD_Struct_Ag3*)arg1 ;
-(void)processServiceSpecificDNSResolvers:(SCD_Struct_Ag3*)arg1 ;
-(void)processOnionResolver:(SCD_Struct_Ag3*)arg1 ;
-(const void*)copyConfigAgentData:(id)arg1 uuid:(unsigned char)arg2 length:(unsigned long long*)arg3 ;
-(id)sanitizeEntity:(id)arg1 ;
-(int)entityInstanceNumber:(id)arg1 ;
-(id)sanitizeInterfaceName:(id)arg1 ;
-(NEPolicySession *)controlPolicySession;
-(void)setControlPolicySession:(NEPolicySession *)arg1 ;
-(BOOL)registerAgent:(id)arg1 ;
-(BOOL)addPolicyToFloatingAgent:(id)arg1 domain:(id)arg2 agentUUIDToUse:(id)arg3 policyType:(long long)arg4 useControlPolicySession:(BOOL)arg5 ;
-(BOOL)unregisterAgent:(id)arg1 ;
-(id)dataLengthSanityCheck:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)controllerQueue;
-(void)processDNSChanges;
-(void)processProxyChanges;
-(const void*)copyProxyAgentData:(unsigned char)arg1 length:(unsigned long long*)arg2 ;
-(const void*)copyDNSAgentData:(unsigned char)arg1 length:(unsigned long long*)arg2 ;
@end


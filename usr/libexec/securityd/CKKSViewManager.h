/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:52 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/securityd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <securityd/securityd-Structs.h>
#import <securityd/NSXPCListenerDelegate.h>
#import <securityd/CKKSControlProtocol.h>

@protocol OTSOSAdapter;
@class CKContainer, CKKSAccountStateTracker, CKKSLockStateTracker, CKKSReachabilityTracker, CKKSZoneChangeFetcher, CKKSZoneModifier, CKKSCondition, CKKSRateLimiter, TPPolicy, NSMutableDictionary, NSXPCListener, CKKSCloudKitClassDependencies, CKKSNearFutureScheduler, NSOperationQueue, CKKSListenerCollection, NSString;

@interface CKKSViewManager : NSObject <NSXPCListenerDelegate, CKKSControlProtocol> {

	BOOL _overrideCKKSViewsFromPolicy;
	BOOL _valueCKKSViewsFromPolicy;
	CKContainer* _container;
	CKKSAccountStateTracker* _accountTracker;
	CKKSLockStateTracker* _lockStateTracker;
	CKKSReachabilityTracker* _reachabilityTracker;
	CKKSZoneChangeFetcher* _zoneChangeFetcher;
	CKKSZoneModifier* _zoneModifier;
	CKKSCondition* _completedSecCKKSInitialize;
	CKKSRateLimiter* _globalRateLimiter;
	id<OTSOSAdapter> _sosPeerAdapter;
	TPPolicy* _policy;
	NSMutableDictionary* _views;
	NSXPCListener* _listener;
	CKKSCloudKitClassDependencies* _cloudKitClassDependencies;
	NSMutableDictionary* _pendingSyncCallbacks;
	CKKSNearFutureScheduler* _savedTLKNotifier;
	NSOperationQueue* _operationQueue;
	CKKSListenerCollection* _peerChangeListenerCollection;

}

@property (retain) NSXPCListener * listener;                                               //@synthesize listener=_listener - In the implementation block
@property (retain) CKKSCloudKitClassDependencies * cloudKitClassDependencies;              //@synthesize cloudKitClassDependencies=_cloudKitClassDependencies - In the implementation block
@property (retain) NSMutableDictionary * pendingSyncCallbacks;                             //@synthesize pendingSyncCallbacks=_pendingSyncCallbacks - In the implementation block
@property (retain) CKKSNearFutureScheduler * savedTLKNotifier;                             //@synthesize savedTLKNotifier=_savedTLKNotifier - In the implementation block
@property (retain) NSOperationQueue * operationQueue;                                      //@synthesize operationQueue=_operationQueue - In the implementation block
@property (retain) CKKSListenerCollection * peerChangeListenerCollection;                  //@synthesize peerChangeListenerCollection=_peerChangeListenerCollection - In the implementation block
@property (assign,nonatomic) BOOL overrideCKKSViewsFromPolicy;                             //@synthesize overrideCKKSViewsFromPolicy=_overrideCKKSViewsFromPolicy - In the implementation block
@property (assign,nonatomic) BOOL valueCKKSViewsFromPolicy;                                //@synthesize valueCKKSViewsFromPolicy=_valueCKKSViewsFromPolicy - In the implementation block
@property (retain) CKContainer * container;                                                //@synthesize container=_container - In the implementation block
@property (retain) CKKSAccountStateTracker * accountTracker;                               //@synthesize accountTracker=_accountTracker - In the implementation block
@property (retain) CKKSLockStateTracker * lockStateTracker;                                //@synthesize lockStateTracker=_lockStateTracker - In the implementation block
@property (retain) CKKSReachabilityTracker * reachabilityTracker;                          //@synthesize reachabilityTracker=_reachabilityTracker - In the implementation block
@property (retain) CKKSZoneChangeFetcher * zoneChangeFetcher;                              //@synthesize zoneChangeFetcher=_zoneChangeFetcher - In the implementation block
@property (retain) CKKSZoneModifier * zoneModifier;                                        //@synthesize zoneModifier=_zoneModifier - In the implementation block
@property (retain) CKKSCondition * completedSecCKKSInitialize;                             //@synthesize completedSecCKKSInitialize=_completedSecCKKSInitialize - In the implementation block
@property (retain) CKKSRateLimiter * globalRateLimiter;                                    //@synthesize globalRateLimiter=_globalRateLimiter - In the implementation block
@property (retain) id<OTSOSAdapter> sosPeerAdapter;                                        //@synthesize sosPeerAdapter=_sosPeerAdapter - In the implementation block
@property (retain) TPPolicy * policy;                                                      //@synthesize policy=_policy - In the implementation block
@property (retain) NSMutableDictionary * views;                                            //@synthesize views=_views - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)resetManager:(BOOL)arg1 setTo:(id)arg2 ;
+(id)manager;
-(CKKSCondition *)completedSecCKKSInitialize;
-(void)setCurrentItemForAccessGroup:(id)arg1 hash:(id)arg2 accessGroup:(id)arg3 identifier:(id)arg4 viewHint:(id)arg5 replacing:(id)arg6 hash:(id)arg7 complete:(/*^block*/id)arg8 ;
-(void)getCurrentItemForAccessGroup:(id)arg1 identifier:(id)arg2 viewHint:(id)arg3 fetchCloudValue:(BOOL)arg4 complete:(/*^block*/id)arg5 ;
-(CKKSLockStateTracker *)lockStateTracker;
-(void)setLockStateTracker:(CKKSLockStateTracker *)arg1 ;
-(CKKSReachabilityTracker *)reachabilityTracker;
-(CKKSAccountStateTracker *)accountTracker;
-(void)handleKeychainEventDbConnection:(OpaqueSecDbConnectionRef)arg1 source:(unsigned long long)arg2 added:(SecDbItem*)arg3 deleted:(SecDbItem*)arg4 ;
-(void)xpc24HrNotification;
-(void)registerSyncStatusCallback:(id)arg1 callback:(/*^block*/id)arg2 ;
-(CKKSCloudKitClassDependencies *)cloudKitClassDependencies;
-(id)viewNameForItem:(SecDbItem*)arg1 ;
-(id)findView:(id)arg1 ;
-(void)beginCloudKitOperationOfAllViews;
-(id)initWithContainerName:(id)arg1 usePCS:(BOOL)arg2 sosAdapter:(id)arg3 cloudKitClassDependencies:(id)arg4 ;
-(id)makeCKContainer:(id)arg1 usePCS:(BOOL)arg2 ;
-(id)getGlobalRateLimiter;
-(void)lockStateChangeNotification:(BOOL)arg1 ;
-(id)defaultViewList;
-(void)clearView:(id)arg1 ;
-(id)findOrCreateView:(id)arg1 ;
-(id)activeTLKs;
-(id)restartZone:(id)arg1 ;
-(id)viewNameForViewHint:(id)arg1 ;
-(void)setOverrideCKKSViewsFromPolicy:(BOOL)arg1 ;
-(BOOL)useCKKSViewsFromPolicy;
-(void)cancelPendingOperations;
-(void)notifyNewTLKsInKeychain;
-(void)syncBackupAndNotifyAboutSync;
-(id)views:(id)arg1 operation:(id)arg2 error:(id*)arg3 ;
-(void)rpcStatus:(id)arg1 fast:(BOOL)arg2 reply:(/*^block*/id)arg3 ;
-(void)rpcFetchAndProcessChanges:(id)arg1 classA:(BOOL)arg2 reply:(/*^block*/id)arg3 ;
-(void)haltAll;
-(void)setAccountTracker:(CKKSAccountStateTracker *)arg1 ;
-(void)setReachabilityTracker:(CKKSReachabilityTracker *)arg1 ;
-(CKKSZoneChangeFetcher *)zoneChangeFetcher;
-(void)setZoneChangeFetcher:(CKKSZoneChangeFetcher *)arg1 ;
-(CKKSZoneModifier *)zoneModifier;
-(void)setZoneModifier:(CKKSZoneModifier *)arg1 ;
-(void)setCompletedSecCKKSInitialize:(CKKSCondition *)arg1 ;
-(CKKSRateLimiter *)globalRateLimiter;
-(void)setGlobalRateLimiter:(CKKSRateLimiter *)arg1 ;
-(id<OTSOSAdapter>)sosPeerAdapter;
-(void)setSosPeerAdapter:(id<OTSOSAdapter>)arg1 ;
-(void)setCloudKitClassDependencies:(CKKSCloudKitClassDependencies *)arg1 ;
-(NSMutableDictionary *)pendingSyncCallbacks;
-(void)setPendingSyncCallbacks:(NSMutableDictionary *)arg1 ;
-(CKKSNearFutureScheduler *)savedTLKNotifier;
-(void)setSavedTLKNotifier:(CKKSNearFutureScheduler *)arg1 ;
-(CKKSListenerCollection *)peerChangeListenerCollection;
-(void)setPeerChangeListenerCollection:(CKKSListenerCollection *)arg1 ;
-(BOOL)overrideCKKSViewsFromPolicy;
-(BOOL)valueCKKSViewsFromPolicy;
-(void)setValueCKKSViewsFromPolicy:(BOOL)arg1 ;
-(void)dealloc;
-(CKContainer *)container;
-(void)setContainer:(CKContainer *)arg1 ;
-(NSXPCListener *)listener;
-(void)setListener:(NSXPCListener *)arg1 ;
-(NSOperationQueue *)operationQueue;
-(void)setOperationQueue:(NSOperationQueue *)arg1 ;
-(void)rpcStatus:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcFastStatus:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcResetLocal:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcResetCloudKit:(id)arg1 reason:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)rpcResync:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcFetchAndProcessChanges:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcFetchAndProcessClassAChanges:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcPushOutgoingChanges:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcCKMetric:(id)arg1 attributes:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)rpcGetCKDeviceIDWithReply:(/*^block*/id)arg1 ;
-(void)performanceCounters:(/*^block*/id)arg1 ;
-(void)rpcResyncLocal:(id)arg1 reply:(/*^block*/id)arg2 ;
-(TPPolicy *)policy;
-(void)setView:(id)arg1 ;
-(void)setPolicy:(TPPolicy *)arg1 ;
-(NSMutableDictionary *)views;
-(void)setViews:(NSMutableDictionary *)arg1 ;
-(void)createViews;
-(void)setupAnalytics;
-(void)clearAllViews;
-(id)viewList;
-(void)setViewList:(id)arg1 ;
-(id)currentViews;
@end


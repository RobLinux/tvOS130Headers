/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:51 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/securityd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <securityd/securityd-Structs.h>
#import <securityd/OTCuttlefishAccountStateHolderNotifier.h>
#import <securityd/OctagonCuttlefishUpdateReceiver.h>
#import <securityd/OTAuthKitAdapterNotifier.h>
#import <securityd/OctagonStateMachineEngine.h>
#import <securityd/CKKSCloudKitAccountStateListener.h>
#import <securityd/CKKSPeerUpdateListener.h>

@protocol NSXPCProxyCreating, OTAuthKitAdapter, OS_dispatch_queue, CKKSCloudKitAccountStateTrackingProviderCKKSOctagonStatusMemoizer, OTSOSAdapter, CKKSPeerProvider, OTDeviceInformationAdapter;
@class NSData, NSString, NSArray, OTFollowup, CKKSLockStateTracker, OTCuttlefishAccountStateHolder, OctagonStateMachine, CKKSNearFutureScheduler, CKKSViewManager, NSObject, CKKSLaunchSequence, NSOperationQueue, CKAccountInfo, CKKSCondition;

@interface OTCuttlefishContext : NSObject <OTCuttlefishAccountStateHolderNotifier, OctagonCuttlefishUpdateReceiver, OTAuthKitAdapterNotifier, OctagonStateMachineEngine, CKKSCloudKitAccountStateListener, CKKSPeerUpdateListener> {

	NSData* _vouchData;
	NSData* _vouchSig;
	NSString* _bottleID;
	NSString* _bottleSalt;
	NSData* _entropy;
	NSArray* _preapprovedKeys;
	NSString* _recoveryKey;
	BOOL _skipRateLimitingCheck;
	BOOL _postedRepairCFU;
	BOOL _postedEscrowRepairCFU;
	BOOL _postedRecoveryKeyCFU;
	BOOL _getViewsSuccess;
	BOOL _initialBecomeUntrustedPosted;
	id<NSXPCProxyCreating> _cuttlefishXPCConnection;
	OTFollowup* _followupHandler;
	NSString* _containerName;
	NSString* _contextID;
	NSString* _altDSID;
	NSString* _pairingUUID;
	CKKSLockStateTracker* _lockStateTracker;
	OTCuttlefishAccountStateHolder* _accountMetadataStore;
	OctagonStateMachine* _stateMachine;
	CKKSNearFutureScheduler* _apsRateLimiter;
	CKKSViewManager* _viewManager;
	id<OTAuthKitAdapter> _authKitAdapter;
	NSObject*<OS_dispatch_queue> _queue;
	CKKSLaunchSequence* _launchSequence;
	NSOperationQueue* _operationQueue;
	id<CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer> _accountStateTracker;
	CKAccountInfo* _cloudKitAccountInfo;
	CKKSCondition* _cloudKitAccountStateKnown;
	CKKSNearFutureScheduler* _suggestTLKUploadNotifier;
	id<OTSOSAdapter> _sosAdapter;
	id<CKKSPeerProvider> _octagonAdapter;
	id<OTDeviceInformationAdapter> _deviceAdapter;
	Class _apsConnectionClass;
	Class _escrowRequestClass;

}

@property (retain) CKKSLaunchSequence * launchSequence;                                                                        //@synthesize launchSequence=_launchSequence - In the implementation block
@property (retain) NSOperationQueue * operationQueue;                                                                          //@synthesize operationQueue=_operationQueue - In the implementation block
@property (nonatomic,retain) OTCuttlefishAccountStateHolder * accountMetadataStore;                                            //@synthesize accountMetadataStore=_accountMetadataStore - In the implementation block
@property (retain) OTFollowup * followupHandler;                                                                               //@synthesize followupHandler=_followupHandler - In the implementation block
@property (readonly) id<CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer> accountStateTracker;              //@synthesize accountStateTracker=_accountStateTracker - In the implementation block
@property (retain) CKAccountInfo * cloudKitAccountInfo;                                                                        //@synthesize cloudKitAccountInfo=_cloudKitAccountInfo - In the implementation block
@property (retain) CKKSCondition * cloudKitAccountStateKnown;                                                                  //@synthesize cloudKitAccountStateKnown=_cloudKitAccountStateKnown - In the implementation block
@property (assign) BOOL getViewsSuccess;                                                                                       //@synthesize getViewsSuccess=_getViewsSuccess - In the implementation block
@property (retain) CKKSNearFutureScheduler * suggestTLKUploadNotifier;                                                         //@synthesize suggestTLKUploadNotifier=_suggestTLKUploadNotifier - In the implementation block
@property (retain) id<OTSOSAdapter> sosAdapter;                                                                                //@synthesize sosAdapter=_sosAdapter - In the implementation block
@property (retain) id<CKKSPeerProvider> octagonAdapter;                                                                        //@synthesize octagonAdapter=_octagonAdapter - In the implementation block
@property (retain) id<OTDeviceInformationAdapter> deviceAdapter;                                                               //@synthesize deviceAdapter=_deviceAdapter - In the implementation block
@property (readonly) Class apsConnectionClass;                                                                                 //@synthesize apsConnectionClass=_apsConnectionClass - In the implementation block
@property (readonly) Class escrowRequestClass;                                                                                 //@synthesize escrowRequestClass=_escrowRequestClass - In the implementation block
@property (assign,nonatomic) BOOL postedRepairCFU;                                                                             //@synthesize postedRepairCFU=_postedRepairCFU - In the implementation block
@property (assign,nonatomic) BOOL postedEscrowRepairCFU;                                                                       //@synthesize postedEscrowRepairCFU=_postedEscrowRepairCFU - In the implementation block
@property (assign,nonatomic) BOOL postedRecoveryKeyCFU;                                                                        //@synthesize postedRecoveryKeyCFU=_postedRecoveryKeyCFU - In the implementation block
@property (assign,nonatomic) BOOL initialBecomeUntrustedPosted;                                                                //@synthesize initialBecomeUntrustedPosted=_initialBecomeUntrustedPosted - In the implementation block
@property (readonly) id<NSXPCProxyCreating> cuttlefishXPCConnection;                                                           //@synthesize cuttlefishXPCConnection=_cuttlefishXPCConnection - In the implementation block
@property (readonly) NSString * containerName;                                                                                 //@synthesize containerName=_containerName - In the implementation block
@property (readonly) NSString * contextID;                                                                                     //@synthesize contextID=_contextID - In the implementation block
@property (readonly) NSString * altDSID;                                                                                       //@synthesize altDSID=_altDSID - In the implementation block
@property (nonatomic,retain) NSString * pairingUUID;                                                                           //@synthesize pairingUUID=_pairingUUID - In the implementation block
@property (nonatomic,readonly) CKKSLockStateTracker * lockStateTracker;                                                        //@synthesize lockStateTracker=_lockStateTracker - In the implementation block
@property (readonly) OctagonStateMachine * stateMachine;                                                                       //@synthesize stateMachine=_stateMachine - In the implementation block
@property (nonatomic,retain) CKKSNearFutureScheduler * apsRateLimiter;                                                         //@synthesize apsRateLimiter=_apsRateLimiter - In the implementation block
@property (readonly) CKKSViewManager * viewManager;                                                                            //@synthesize viewManager=_viewManager - In the implementation block
@property (retain) id<OTAuthKitAdapter> authKitAdapter;                                                                        //@synthesize authKitAdapter=_authKitAdapter - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> queue;                                                                         //@synthesize queue=_queue - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(CKKSViewManager *)viewManager;
-(id)_onqueueNextStateMachineTransition:(NSString*)arg1 flags:(id)arg2 pendingFlags:(id)arg3 ;
-(CKKSLockStateTracker *)lockStateTracker;
-(void)cloudkitAccountStateChange:(id)arg1 to:(id)arg2 ;
-(void)trustedPeerSetChanged:(id)arg1 ;
-(void)selfPeerChanged:(id)arg1 ;
-(id<NSXPCProxyCreating>)cuttlefishXPCConnection;
-(id<OTSOSAdapter>)sosAdapter;
-(id<OTAuthKitAdapter>)authKitAdapter;
-(id<CKKSCloudKitAccountStateTrackingProvider><CKKSOctagonStatusMemoizer>)accountStateTracker;
-(Class)apsConnectionClass;
-(Class)escrowRequestClass;
-(void)clearPendingCFUFlags;
-(void)startOctagonStateMachine;
-(void)attemptSOSUpgrade:(/*^block*/id)arg1 ;
-(void)checkOctagonHealth:(BOOL)arg1 reply:(/*^block*/id)arg2 ;
-(void)notifyContainerChange:(id)arg1 ;
-(void)joinWithRecoveryKey:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcResetAndEstablish:(/*^block*/id)arg1 ;
-(void)rpcSetRecoveryKey:(id)arg1 reply:(/*^block*/id)arg2 ;
-(OTFollowup *)followupHandler;
-(id)currentMemoizedLastHealthCheck;
-(int)currentMemoizedTrustState;
-(int)currentMemoizedAccountState;
-(void)joinWithBottle:(id)arg1 entropy:(id)arg2 bottleSalt:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)requestTrustedDeviceListRefresh;
-(void)rpcJoin:(id)arg1 vouchSig:(id)arg2 preapprovedKeys:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)handlePairingRestart:(id)arg1 ;
-(void)rpcPrepareIdentityAsApplicantWithConfiguration:(id)arg1 epoch:(unsigned long long)arg2 reply:(/*^block*/id)arg3 ;
-(void)rpcFetchAllViableBottles:(/*^block*/id)arg1 ;
-(void)rpcFetchDeviceNamesByPeerID:(/*^block*/id)arg1 ;
-(void)rpcRemoveFriendsInClique:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcLeaveClique:(/*^block*/id)arg1 ;
-(void)rpcEstablish:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcStatus:(/*^block*/id)arg1 ;
-(void)rpcTrustStatus:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcFetchEgoPeerID:(/*^block*/id)arg1 ;
-(id)initWithContainerName:(id)arg1 contextID:(id)arg2 cuttlefish:(id)arg3 sosAdapter:(id)arg4 authKitAdapter:(id)arg5 ckksViewManager:(id)arg6 lockStateTracker:(id)arg7 accountStateTracker:(id)arg8 deviceInformationAdapter:(id)arg9 apsConnectionClass:(Class)arg10 escrowRequestClass:(Class)arg11 cdpd:(id)arg12 ;
-(BOOL)idmsTrustLevelChanged:(id*)arg1 ;
-(BOOL)accountNoLongerAvailable:(id*)arg1 ;
-(BOOL)accountAvailable:(id)arg1 error:(id*)arg2 ;
-(void)moveToCheckTrustedState;
-(id)operationDependencies;
-(id<CKKSPeerProvider>)octagonAdapter;
-(void)machinesAdded:(id)arg1 altDSID:(id)arg2 ;
-(void)machinesRemoved:(id)arg1 altDSID:(id)arg2 ;
-(void)incompleteNotificationOfMachineIDListChange;
-(void)accountStateUpdated:(id)arg1 from:(id)arg2 ;
-(void)notifyTrustChanged:(int)arg1 ;
-(void)resetOctagonStateMachine;
-(void)localReset:(/*^block*/id)arg1 ;
-(id)establishStatePathDictionary;
-(id)prepareInformation;
-(id)initializingOperation;
-(id)evaluateSecdOctagonTrust;
-(id)evaluateTPHOctagonTrust;
-(id)cuttlefishTrustEvaluation;
-(id)postRepairCFUAndBecomeUntrusted;
-(id)cloudKitAccountNewlyAvailableOperation;
-(NSString*)repairAccountIfTrustedByTPHWithIntededState:(NSString*)arg1 errorState:(NSString*)arg2 ;
-(BOOL)didDeviceAttemptToJoinOctagon:(id*)arg1 ;
-(void)checkTrustStatusAndPostRepairCFUIfNecessary:(/*^block*/id)arg1 ;
-(id)becomeUntrustedOperation:(NSString*)arg1 ;
-(id)becomeReadyOperation;
-(id)extractStringKey:(id)arg1 fromDictionary:(id)arg2 ;
-(void)handleHealthRequest;
-(void)handleTTRRequest:(id)arg1 ;
-(void)notifyContainerChangeWithUserInfo:(id)arg1 ;
-(long long)checkForCKAccount:(id)arg1 ;
-(id)errorNoiCloudAccount;
-(id)joinStatePathDictionary;
-(id)ckksPeerStatus:(id)arg1 ;
-(id)sosTrustedPeersStatus;
-(id)sosSelvesStatus;
-(void)rpcTrustStatusCachedStatus:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcValidatePeers:(/*^block*/id)arg1 ;
-(void)setAccountStateHolder:(id)arg1 ;
-(void)setPostedBool:(BOOL)arg1 ;
-(BOOL)postRepairCFU:(id*)arg1 ;
-(BOOL)shouldPostConfirmPasscodeCFU:(id*)arg1 ;
-(void)postConfirmPasscodeCFU:(id*)arg1 ;
-(void)postRecoveryKeyCFU:(id*)arg1 ;
-(void)setFollowupHandler:(OTFollowup *)arg1 ;
-(OTCuttlefishAccountStateHolder *)accountMetadataStore;
-(void)setAccountMetadataStore:(OTCuttlefishAccountStateHolder *)arg1 ;
-(BOOL)postedRepairCFU;
-(void)setPostedRepairCFU:(BOOL)arg1 ;
-(BOOL)postedEscrowRepairCFU;
-(void)setPostedEscrowRepairCFU:(BOOL)arg1 ;
-(BOOL)postedRecoveryKeyCFU;
-(void)setPostedRecoveryKeyCFU:(BOOL)arg1 ;
-(CKKSNearFutureScheduler *)apsRateLimiter;
-(void)setApsRateLimiter:(CKKSNearFutureScheduler *)arg1 ;
-(void)setAuthKitAdapter:(id<OTAuthKitAdapter>)arg1 ;
-(void)setLaunchSequence:(CKKSLaunchSequence *)arg1 ;
-(CKAccountInfo *)cloudKitAccountInfo;
-(void)setCloudKitAccountInfo:(CKAccountInfo *)arg1 ;
-(CKKSCondition *)cloudKitAccountStateKnown;
-(void)setCloudKitAccountStateKnown:(CKKSCondition *)arg1 ;
-(BOOL)getViewsSuccess;
-(void)setGetViewsSuccess:(BOOL)arg1 ;
-(CKKSNearFutureScheduler *)suggestTLKUploadNotifier;
-(void)setSuggestTLKUploadNotifier:(CKKSNearFutureScheduler *)arg1 ;
-(void)setSosAdapter:(id<OTSOSAdapter>)arg1 ;
-(void)setOctagonAdapter:(id<CKKSPeerProvider>)arg1 ;
-(id<OTDeviceInformationAdapter>)deviceAdapter;
-(void)setDeviceAdapter:(id<OTDeviceInformationAdapter>)arg1 ;
-(BOOL)initialBecomeUntrustedPosted;
-(void)setInitialBecomeUntrustedPosted:(BOOL)arg1 ;
-(NSString *)description;
-(void)dealloc;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(NSOperationQueue *)operationQueue;
-(void)setOperationQueue:(NSOperationQueue *)arg1 ;
-(NSString *)containerName;
-(NSString *)contextID;
-(NSString *)pairingUUID;
-(void)setPairingUUID:(NSString *)arg1 ;
-(NSString *)altDSID;
-(void)fetchEscrowContents:(/*^block*/id)arg1 ;
-(void)waitForOctagonUpgrade:(/*^block*/id)arg1 ;
-(OctagonStateMachine *)stateMachine;
-(CKKSLaunchSequence *)launchSequence;
@end


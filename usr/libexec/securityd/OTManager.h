/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:50 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/securityd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <securityd/securityd-Structs.h>
#import <securityd/NSXPCListenerDelegate.h>
#import <securityd/OTContextIdentityProvider.h>
#import <securityd/OTControlProtocol.h>

@protocol NSXPCProxyCreating, OTSOSAdapter, OTAuthKitAdapter, OTDeviceInformationAdapter, CKKSCloudKitAccountStateTrackingProvider, OctagonFollowUpControllerProtocol, OS_dispatch_queue;
@class NSDate, CKKSLockStateTracker, NSXPCListener, OTContext, OTLocalStore, OTRamp, CKKSNearFutureScheduler, NSMutableDictionary, NSObject, NSString;

@interface OTManager : NSObject <NSXPCListenerDelegate, OTContextIdentityProvider, OTControlProtocol> {

	BOOL _sosEnabledForPlatform;
	id<NSXPCProxyCreating> _cuttlefishXPCConnection;
	id<OTSOSAdapter> _sosAdapter;
	id<OTAuthKitAdapter> _authKitAdapter;
	id<OTDeviceInformationAdapter> _deviceInformationAdapter;
	NSDate* _lastPostedCoreFollowUp;
	CKKSLockStateTracker* _lockStateTracker;
	id<CKKSCloudKitAccountStateTrackingProvider> _accountStateTracker;
	NSXPCListener* _listener;
	OTContext* _context;
	OTLocalStore* _localStore;
	OTRamp* _enrollRamp;
	OTRamp* _restoreRamp;
	OTRamp* _cfuRamp;
	OTRamp* _gbmidRamp;
	OTRamp* _gbserialRamp;
	OTRamp* _gbAgeRamp;
	CKKSNearFutureScheduler* _cfuScheduler;
	NSString* _bottleState;
	id<OctagonFollowUpControllerProtocol> _cdpd;
	NSMutableDictionary* _contexts;
	NSMutableDictionary* _clients;
	NSObject*<OS_dispatch_queue> _queue;
	Class _apsConnectionClass;
	Class _escrowRequestClass;
	Class _loggerClass;

}

@property (retain) NSXPCListener * listener;                                                      //@synthesize listener=_listener - In the implementation block
@property (nonatomic,retain) OTContext * context;                                                 //@synthesize context=_context - In the implementation block
@property (nonatomic,retain) OTLocalStore * localStore;                                           //@synthesize localStore=_localStore - In the implementation block
@property (nonatomic,retain) OTRamp * enrollRamp;                                                 //@synthesize enrollRamp=_enrollRamp - In the implementation block
@property (nonatomic,retain) OTRamp * restoreRamp;                                                //@synthesize restoreRamp=_restoreRamp - In the implementation block
@property (nonatomic,retain) OTRamp * cfuRamp;                                                    //@synthesize cfuRamp=_cfuRamp - In the implementation block
@property (nonatomic,retain) OTRamp * gbmidRamp;                                                  //@synthesize gbmidRamp=_gbmidRamp - In the implementation block
@property (nonatomic,retain) OTRamp * gbserialRamp;                                               //@synthesize gbserialRamp=_gbserialRamp - In the implementation block
@property (nonatomic,retain) OTRamp * gbAgeRamp;                                                  //@synthesize gbAgeRamp=_gbAgeRamp - In the implementation block
@property (nonatomic,retain) CKKSNearFutureScheduler * cfuScheduler;                              //@synthesize cfuScheduler=_cfuScheduler - In the implementation block
@property (nonatomic,retain) NSDate * lastPostedCoreFollowUp;                                     //@synthesize lastPostedCoreFollowUp=_lastPostedCoreFollowUp - In the implementation block
@property (nonatomic,retain) NSString*<SecOTBottledPeerState> bottleState;                        //@synthesize bottleState=_bottleState - In the implementation block
@property (nonatomic,retain) CKKSLockStateTracker * lockStateTracker;                             //@synthesize lockStateTracker=_lockStateTracker - In the implementation block
@property (nonatomic,retain) id<OctagonFollowUpControllerProtocol> cdpd;                          //@synthesize cdpd=_cdpd - In the implementation block
@property (retain) NSMutableDictionary * contexts;                                                //@synthesize contexts=_contexts - In the implementation block
@property (retain) NSMutableDictionary * clients;                                                 //@synthesize clients=_clients - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> queue;                                            //@synthesize queue=_queue - In the implementation block
@property (retain) id<NSXPCProxyCreating> cuttlefishXPCConnection;                                //@synthesize cuttlefishXPCConnection=_cuttlefishXPCConnection - In the implementation block
@property (readonly) id<OTSOSAdapter> sosAdapter;                                                 //@synthesize sosAdapter=_sosAdapter - In the implementation block
@property (readonly) id<OTAuthKitAdapter> authKitAdapter;                                         //@synthesize authKitAdapter=_authKitAdapter - In the implementation block
@property (readonly) id<OTDeviceInformationAdapter> deviceInformationAdapter;                     //@synthesize deviceInformationAdapter=_deviceInformationAdapter - In the implementation block
@property (readonly) Class apsConnectionClass;                                                    //@synthesize apsConnectionClass=_apsConnectionClass - In the implementation block
@property (readonly) Class escrowRequestClass;                                                    //@synthesize escrowRequestClass=_escrowRequestClass - In the implementation block
@property (readonly) Class loggerClass;                                                           //@synthesize loggerClass=_loggerClass - In the implementation block
@property (assign,nonatomic) BOOL sosEnabledForPlatform;                                          //@synthesize sosEnabledForPlatform=_sosEnabledForPlatform - In the implementation block
@property (retain) id<CKKSCloudKitAccountStateTrackingProvider> accountStateTracker;              //@synthesize accountStateTracker=_accountStateTracker - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)resetManager:(BOOL)arg1 to:(id)arg2 ;
+(id)manager;
-(CKKSLockStateTracker *)lockStateTracker;
-(void)setLockStateTracker:(CKKSLockStateTracker *)arg1 ;
-(id)currentIdentity:(id*)arg1 ;
-(id)initWithContext:(id)arg1 localStore:(id)arg2 enroll:(id)arg3 restore:(id)arg4 cfu:(id)arg5 cfuScheduler:(id)arg6 sosAdapter:(id)arg7 authKitAdapter:(id)arg8 deviceInformationAdapter:(id)arg9 apsConnectionClass:(Class)arg10 escrowRequestClass:(Class)arg11 loggerClass:(Class)arg12 lockStateTracker:(id)arg13 accountStateTracker:(id)arg14 cuttlefishXPCConnection:(id)arg15 cdpd:(id)arg16 ;
-(void)initializeOctagon;
-(void)moveToCheckTrustedStateForContainer:(id)arg1 context:(id)arg2 ;
-(void)registerForCircleChangedNotifications;
-(id)askAccountsForDSID;
-(BOOL)initRamps;
-(BOOL)initializeManagerPropertiesForContext:(id)arg1 error:(id*)arg2 ;
-(BOOL)scheduledCloudKitRampCheck:(id*)arg1 ;
-(void)scheduleCFUForFuture;
-(void)setCuttlefishXPCConnection:(id<NSXPCProxyCreating>)arg1 ;
-(id<NSXPCProxyCreating>)cuttlefishXPCConnection;
-(id)clientStateMachineForContainerName:(id)arg1 contextID:(id)arg2 clientName:(id)arg3 ;
-(void)removeClientContextForContainerName:(id)arg1 clientName:(id)arg2 ;
-(void)removeContextForContainerName:(id)arg1 contextID:(id)arg2 ;
-(id)contextForContainerName:(id)arg1 contextID:(id)arg2 ;
-(id)contextForContainerName:(id)arg1 contextID:(id)arg2 sosAdapter:(id)arg3 authKitAdapter:(id)arg4 lockStateTracker:(id)arg5 accountStateTracker:(id)arg6 deviceInformationAdapter:(id)arg7 ;
-(BOOL)ghostbustByMidEnabled;
-(BOOL)ghostbustBySerialEnabled;
-(BOOL)ghostbustByAgeEnabled;
-(id)cdpContextTypes;
-(void)xpc24HrNotification:(id)arg1 context:(id)arg2 skipRateLimitingCheck:(BOOL)arg3 reply:(/*^block*/id)arg4 ;
-(void)setSOSEnabledForPlatformFlag:(BOOL)arg1 ;
-(void)allContextsHalt;
-(void)allContextsDisablePendingFlags;
-(BOOL)allContextsPause:(unsigned long long)arg1 ;
-(unsigned char)cliqueCDPTypeToFollowupContextType:(id)arg1 ;
-(id<OTSOSAdapter>)sosAdapter;
-(id<OTAuthKitAdapter>)authKitAdapter;
-(id<OTDeviceInformationAdapter>)deviceInformationAdapter;
-(NSDate *)lastPostedCoreFollowUp;
-(void)setLastPostedCoreFollowUp:(NSDate *)arg1 ;
-(id<CKKSCloudKitAccountStateTrackingProvider>)accountStateTracker;
-(void)setAccountStateTracker:(id<CKKSCloudKitAccountStateTrackingProvider>)arg1 ;
-(void)setLocalStore:(OTLocalStore *)arg1 ;
-(OTRamp *)enrollRamp;
-(void)setEnrollRamp:(OTRamp *)arg1 ;
-(OTRamp *)restoreRamp;
-(void)setRestoreRamp:(OTRamp *)arg1 ;
-(OTRamp *)cfuRamp;
-(void)setCfuRamp:(OTRamp *)arg1 ;
-(OTRamp *)gbmidRamp;
-(void)setGbmidRamp:(OTRamp *)arg1 ;
-(OTRamp *)gbserialRamp;
-(void)setGbserialRamp:(OTRamp *)arg1 ;
-(OTRamp *)gbAgeRamp;
-(void)setGbAgeRamp:(OTRamp *)arg1 ;
-(CKKSNearFutureScheduler *)cfuScheduler;
-(void)setCfuScheduler:(CKKSNearFutureScheduler *)arg1 ;
-(NSString*<SecOTBottledPeerState>)bottleState;
-(void)setBottleState:(NSString*<SecOTBottledPeerState>)arg1 ;
-(id<OctagonFollowUpControllerProtocol>)cdpd;
-(void)setCdpd:(id<OctagonFollowUpControllerProtocol>)arg1 ;
-(Class)apsConnectionClass;
-(Class)escrowRequestClass;
-(Class)loggerClass;
-(BOOL)sosEnabledForPlatform;
-(void)setSosEnabledForPlatform:(BOOL)arg1 ;
-(id)init;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(NSXPCListener *)listener;
-(void)setListener:(NSXPCListener *)arg1 ;
-(OTContext *)context;
-(void)restore:(id)arg1 dsid:(id)arg2 secret:(id)arg3 escrowRecordID:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)reset:(/*^block*/id)arg1 ;
-(void)octagonSigningPublicKey:(/*^block*/id)arg1 ;
-(void)octagonEncryptionPublicKey:(/*^block*/id)arg1 ;
-(void)listOfEligibleBottledPeerRecords:(/*^block*/id)arg1 ;
-(void)signIn:(id)arg1 container:(id)arg2 context:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)signOut:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)notifyIDMSTrustLevelChangeForContainer:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)handleIdentityChangeForSigningKey:(id)arg1 ForEncryptionKey:(id)arg2 ForPeerID:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)rpcEpochWithConfiguration:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcPrepareIdentityAsApplicantWithConfiguration:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)rpcVoucherWithConfiguration:(id)arg1 peerID:(id)arg2 permanentInfo:(id)arg3 permanentInfoSig:(id)arg4 stableInfo:(id)arg5 stableInfoSig:(id)arg6 reply:(/*^block*/id)arg7 ;
-(void)rpcJoinWithConfiguration:(id)arg1 vouchData:(id)arg2 vouchSig:(id)arg3 preapprovedKeys:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)preflightBottledPeer:(id)arg1 dsid:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)launchBottledPeer:(id)arg1 bottleID:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)scrubBottledPeer:(id)arg1 bottleID:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)status:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)fetchEgoPeerID:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)fetchCliqueStatus:(id)arg1 context:(id)arg2 configuration:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)fetchTrustStatus:(id)arg1 context:(id)arg2 configuration:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)startOctagonStateMachine:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)resetAndEstablish:(id)arg1 context:(id)arg2 altDSID:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)establish:(id)arg1 context:(id)arg2 altDSID:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)leaveClique:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)removeFriendsInClique:(id)arg1 context:(id)arg2 peerIDs:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)peerDeviceNamesByPeerID:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)fetchAllViableBottles:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)restore:(id)arg1 contextID:(id)arg2 bottleSalt:(id)arg3 entropy:(id)arg4 bottleID:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)fetchEscrowContents:(id)arg1 contextID:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)createRecoveryKey:(id)arg1 contextID:(id)arg2 recoveryKey:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)joinWithRecoveryKey:(id)arg1 contextID:(id)arg2 recoveryKey:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)healthCheck:(id)arg1 context:(id)arg2 skipRateLimitingCheck:(BOOL)arg3 reply:(/*^block*/id)arg4 ;
-(void)attemptSosUpgrade:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)waitForOctagonUpgrade:(id)arg1 context:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)postCDPFollowupResult:(BOOL)arg1 type:(id)arg2 error:(id)arg3 containerName:(id)arg4 contextName:(id)arg5 reply:(/*^block*/id)arg6 ;
-(void)tapToRadar:(id)arg1 description:(id)arg2 radar:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)setContext:(OTContext *)arg1 ;
-(void)setClients:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)clients;
-(NSMutableDictionary *)contexts;
-(void)setContexts:(NSMutableDictionary *)arg1 ;
-(OTLocalStore *)localStore;
-(void)setupAnalytics;
@end


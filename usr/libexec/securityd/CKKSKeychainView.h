/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:52 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/securityd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <securityd/securityd-Structs.h>
#import <securityd/CKKSZone.h>
#import <securityd/CKKSZoneUpdateReceiver.h>
#import <securityd/CKKSChangeFetcherClient.h>
#import <securityd/CKKSPeerUpdateListener.h>

@class CKKSCondition, CKKSResultOperation, CKKSLaunchSequence, CKKSLockStateTracker, NSError, CKOperationGroup, NSOperation, CKKSEgoManifest, CKKSManifest, NSMutableDictionary, CKKSZoneChangeFetcher, CKKSNearFutureScheduler, CKKSIncomingQueueOperation, CKKSNewTLKOperation, CKKSOutgoingQueueOperation, CKKSProcessReceivedKeysOperation, CKKSReencryptOutgoingItemsOperation, CKKSScanLocalItemsOperation, CKKSSynchronizeOperation, NSArray, NSHashTable, NSString, NSOperationQueue;

@interface CKKSKeychainView : CKKSZone <CKKSZoneUpdateReceiver, CKKSChangeFetcherClient, CKKSPeerUpdateListener> {

	NSString* _keyHierarchyState;
	BOOL _keyStateMachineRefetched;
	BOOL _droppedItems;
	BOOL _keyStateFetchRequested;
	BOOL _keyStateFullRefetchRequested;
	BOOL _keyStateProcessRequested;
	BOOL _trustedPeersSetChanged;
	BOOL _keyStateCloudKitDeleteRequested;
	BOOL _keyStateLocalResetRequested;
	BOOL _tlkCreationRequested;
	CKKSCondition* _loggedIn;
	CKKSCondition* _loggedOut;
	CKKSCondition* _accountStateKnown;
	long long _trustStatus;
	CKKSResultOperation* _trustDependency;
	CKKSLaunchSequence* _launch;
	CKKSLockStateTracker* _lockStateTracker;
	NSError* _keyHierarchyError;
	CKOperationGroup* _keyHierarchyOperationGroup;
	NSOperation* _keyStateMachineOperation;
	CKKSEgoManifest* _egoManifest;
	CKKSManifest* _latestManifest;
	CKKSResultOperation* _keyStateReadyDependency;
	CKKSResultOperation* _keyStateNonTransientDependency;
	NSMutableDictionary* _keyHierarchyConditions;
	CKKSZoneChangeFetcher* _zoneChangeFetcher;
	CKKSNearFutureScheduler* _savedTLKNotifier;
	CKKSNearFutureScheduler* _suggestTLKUpload;
	CKKSIncomingQueueOperation* _lastIncomingQueueOperation;
	CKKSNewTLKOperation* _lastNewTLKOperation;
	CKKSOutgoingQueueOperation* _lastOutgoingQueueOperation;
	CKKSProcessReceivedKeysOperation* _lastProcessReceivedKeysOperation;
	CKKSReencryptOutgoingItemsOperation* _lastReencryptOutgoingItemsOperation;
	CKKSScanLocalItemsOperation* _lastScanLocalItemsOperation;
	CKKSSynchronizeOperation* _lastSynchronizeOperation;
	CKKSResultOperation* _lastFixupOperation;
	NSOperation* _holdReencryptOutgoingItemsOperation;
	NSOperation* _holdOutgoingQueueOperation;
	NSOperation* _holdIncomingQueueOperation;
	NSOperation* _holdLocalSynchronizeOperation;
	CKKSResultOperation* _holdFixupOperation;
	CKKSNearFutureScheduler* _notifyViewChangedScheduler;
	CKKSNearFutureScheduler* _notifyViewReadyScheduler;
	CKKSNearFutureScheduler* _pokeKeyStateMachineScheduler;
	NSArray* _currentPeerProviders;
	NSArray* _currentTrustStates;
	NSHashTable* _incomingQueueOperations;
	NSHashTable* _outgoingQueueOperations;
	CKKSScanLocalItemsOperation* _initialScanOperation;
	NSHashTable* _cloudkitDeleteZoneOperations;
	NSHashTable* _localResetOperations;
	NSHashTable* _keysetProviderOperations;
	NSString* _activeTLK;
	Class _notifierClass;
	CKKSNearFutureScheduler* _outgoingQueueOperationScheduler;
	CKKSResultOperation* _processIncomingQueueAfterNextUnlockOperation;
	CKKSResultOperation* _resultsOfNextIncomingQueueOperationOperation;
	NSMutableDictionary* _pendingSyncCallbacks;
	NSOperationQueue* _waitingQueue;

}

@property (assign) BOOL keyStateFetchRequested;                                                            //@synthesize keyStateFetchRequested=_keyStateFetchRequested - In the implementation block
@property (assign) BOOL keyStateFullRefetchRequested;                                                      //@synthesize keyStateFullRefetchRequested=_keyStateFullRefetchRequested - In the implementation block
@property (assign) BOOL keyStateProcessRequested;                                                          //@synthesize keyStateProcessRequested=_keyStateProcessRequested - In the implementation block
@property (assign) BOOL trustedPeersSetChanged;                                                            //@synthesize trustedPeersSetChanged=_trustedPeersSetChanged - In the implementation block
@property (assign) BOOL keyStateCloudKitDeleteRequested;                                                   //@synthesize keyStateCloudKitDeleteRequested=_keyStateCloudKitDeleteRequested - In the implementation block
@property (retain) NSHashTable * cloudkitDeleteZoneOperations;                                             //@synthesize cloudkitDeleteZoneOperations=_cloudkitDeleteZoneOperations - In the implementation block
@property (assign) BOOL keyStateLocalResetRequested;                                                       //@synthesize keyStateLocalResetRequested=_keyStateLocalResetRequested - In the implementation block
@property (retain) NSHashTable * localResetOperations;                                                     //@synthesize localResetOperations=_localResetOperations - In the implementation block
@property (assign) BOOL tlkCreationRequested;                                                              //@synthesize tlkCreationRequested=_tlkCreationRequested - In the implementation block
@property (retain) NSHashTable * keysetProviderOperations;                                                 //@synthesize keysetProviderOperations=_keysetProviderOperations - In the implementation block
@property (retain) NSString * activeTLK;                                                                   //@synthesize activeTLK=_activeTLK - In the implementation block
@property (readonly) Class notifierClass;                                                                  //@synthesize notifierClass=_notifierClass - In the implementation block
@property (retain) CKKSNearFutureScheduler * outgoingQueueOperationScheduler;                              //@synthesize outgoingQueueOperationScheduler=_outgoingQueueOperationScheduler - In the implementation block
@property (retain) CKKSResultOperation * processIncomingQueueAfterNextUnlockOperation;                     //@synthesize processIncomingQueueAfterNextUnlockOperation=_processIncomingQueueAfterNextUnlockOperation - In the implementation block
@property (retain) CKKSResultOperation * resultsOfNextIncomingQueueOperationOperation;                     //@synthesize resultsOfNextIncomingQueueOperationOperation=_resultsOfNextIncomingQueueOperationOperation - In the implementation block
@property (retain) NSMutableDictionary * pendingSyncCallbacks;                                             //@synthesize pendingSyncCallbacks=_pendingSyncCallbacks - In the implementation block
@property (retain) NSOperationQueue * waitingQueue;                                                        //@synthesize waitingQueue=_waitingQueue - In the implementation block
@property (retain) NSArray * currentPeerProviders;                                                         //@synthesize currentPeerProviders=_currentPeerProviders - In the implementation block
@property (retain) NSArray * currentTrustStates;                                                           //@synthesize currentTrustStates=_currentTrustStates - In the implementation block
@property (retain) CKKSCondition * loggedIn;                                                               //@synthesize loggedIn=_loggedIn - In the implementation block
@property (retain) CKKSCondition * loggedOut;                                                              //@synthesize loggedOut=_loggedOut - In the implementation block
@property (retain) CKKSCondition * accountStateKnown;                                                      //@synthesize accountStateKnown=_accountStateKnown - In the implementation block
@property (assign) long long trustStatus;                                                                  //@synthesize trustStatus=_trustStatus - In the implementation block
@property (retain) CKKSResultOperation * trustDependency;                                                  //@synthesize trustDependency=_trustDependency - In the implementation block
@property (retain) CKKSLaunchSequence * launch;                                                            //@synthesize launch=_launch - In the implementation block
@property (retain) CKKSLockStateTracker * lockStateTracker;                                                //@synthesize lockStateTracker=_lockStateTracker - In the implementation block
@property (retain) NSString*<SecCKKSZoneKeyState> keyHierarchyState; 
@property (retain) NSError * keyHierarchyError;                                                            //@synthesize keyHierarchyError=_keyHierarchyError - In the implementation block
@property (retain) CKOperationGroup * keyHierarchyOperationGroup;                                          //@synthesize keyHierarchyOperationGroup=_keyHierarchyOperationGroup - In the implementation block
@property (retain) NSOperation * keyStateMachineOperation;                                                 //@synthesize keyStateMachineOperation=_keyStateMachineOperation - In the implementation block
@property (assign) BOOL keyStateMachineRefetched;                                                          //@synthesize keyStateMachineRefetched=_keyStateMachineRefetched - In the implementation block
@property (retain) CKKSEgoManifest * egoManifest;                                                          //@synthesize egoManifest=_egoManifest - In the implementation block
@property (retain) CKKSManifest * latestManifest;                                                          //@synthesize latestManifest=_latestManifest - In the implementation block
@property (retain) CKKSResultOperation * keyStateReadyDependency;                                          //@synthesize keyStateReadyDependency=_keyStateReadyDependency - In the implementation block
@property (retain) CKKSResultOperation * keyStateNonTransientDependency;                                   //@synthesize keyStateNonTransientDependency=_keyStateNonTransientDependency - In the implementation block
@property (assign) BOOL droppedItems;                                                                      //@synthesize droppedItems=_droppedItems - In the implementation block
@property (readonly) NSString * lastActiveTLKUUID; 
@property (retain) NSMutableDictionary * keyHierarchyConditions;                                           //@synthesize keyHierarchyConditions=_keyHierarchyConditions - In the implementation block
@property (retain) CKKSZoneChangeFetcher * zoneChangeFetcher;                                              //@synthesize zoneChangeFetcher=_zoneChangeFetcher - In the implementation block
@property (__weak) CKKSNearFutureScheduler * savedTLKNotifier;                                             //@synthesize savedTLKNotifier=_savedTLKNotifier - In the implementation block
@property (retain) CKKSNearFutureScheduler * suggestTLKUpload;                                             //@synthesize suggestTLKUpload=_suggestTLKUpload - In the implementation block
@property (retain) CKKSIncomingQueueOperation * lastIncomingQueueOperation;                                //@synthesize lastIncomingQueueOperation=_lastIncomingQueueOperation - In the implementation block
@property (retain) CKKSNewTLKOperation * lastNewTLKOperation;                                              //@synthesize lastNewTLKOperation=_lastNewTLKOperation - In the implementation block
@property (retain) CKKSOutgoingQueueOperation * lastOutgoingQueueOperation;                                //@synthesize lastOutgoingQueueOperation=_lastOutgoingQueueOperation - In the implementation block
@property (retain) CKKSProcessReceivedKeysOperation * lastProcessReceivedKeysOperation;                    //@synthesize lastProcessReceivedKeysOperation=_lastProcessReceivedKeysOperation - In the implementation block
@property (retain) CKKSReencryptOutgoingItemsOperation * lastReencryptOutgoingItemsOperation;              //@synthesize lastReencryptOutgoingItemsOperation=_lastReencryptOutgoingItemsOperation - In the implementation block
@property (retain) CKKSScanLocalItemsOperation * lastScanLocalItemsOperation;                              //@synthesize lastScanLocalItemsOperation=_lastScanLocalItemsOperation - In the implementation block
@property (retain) CKKSSynchronizeOperation * lastSynchronizeOperation;                                    //@synthesize lastSynchronizeOperation=_lastSynchronizeOperation - In the implementation block
@property (retain) CKKSResultOperation * lastFixupOperation;                                               //@synthesize lastFixupOperation=_lastFixupOperation - In the implementation block
@property (retain) NSOperation * holdReencryptOutgoingItemsOperation;                                      //@synthesize holdReencryptOutgoingItemsOperation=_holdReencryptOutgoingItemsOperation - In the implementation block
@property (retain) NSOperation * holdOutgoingQueueOperation;                                               //@synthesize holdOutgoingQueueOperation=_holdOutgoingQueueOperation - In the implementation block
@property (retain) NSOperation * holdIncomingQueueOperation;                                               //@synthesize holdIncomingQueueOperation=_holdIncomingQueueOperation - In the implementation block
@property (retain) NSOperation * holdLocalSynchronizeOperation;                                            //@synthesize holdLocalSynchronizeOperation=_holdLocalSynchronizeOperation - In the implementation block
@property (retain) CKKSResultOperation * holdFixupOperation;                                               //@synthesize holdFixupOperation=_holdFixupOperation - In the implementation block
@property (retain) CKKSNearFutureScheduler * notifyViewChangedScheduler;                                   //@synthesize notifyViewChangedScheduler=_notifyViewChangedScheduler - In the implementation block
@property (retain) CKKSNearFutureScheduler * notifyViewReadyScheduler;                                     //@synthesize notifyViewReadyScheduler=_notifyViewReadyScheduler - In the implementation block
@property (retain) CKKSNearFutureScheduler * pokeKeyStateMachineScheduler;                                 //@synthesize pokeKeyStateMachineScheduler=_pokeKeyStateMachineScheduler - In the implementation block
@property (retain) NSHashTable * incomingQueueOperations;                                                  //@synthesize incomingQueueOperations=_incomingQueueOperations - In the implementation block
@property (retain) NSHashTable * outgoingQueueOperations;                                                  //@synthesize outgoingQueueOperations=_outgoingQueueOperations - In the implementation block
@property (retain) CKKSScanLocalItemsOperation * initialScanOperation;                                     //@synthesize initialScanOperation=_initialScanOperation - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)findKeySet;
-(CKKSLockStateTracker *)lockStateTracker;
-(void)setLockStateTracker:(CKKSLockStateTracker *)arg1 ;
-(void)trustedPeerSetChanged:(id)arg1 ;
-(void)selfPeerChanged:(id)arg1 ;
-(id)keyForItem:(SecDbItem*)arg1 error:(id*)arg2 ;
-(void)processIncomingQueueAfterNextUnlock;
-(id)processOutgoingQueue:(id)arg1 ;
-(CKKSEgoManifest *)egoManifest;
-(CKKSManifest *)latestManifest;
-(void)setLastIncomingQueueOperation:(CKKSIncomingQueueOperation *)arg1 ;
-(CKKSNearFutureScheduler *)pokeKeyStateMachineScheduler;
-(CKKSNearFutureScheduler *)notifyViewChangedScheduler;
-(void)dispatchSyncWithAccountKeys:(/*^block*/id)arg1 ;
-(void)setLatestManifest:(CKKSManifest *)arg1 ;
-(NSHashTable *)incomingQueueOperations;
-(NSOperation *)holdIncomingQueueOperation;
-(CKKSResultOperation *)keyStateReadyDependency;
-(BOOL)_onqueueChangeOutgoingQueueEntry:(id)arg1 toState:(id)arg2 error:(id*)arg3 ;
-(BOOL)_onqueueErrorOutgoingQueueEntry:(id)arg1 itemError:(id)arg2 error:(id*)arg3 ;
-(id)_onqueueCurrentDeviceStateEntry:(id*)arg1 ;
-(id)processOutgoingQueueAfter:(id)arg1 requiredDelay:(unsigned long long)arg2 ckoperationGroup:(id)arg3 ;
-(BOOL)_onqueueCKWriteFailed:(id)arg1 attemptedRecordsChanged:(id)arg2 ;
-(id)_onqueuePriorityOutgoingQueueUUIDs;
-(void)setLastOutgoingQueueOperation:(CKKSOutgoingQueueOperation *)arg1 ;
-(NSHashTable *)outgoingQueueOperations;
-(NSOperation *)holdOutgoingQueueOperation;
-(void)receiveTLKUploadRecords:(id)arg1 ;
-(void)_onqueueAdvanceKeyStateMachineToState:(NSString*)arg1 withError:(id)arg2 ;
-(id)_onqueueCreateMissingKeyShares:(id)arg1 error:(id*)arg2 ;
-(BOOL)_onqueueWithAccountKeysCheckTLK:(id)arg1 error:(id*)arg2 ;
-(BOOL)keyStateMachineRefetched;
-(BOOL)_onqueueCKRecordChanged:(id)arg1 resync:(BOOL)arg2 ;
-(NSOperation *)holdLocalSynchronizeOperation;
-(void)setLastSynchronizeOperation:(CKKSSynchronizeOperation *)arg1 ;
-(void)setDroppedItems:(BOOL)arg1 ;
-(id)processIncomingQueue:(BOOL)arg1 ;
-(void)setEgoManifest:(CKKSEgoManifest *)arg1 ;
-(void)setLastScanLocalItemsOperation:(CKKSScanLocalItemsOperation *)arg1 ;
-(id)participateInFetch;
-(void)changesFetched:(id)arg1 deletedRecordIDs:(id)arg2 oldChangeToken:(id)arg3 newChangeToken:(id)arg4 ;
-(id)resetCloudKitZone:(id)arg1 ;
-(BOOL)otherDevicesReportHavingTLKs:(id)arg1 ;
-(void)beginTrustedOperation:(id)arg1 suggestTLKUpload:(id)arg2 ;
-(void)endTrustedOperation;
-(void)cancelPendingOperations;
-(CKKSZoneChangeFetcher *)zoneChangeFetcher;
-(void)setZoneChangeFetcher:(CKKSZoneChangeFetcher *)arg1 ;
-(NSMutableDictionary *)pendingSyncCallbacks;
-(void)setPendingSyncCallbacks:(NSMutableDictionary *)arg1 ;
-(CKKSNearFutureScheduler *)savedTLKNotifier;
-(void)setSavedTLKNotifier:(CKKSNearFutureScheduler *)arg1 ;
-(void)halt;
-(id)updateDeviceState:(BOOL)arg1 waitForKeyHierarchyInitialization:(unsigned long long)arg2 ckoperationGroup:(id)arg3 ;
-(id)processIncomingQueue:(BOOL)arg1 after:(id)arg2 ;
-(CKKSResultOperation *)keyStateNonTransientDependency;
-(id)fastStatus;
-(id)resyncLocal;
-(id)resyncWithCloud;
-(id)resetLocalData;
-(void)getCurrentItemForAccessGroup:(id)arg1 identifier:(id)arg2 fetchCloudValue:(BOOL)arg3 complete:(/*^block*/id)arg4 ;
-(void)setCurrentItemForAccessGroup:(id)arg1 hash:(id)arg2 accessGroup:(id)arg3 identifier:(id)arg4 replacing:(id)arg5 hash:(id)arg6 complete:(/*^block*/id)arg7 ;
-(void)handleKeychainEventDbConnection:(OpaqueSecDbConnectionRef)arg1 added:(SecDbItem*)arg2 deleted:(SecDbItem*)arg3 rateLimiter:(id)arg4 syncCallback:(/*^block*/id)arg5 ;
-(void)keyStateMachineRequestProcess;
-(NSString *)lastActiveTLKUUID;
-(id)initWithContainer:(id)arg1 zoneName:(id)arg2 accountTracker:(id)arg3 lockStateTracker:(id)arg4 reachabilityTracker:(id)arg5 changeFetcher:(id)arg6 zoneModifier:(id)arg7 savedTLKNotifier:(id)arg8 cloudKitClassDependencies:(id)arg9 ;
-(CKKSOutgoingQueueOperation *)lastOutgoingQueueOperation;
-(CKKSIncomingQueueOperation *)lastIncomingQueueOperation;
-(NSString*<SecCKKSZoneKeyState>)keyHierarchyState;
-(BOOL)_onqueueCKRecordDeleted:(id)arg1 recordType:(id)arg2 resync:(BOOL)arg3 ;
-(CKKSResultOperation *)holdFixupOperation;
-(Class)notifierClass;
-(NSArray *)currentTrustStates;
-(void)setLastNewTLKOperation:(CKKSNewTLKOperation *)arg1 ;
-(BOOL)shouldRetryAfterFetchError:(id)arg1 ;
-(void)notifyZoneChange:(id)arg1 ;
-(void)setKeyHierarchyState:(NSString*<SecCKKSZoneKeyState>)arg1 ;
-(void)_onqueueResetSetup:(NSString*)arg1 resetMessage:(id)arg2 ckoperationGroup:(id)arg3 ;
-(void)ensureKeyStateReadyDependency:(id)arg1 ;
-(id)createPendingInitializationOperation;
-(void)_onqueuePerformKeyStateInitialized:(id)arg1 ;
-(BOOL)_onqueueResetLocalData:(id*)arg1 ;
-(id)createPendingResetLocalDataOperation;
-(id)createPendingDeleteZoneOperation:(id)arg1 ;
-(void)_onqueueKeyStateMachineRequestFetch;
-(void)_onqueueKeyStateMachineRequestProcess;
-(id)createKeyStateReadyDependency:(id)arg1 ckoperationGroup:(id)arg2 ;
-(id)createKeyStateNontransientDependency;
-(void)_onqueueHandleKeyStateNonTransientDependency:(id)arg1 ;
-(id)operationToEnterState:(NSString*)arg1 keyStateError:(id)arg2 named:(id)arg3 ;
-(BOOL)_onqueueOtherDevicesReportHavingTLKs:(id)arg1 ;
-(id)_onqueueFindPeers:(id)arg1 missingShare:(id)arg2 afterUploading:(id)arg3 error:(id*)arg4 ;
-(BOOL)_onqueueAreNewSharesSufficient:(id)arg1 currentTLK:(id)arg2 error:(id*)arg3 ;
-(id)_onqueueCreateMissingKeyShares:(id)arg1 peers:(id)arg2 error:(id*)arg3 ;
-(NSString*)_onqueueEnsureKeyHierarchyHealth:(id)arg1 error:(id*)arg2 ;
-(void)_onqueueKeyHierarchyFetch;
-(void)_onqueueKeyHierarchyRefetch;
-(void)_onqueueRunKeysetProviderOperations:(id)arg1 ;
-(id)findFirstPendingOperation:(id)arg1 ;
-(id)findFirstPendingOperation:(id)arg1 ofClass:(Class)arg2 ;
-(long long)countPendingOperations:(id)arg1 ;
-(id)processOutgoingQueueAfter:(id)arg1 ckoperationGroup:(id)arg2 ;
-(id)resultsOfNextProcessIncomingQueueOperation;
-(id)scanLocalItems:(id)arg1 ;
-(id)scanLocalItems:(id)arg1 ckoperationGroup:(id)arg2 after:(id)arg3 ;
-(id)fetchAndProcessCKChanges:(NSString*)arg1 ;
-(id)fetchAndProcessCKChanges:(NSString*)arg1 after:(id)arg2 ;
-(id)fetchAndProcessCKChangesDueToAPNS:(id)arg1 ;
-(void)_onqueueCKRecordItemChanged:(id)arg1 resync:(BOOL)arg2 ;
-(void)_onqueueCKRecordKeyChanged:(id)arg1 resync:(BOOL)arg2 ;
-(void)_onqueueCKRecordTLKShareChanged:(id)arg1 resync:(BOOL)arg2 ;
-(void)_onqueueCKRecordCurrentKeyPointerChanged:(id)arg1 resync:(BOOL)arg2 ;
-(void)_onqueueCKRecordCurrentItemPointerChanged:(id)arg1 resync:(BOOL)arg2 ;
-(void)_onqueueCKRecordManifestChanged:(id)arg1 resync:(BOOL)arg2 ;
-(void)_onqueueCKRecordManifestLeafChanged:(id)arg1 resync:(BOOL)arg2 ;
-(void)_onqueueCKRecordDeviceStateChanged:(id)arg1 resync:(BOOL)arg2 ;
-(BOOL)_onqueueResetAllInflightOQE:(id*)arg1 ;
-(BOOL)_onqueueUpdateLatestManifestWithError:(id*)arg1 ;
-(BOOL)_onqueueWithAccountKeysCheckTLKFromShares:(id)arg1 error:(id*)arg2 ;
-(BOOL)_onqueueWithAccountKeysWithPeers:(id)arg1 checkTLK:(id)arg2 error:(id*)arg3 ;
-(BOOL)dispatchSyncWithConnection:(OpaqueSecDbConnectionRef)arg1 block:(/*^block*/id)arg2 ;
-(void)dispatchSyncWithPeerProviders:(id)arg1 override:(BOOL)arg2 block:(/*^block*/id)arg3 ;
-(void)superHandleCKLogin;
-(void)handleCKLogin;
-(void)superHandleCKLogout;
-(void)handleCKLogout;
-(void)callSyncCallbackWithErrorNoAccount:(/*^block*/id)arg1 ;
-(BOOL)ckErrorOrPartialError:(id)arg1 isError:(long long)arg2 ;
-(BOOL)outgoingQueueEmpty:(id*)arg1 ;
-(id)waitForFetchAndIncomingQueueProcessing;
-(void)waitForKeyHierarchyReadiness;
-(CKKSCondition *)loggedIn;
-(void)setLoggedIn:(CKKSCondition *)arg1 ;
-(CKKSCondition *)loggedOut;
-(void)setLoggedOut:(CKKSCondition *)arg1 ;
-(CKKSCondition *)accountStateKnown;
-(void)setAccountStateKnown:(CKKSCondition *)arg1 ;
-(long long)trustStatus;
-(void)setTrustStatus:(long long)arg1 ;
-(CKKSResultOperation *)trustDependency;
-(void)setTrustDependency:(CKKSResultOperation *)arg1 ;
-(void)setLaunch:(CKKSLaunchSequence *)arg1 ;
-(NSError *)keyHierarchyError;
-(void)setKeyHierarchyError:(NSError *)arg1 ;
-(CKOperationGroup *)keyHierarchyOperationGroup;
-(void)setKeyHierarchyOperationGroup:(CKOperationGroup *)arg1 ;
-(NSOperation *)keyStateMachineOperation;
-(void)setKeyStateMachineOperation:(NSOperation *)arg1 ;
-(void)setKeyStateMachineRefetched:(BOOL)arg1 ;
-(void)setKeyStateReadyDependency:(CKKSResultOperation *)arg1 ;
-(void)setKeyStateNonTransientDependency:(CKKSResultOperation *)arg1 ;
-(BOOL)droppedItems;
-(NSMutableDictionary *)keyHierarchyConditions;
-(void)setKeyHierarchyConditions:(NSMutableDictionary *)arg1 ;
-(CKKSNearFutureScheduler *)suggestTLKUpload;
-(void)setSuggestTLKUpload:(CKKSNearFutureScheduler *)arg1 ;
-(CKKSNewTLKOperation *)lastNewTLKOperation;
-(CKKSProcessReceivedKeysOperation *)lastProcessReceivedKeysOperation;
-(void)setLastProcessReceivedKeysOperation:(CKKSProcessReceivedKeysOperation *)arg1 ;
-(CKKSReencryptOutgoingItemsOperation *)lastReencryptOutgoingItemsOperation;
-(void)setLastReencryptOutgoingItemsOperation:(CKKSReencryptOutgoingItemsOperation *)arg1 ;
-(CKKSScanLocalItemsOperation *)lastScanLocalItemsOperation;
-(CKKSSynchronizeOperation *)lastSynchronizeOperation;
-(CKKSResultOperation *)lastFixupOperation;
-(void)setLastFixupOperation:(CKKSResultOperation *)arg1 ;
-(NSOperation *)holdReencryptOutgoingItemsOperation;
-(void)setHoldReencryptOutgoingItemsOperation:(NSOperation *)arg1 ;
-(void)setHoldOutgoingQueueOperation:(NSOperation *)arg1 ;
-(void)setHoldIncomingQueueOperation:(NSOperation *)arg1 ;
-(void)setHoldLocalSynchronizeOperation:(NSOperation *)arg1 ;
-(void)setHoldFixupOperation:(CKKSResultOperation *)arg1 ;
-(void)setNotifyViewChangedScheduler:(CKKSNearFutureScheduler *)arg1 ;
-(CKKSNearFutureScheduler *)notifyViewReadyScheduler;
-(void)setNotifyViewReadyScheduler:(CKKSNearFutureScheduler *)arg1 ;
-(void)setPokeKeyStateMachineScheduler:(CKKSNearFutureScheduler *)arg1 ;
-(NSArray *)currentPeerProviders;
-(void)setCurrentPeerProviders:(NSArray *)arg1 ;
-(void)setCurrentTrustStates:(NSArray *)arg1 ;
-(void)setIncomingQueueOperations:(NSHashTable *)arg1 ;
-(void)setOutgoingQueueOperations:(NSHashTable *)arg1 ;
-(CKKSScanLocalItemsOperation *)initialScanOperation;
-(void)setInitialScanOperation:(CKKSScanLocalItemsOperation *)arg1 ;
-(BOOL)keyStateFetchRequested;
-(void)setKeyStateFetchRequested:(BOOL)arg1 ;
-(BOOL)keyStateFullRefetchRequested;
-(void)setKeyStateFullRefetchRequested:(BOOL)arg1 ;
-(BOOL)keyStateProcessRequested;
-(void)setKeyStateProcessRequested:(BOOL)arg1 ;
-(BOOL)trustedPeersSetChanged;
-(void)setTrustedPeersSetChanged:(BOOL)arg1 ;
-(BOOL)keyStateCloudKitDeleteRequested;
-(void)setKeyStateCloudKitDeleteRequested:(BOOL)arg1 ;
-(NSHashTable *)cloudkitDeleteZoneOperations;
-(void)setCloudkitDeleteZoneOperations:(NSHashTable *)arg1 ;
-(BOOL)keyStateLocalResetRequested;
-(void)setKeyStateLocalResetRequested:(BOOL)arg1 ;
-(NSHashTable *)localResetOperations;
-(void)setLocalResetOperations:(NSHashTable *)arg1 ;
-(BOOL)tlkCreationRequested;
-(void)setTlkCreationRequested:(BOOL)arg1 ;
-(NSHashTable *)keysetProviderOperations;
-(void)setKeysetProviderOperations:(NSHashTable *)arg1 ;
-(NSString *)activeTLK;
-(void)setActiveTLK:(NSString *)arg1 ;
-(CKKSNearFutureScheduler *)outgoingQueueOperationScheduler;
-(void)setOutgoingQueueOperationScheduler:(CKKSNearFutureScheduler *)arg1 ;
-(CKKSResultOperation *)processIncomingQueueAfterNextUnlockOperation;
-(void)setProcessIncomingQueueAfterNextUnlockOperation:(CKKSResultOperation *)arg1 ;
-(CKKSResultOperation *)resultsOfNextIncomingQueueOperationOperation;
-(void)setResultsOfNextIncomingQueueOperationOperation:(CKKSResultOperation *)arg1 ;
-(NSOperationQueue *)waitingQueue;
-(void)setWaitingQueue:(NSOperationQueue *)arg1 ;
-(NSString *)debugDescription;
-(NSString *)description;
-(void)cancelAllOperations;
-(id)status;
-(CKKSLaunchSequence *)launch;
-(void)dispatchSync:(/*^block*/id)arg1 ;
@end


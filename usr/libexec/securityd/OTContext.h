/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:52 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/securityd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, OTContextIdentityProvider;
@class NSString, OTCloudStore, CKKSLockStateTracker, CKKSAccountStateTracker, CKKSReachabilityTracker, OTLocalStore, NSData, NSDate, NSObject;

@interface OTContext : NSObject {

	NSString* _contextID;
	NSString* _dsid;
	OTCloudStore* _cloudStore;
	CKKSLockStateTracker* _lockStateTracker;
	CKKSAccountStateTracker* _accountTracker;
	CKKSReachabilityTracker* _reachabilityTracker;
	NSString* _contextName;
	OTLocalStore* _localStore;
	NSData* _changeToken;
	NSString* _egoPeerID;
	NSDate* _egoPeerCreationDate;
	NSObject*<OS_dispatch_queue> _queue;
	id<OTContextIdentityProvider> _identityProvider;

}

@property (nonatomic,retain) NSString * contextID;                                               //@synthesize contextID=_contextID - In the implementation block
@property (nonatomic,retain) NSString * contextName;                                             //@synthesize contextName=_contextName - In the implementation block
@property (nonatomic,retain) NSString * dsid;                                                    //@synthesize dsid=_dsid - In the implementation block
@property (nonatomic,retain) OTLocalStore * localStore;                                          //@synthesize localStore=_localStore - In the implementation block
@property (nonatomic,retain) OTCloudStore * cloudStore;                                          //@synthesize cloudStore=_cloudStore - In the implementation block
@property (nonatomic,retain) NSData * changeToken;                                               //@synthesize changeToken=_changeToken - In the implementation block
@property (nonatomic,retain) NSString * egoPeerID;                                               //@synthesize egoPeerID=_egoPeerID - In the implementation block
@property (nonatomic,retain) NSDate * egoPeerCreationDate;                                       //@synthesize egoPeerCreationDate=_egoPeerCreationDate - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                                 //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic,__weak) id<OTContextIdentityProvider> identityProvider;              //@synthesize identityProvider=_identityProvider - In the implementation block
@property (nonatomic,retain) CKKSAccountStateTracker * accountTracker;                           //@synthesize accountTracker=_accountTracker - In the implementation block
@property (nonatomic,retain) CKKSLockStateTracker * lockStateTracker;                            //@synthesize lockStateTracker=_lockStateTracker - In the implementation block
@property (nonatomic,retain) CKKSReachabilityTracker * reachabilityTracker;                      //@synthesize reachabilityTracker=_reachabilityTracker - In the implementation block
-(CKKSLockStateTracker *)lockStateTracker;
-(void)setLockStateTracker:(CKKSLockStateTracker *)arg1 ;
-(void)setLocalStore:(OTLocalStore *)arg1 ;
-(int)doesThisDeviceHaveABottle:(id*)arg1 ;
-(CKKSReachabilityTracker *)reachabilityTracker;
-(CKKSAccountStateTracker *)accountTracker;
-(BOOL)scrubBottledPeer:(id)arg1 bottleID:(id)arg2 error:(id*)arg3 ;
-(id)restoreFromEscrowRecordID:(id)arg1 secret:(id)arg2 error:(id*)arg3 ;
-(id)preflightBottledPeer:(id)arg1 entropy:(id)arg2 error:(id*)arg3 ;
-(id)makeMeSomeEntropy:(int)arg1 ;
-(BOOL)updateAllBottlesForPeerID:(id)arg1 newSigningKey:(id)arg2 newEncryptionKey:(id)arg3 error:(id*)arg4 ;
-(id)initWithContextID:(id)arg1 dsid:(id)arg2 localStore:(id)arg3 cloudStore:(id)arg4 identityProvider:(id)arg5 error:(id*)arg6 ;
-(NSDate *)egoPeerCreationDate;
-(void)setEgoPeerCreationDate:(NSDate *)arg1 ;
-(void)setAccountTracker:(CKKSAccountStateTracker *)arg1 ;
-(void)setReachabilityTracker:(CKKSReachabilityTracker *)arg1 ;
-(id)makeCKContainer:(id)arg1 ;
-(BOOL)isPrequeliteEnabled;
-(id)createBottledPeerRecordForIdentity:(id)arg1 secret:(id)arg2 error:(id*)arg3 ;
-(BOOL)updateBottleForPeerID:(id)arg1 newSigningKey:(id)arg2 newEncryptionKey:(id)arg3 escrowKeySet:(id)arg4 error:(id*)arg5 ;
-(BOOL)bottleExistsLocallyForIdentity:(id)arg1 error:(id*)arg2 ;
-(BOOL)queryCloudKitForBottle:(id)arg1 error:(id*)arg2 ;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(NSString *)contextID;
-(void)setContextID:(NSString *)arg1 ;
-(NSString *)dsid;
-(void)setDsid:(NSString *)arg1 ;
-(void)setContextName:(NSString *)arg1 ;
-(NSString *)contextName;
-(NSData *)changeToken;
-(OTLocalStore *)localStore;
-(id<OTContextIdentityProvider>)identityProvider;
-(void)setIdentityProvider:(id<OTContextIdentityProvider>)arg1 ;
-(void)setCloudStore:(OTCloudStore *)arg1 ;
-(OTCloudStore *)cloudStore;
-(void)setChangeToken:(NSData *)arg1 ;
-(NSString *)egoPeerID;
-(void)setEgoPeerID:(NSString *)arg1 ;
@end


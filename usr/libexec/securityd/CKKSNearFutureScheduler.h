/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:51 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/securityd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_source, OS_dispatch_queue, OS_os_transaction;
@class CKKSResultOperation, NSString, NSOperationQueue, NSDate, CKKSCondition, NSObject;

@interface CKKSNearFutureScheduler : NSObject {

	BOOL _liveRequest;
	BOOL _keepProcessAlive;
	/*^block*/id _futureBlock;
	CKKSResultOperation* _operationDependency;
	NSString* _name;
	unsigned long long _initialDelay;
	unsigned long long _continuingDelay;
	long long _operationDependencyDescriptionCode;
	NSOperationQueue* _operationQueue;
	NSDate* _predictedNextFireTime;
	CKKSCondition* _liveRequestReceived;
	NSObject*<OS_dispatch_source> _timer;
	NSObject*<OS_dispatch_queue> _queue;
	NSObject*<OS_os_transaction> _transaction;

}

@property (retain) NSString * name;                                           //@synthesize name=_name - In the implementation block
@property (assign) unsigned long long initialDelay;                           //@synthesize initialDelay=_initialDelay - In the implementation block
@property (assign) unsigned long long continuingDelay;                        //@synthesize continuingDelay=_continuingDelay - In the implementation block
@property (assign) long long operationDependencyDescriptionCode;              //@synthesize operationDependencyDescriptionCode=_operationDependencyDescriptionCode - In the implementation block
@property (retain) CKKSResultOperation * operationDependency;                 //@synthesize operationDependency=_operationDependency - In the implementation block
@property (retain) NSOperationQueue * operationQueue;                         //@synthesize operationQueue=_operationQueue - In the implementation block
@property (retain) NSDate * predictedNextFireTime;                            //@synthesize predictedNextFireTime=_predictedNextFireTime - In the implementation block
@property (assign) BOOL liveRequest;                                          //@synthesize liveRequest=_liveRequest - In the implementation block
@property (retain) CKKSCondition * liveRequestReceived;                       //@synthesize liveRequestReceived=_liveRequestReceived - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> timer;                       //@synthesize timer=_timer - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> queue;                        //@synthesize queue=_queue - In the implementation block
@property (assign) BOOL keepProcessAlive;                                     //@synthesize keepProcessAlive=_keepProcessAlive - In the implementation block
@property (retain) NSObject*<OS_os_transaction> transaction;                  //@synthesize transaction=_transaction - In the implementation block
@property (readonly) NSDate * nextFireTime; 
@property (copy) id futureBlock;                                              //@synthesize futureBlock=_futureBlock - In the implementation block
-(id)initWithName:(id)arg1 initialDelay:(unsigned long long)arg2 continuingDelay:(unsigned long long)arg3 keepProcessAlive:(BOOL)arg4 dependencyDescriptionCode:(long long)arg5 block:(/*^block*/id)arg6 ;
-(id)initWithName:(id)arg1 delay:(unsigned long long)arg2 keepProcessAlive:(BOOL)arg3 dependencyDescriptionCode:(long long)arg4 block:(/*^block*/id)arg5 ;
-(void)changeDelays:(unsigned long long)arg1 continuingDelay:(unsigned long long)arg2 ;
-(id)makeOperationDependency;
-(void)waitUntil:(unsigned long long)arg1 ;
-(void)triggerAt:(unsigned long long)arg1 ;
-(void)_onqueueTimerTick;
-(void)_onqueueTrigger:(unsigned long long)arg1 maximumDelay:(unsigned long long)arg2 ;
-(id)futureBlock;
-(void)setFutureBlock:(id)arg1 ;
-(CKKSResultOperation *)operationDependency;
-(void)setOperationDependency:(CKKSResultOperation *)arg1 ;
-(unsigned long long)continuingDelay;
-(void)setContinuingDelay:(unsigned long long)arg1 ;
-(long long)operationDependencyDescriptionCode;
-(void)setOperationDependencyDescriptionCode:(long long)arg1 ;
-(NSDate *)predictedNextFireTime;
-(void)setPredictedNextFireTime:(NSDate *)arg1 ;
-(BOOL)liveRequest;
-(void)setLiveRequest:(BOOL)arg1 ;
-(CKKSCondition *)liveRequestReceived;
-(void)setLiveRequestReceived:(CKKSCondition *)arg1 ;
-(BOOL)keepProcessAlive;
-(void)setKeepProcessAlive:(BOOL)arg1 ;
-(NSString *)name;
-(id)description;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setName:(NSString *)arg1 ;
-(void)cancel;
-(void)setTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSOperationQueue *)operationQueue;
-(void)setOperationQueue:(NSOperationQueue *)arg1 ;
-(void)trigger;
-(NSObject*<OS_os_transaction>)transaction;
-(NSObject*<OS_dispatch_source>)timer;
-(unsigned long long)initialDelay;
-(void)setInitialDelay:(unsigned long long)arg1 ;
-(void)setTransaction:(NSObject*<OS_os_transaction>)arg1 ;
-(NSDate *)nextFireTime;
@end


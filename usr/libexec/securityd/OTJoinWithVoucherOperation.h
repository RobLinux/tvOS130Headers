/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:51 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/securityd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <securityd/securityd-Structs.h>
#import <securityd/CKKSGroupOperation.h>
#import <securityd/OctagonStateTransitionOperationProtocol.h>

@class NSData, NSArray, NSString, OTOperationDependencies, NSOperation, CKKSNearFutureScheduler;

@interface OTJoinWithVoucherOperation : CKKSGroupOperation <OctagonStateTransitionOperationProtocol> {

	int _retries;
	int _maxRetries;
	int _delay;
	NSString* _intendedState;
	NSString* _nextState;
	NSData* _voucherData;
	NSData* _voucherSig;
	NSArray* _preapprovedKeys;
	NSString* _peerID;
	OTOperationDependencies* _deps;
	NSString* _ckksConflictState;
	NSOperation* _finishedOp;
	CKKSNearFutureScheduler* _retrySched;

}

@property (retain) OTOperationDependencies * deps;                               //@synthesize deps=_deps - In the implementation block
@property (retain) NSString*<OctagonStateString> ckksConflictState;              //@synthesize ckksConflictState=_ckksConflictState - In the implementation block
@property (retain) NSOperation * finishedOp;                                     //@synthesize finishedOp=_finishedOp - In the implementation block
@property (assign) int retries;                                                  //@synthesize retries=_retries - In the implementation block
@property (assign) int maxRetries;                                               //@synthesize maxRetries=_maxRetries - In the implementation block
@property (assign) int delay;                                                    //@synthesize delay=_delay - In the implementation block
@property (retain) CKKSNearFutureScheduler * retrySched;                         //@synthesize retrySched=_retrySched - In the implementation block
@property (retain) NSString*<OctagonStateString> nextState;                      //@synthesize nextState=_nextState - In the implementation block
@property (nonatomic,retain) NSData * voucherData;                               //@synthesize voucherData=_voucherData - In the implementation block
@property (nonatomic,retain) NSData * voucherSig;                                //@synthesize voucherSig=_voucherSig - In the implementation block
@property (nonatomic,retain) NSArray * preapprovedKeys;                          //@synthesize preapprovedKeys=_preapprovedKeys - In the implementation block
@property (nonatomic,retain) NSString * peerID;                                  //@synthesize peerID=_peerID - In the implementation block
@property (readonly) NSString*<OctagonStateString> intendedState;                //@synthesize intendedState=_intendedState - In the implementation block
-(void)groupStart;
-(NSString*<OctagonStateString>)intendedState;
-(NSOperation *)finishedOp;
-(void)setFinishedOp:(NSOperation *)arg1 ;
-(OTOperationDependencies *)deps;
-(void)setDeps:(OTOperationDependencies *)arg1 ;
-(NSData *)voucherSig;
-(void)setVoucherSig:(NSData *)arg1 ;
-(void)proceedWithKeys:(id)arg1 pendingTLKShares:(id)arg2 ;
-(NSString*<OctagonStateString>)ckksConflictState;
-(void)setCkksConflictState:(NSString*<OctagonStateString>)arg1 ;
-(id)initWithDependencies:(id)arg1 intendedState:(NSString*)arg2 ckksConflictState:(NSString*)arg3 errorState:(NSString*)arg4 voucherData:(id)arg5 voucherSig:(id)arg6 preapprovedKeys:(id)arg7 ;
-(BOOL)isRetryable:(id)arg1 ;
-(int)retryDelay:(id)arg1 ;
-(NSData *)voucherData;
-(void)setVoucherData:(NSData *)arg1 ;
-(CKKSNearFutureScheduler *)retrySched;
-(void)setRetrySched:(CKKSNearFutureScheduler *)arg1 ;
-(int)delay;
-(void)setDelay:(int)arg1 ;
-(int)retries;
-(NSString *)peerID;
-(void)setMaxRetries:(int)arg1 ;
-(int)maxRetries;
-(void)setRetries:(int)arg1 ;
-(NSString*<OctagonStateString>)nextState;
-(void)setNextState:(NSString*<OctagonStateString>)arg1 ;
-(NSArray *)preapprovedKeys;
-(void)setPreapprovedKeys:(NSArray *)arg1 ;
-(void)setPeerID:(NSString *)arg1 ;
@end


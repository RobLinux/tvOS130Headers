/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:33 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/coreduetd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Foundation/NSXPCListener.h>
#import <coreduetd/NSXPCListenerDelegate.h>
#import <coreduetd/_DKDaemonInterface.h>

@protocol OS_dispatch_queue, _DKSyncCoordinator;
@class NSObject, _DKDataProtectionStateMonitor, _DKRateLimitPolicyEnforcer, _DKPrivacyPolicyEnforcer, _DKKnowledgeStorage, NSString;

@interface CDKnowledgeDaemon : NSXPCListener <NSXPCListenerDelegate, _DKDaemonInterface> {

	NSObject*<OS_dispatch_queue> _responseQueue;
	_DKDataProtectionStateMonitor* _dataProtection;
	_DKRateLimitPolicyEnforcer* _rateLimitEnforcer;
	_DKPrivacyPolicyEnforcer* _privacyEnforcer;
	_DKKnowledgeStorage* _storage;
	id<_DKSyncCoordinator> _syncCoordinator;

}

@property (nonatomic,retain) id<_DKSyncCoordinator> syncCoordinator;              //@synthesize syncCoordinator=_syncCoordinator - In the implementation block
@property (nonatomic,readonly) _DKKnowledgeStorage * storage;                     //@synthesize storage=_storage - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)defaultDaemon;
+(id)defaultUserDaemon;
-(id)init;
-(_DKKnowledgeStorage *)storage;
-(void)handleError:(id)arg1 ;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(id)initWithMachServiceName:(id)arg1 ;
-(void)synchronizeWithUrgency:(unsigned long long)arg1 client:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)deleteRemoteState:(/*^block*/id)arg1 ;
-(void)saveObjects:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)deleteObjects:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)executeQuery:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)deleteAllEventsInEventStreamNamed:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)deleteAllEventsMatchingPredicate:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)synchronizeWithReply:(/*^block*/id)arg1 ;
-(void)sourceDeviceIdentityWithReply:(/*^block*/id)arg1 ;
-(void)deviceUUIDWithReply:(/*^block*/id)arg1 ;
-(void)confirmDatabaseConnectionWithReply:(/*^block*/id)arg1 ;
-(BOOL)isClassCLocked;
-(id<_DKSyncCoordinator>)syncCoordinator;
-(void)setSyncCoordinator:(id<_DKSyncCoordinator>)arg1 ;
-(void)maintainPrivacy;
-(void)logSizeOfStorage:(id)arg1 ;
-(id)initWithMachServiceName:(id)arg1 storePath:(id)arg2 ;
-(void)registerAirPlayTasks;
-(id)classCError;
-(void)reportEventStatistics;
-(id)confirmDatabaseConnectionError;
@end


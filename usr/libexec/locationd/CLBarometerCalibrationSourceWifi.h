/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:47 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/locationd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <locationd/locationd-Structs.h>
#import <locationd/CLBarometerCalibrationSource.h>

@protocol CLWifiServiceProtocol;
@interface CLBarometerCalibrationSourceWifi : CLBarometerCalibrationSource {

	id<CLWifiServiceProtocol> _wifiServiceProxy;
	unique_ptr<CLWifiService_Type::Client, std::__1::default_delete<CLWifiService_Type::Client> >* _wifiServiceClient;
	CLBarometerCalibrationWiFiActiveScanBuffer* activeScanBuffer;
	double lastSubmissionToSourceAggregator;

}
-(void)dealloc;
-(void)onWifiServiceNotification:(int)arg1 data:(NotificationData*)arg2 ;
-(id)initWithUniverse:(id)arg1 delegate:(id)arg2 ;
-(void)enableSource;
-(void)disableSource;
-(void)processActiveScan:(const vector<CLWifiService_Type::AccessPoint, std::__1::allocator<CLWifiService_Type::AccessPoint> >*)arg1 ;
-(void)processScanCache:(const vector<CLWifiService_Type::AccessPoint, std::__1::allocator<CLWifiService_Type::AccessPoint> >*)arg1 ;
-(shared_ptr<CLBarometerCalibration_Types::CLBarometerCalibrationWifiData>*)convertAPToWifiData:(AccessPoint)arg1 ;
-(void)writeWifiAPToJson:(id)arg1 withData:(const vector<CLWifiService_Type::AccessPoint, std::__1::allocator<CLWifiService_Type::AccessPoint> >*)arg2 ;
@end


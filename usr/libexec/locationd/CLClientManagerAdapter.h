/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:44 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/locationd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <locationd/locationd-Structs.h>
#import <CoreMotion/CLNotifierServiceAdapter.h>
#import <locationd/CLClientManagerProtocol.h>

@class NSString;

@interface CLClientManagerAdapter : CLNotifierServiceAdapter <CLClientManagerProtocol>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) BOOL valid; 
+(void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2 ;
+(id)getSilo;
+(void)performSyncOnSilo:(id)arg1 invoker:(/*^block*/id)arg2 ;
-(id)init;
-(void)setClient:(/*^block*/id)arg1 ;
-(void)performMigration;
-(void)beginService;
-(void)endService;
-(void)doAsync:(/*^block*/id)arg1 ;
-(void)doAsync:(/*^block*/id)arg1 withReply:(/*^block*/id)arg2 ;
-(BOOL)syncgetDoSync:(/*^block*/id)arg1 ;
-(CLClientManager*)adaptee;
-(void)setClients:(id)arg1 significantLocationVisitTo:(BOOL)arg2 ;
-(void)takeInUseAssertionForClientKey:(id)arg1 reason:(id)arg2 assertionLevel:(int)arg3 withReply:(/*^block*/id)arg4 ;
-(void)wakeUpLaunchdManagedClient:(id)arg1 ;
-(void)setClientBackgroundIndicator:(/*^block*/id)arg1 enabled:(BOOL)arg2 entity:(id)arg3 ;
-(id)syncgetLocationClientKeys;
-(id)syncgetNonSystemLocationClientKeys;
-(id)syncgetNonSystemLocationClientKey;
-(BOOL)syncgetIsMapsANonSystemLocationClient;
-(void)setClientAuthorization:(/*^block*/id)arg1 status:(int)arg2 correctiveCompensation:(int)arg3 entity:(id)arg4 ;
-(void)appLaunchedByAppLifecycleManager:(id)arg1 ;
-(void)checkAppInstallationStatus;
-(void)appsWithClientKeysAreInstalledOnAPairedDevice:(id)arg1 ;
-(void)setAllowableAuthorizationMask:(unsigned long long)arg1 forClientKey:(id)arg2 ;
-(void)handleProvisionalIntermediationForService:(unsigned long long)arg1 forClientKey:(id)arg2 withReply:(/*^block*/id)arg3 ;
-(BOOL)syncgetSetLocationServicesEnabledStatically:(BOOL)arg1 withEventSource:(id)arg2 ;
-(BOOL)syncgetHasAuthorizedClients;
-(void)markClientTemporaryAuthorizationGranted:(BOOL)arg1 forClientKey:(id)arg2 ;
-(void)markClientEmergencyEnablementTransition:(BOOL)arg1 forBeneficiary:(id)arg2 ;
-(void)reduceAccuracy:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(int)syncgetClientStaticRegistrationResult:(/*^block*/id)arg1 ;
-(int)syncgetClientEffectiveRegistrationResult:(/*^block*/id)arg1 ;
-(void)setClients:(id)arg1 regionOfType:(int)arg2 to:(BOOL)arg3 ;
-(void)setClients:(id)arg1 significantLocationChangeTo:(BOOL)arg2 ;
-(void)setLastLocationSettingsEventSource:(id)arg1 ;
-(void)resetClients;
-(void)markReceivingLocationInformation:(/*^block*/id)arg1 ;
-(void)setPurpose:(id)arg1 forClient:(/*^block*/id)arg2 ;
-(id)syncgetCopyClients;
-(int)syncgetRegistrationResultToAuthorizationStatus:(int)arg1 ;
-(id)syncgetApplyArchivedAuthorizationDecisionsAndDie:(id)arg1 unlessTokenMatches:(id)arg2 ;
-(id)syncgetArchivedAuthorizationDecisions;
-(void)checkWeakPersistentClientWithIdentifier:(/*^block*/id)arg1 ;
-(void)triggerPruneAndRotateLocationConsumptionScoreArchiveAndUpdateTheStateAccordingly;
-(void)deliverAndReleaseNotification:(CFUserNotificationRef)arg1 withFlags:(unsigned long long)arg2 callbackState:(CLCMNotificationStateRecord*)arg3 ;
-(void)onCapabilityChange;
-(void)markClientEmergencyEnablementTransition:(BOOL)arg1 ;
@end


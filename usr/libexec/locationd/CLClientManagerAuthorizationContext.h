/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:47 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/locationd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <locationd/locationd-Structs.h>
@interface CLClientManagerAuthorizationContext : NSObject {

	int _registrationResult;
	int _inUseLevel;
	unsigned long long _staticServiceMask;
	unsigned long long _effectiveServiceMask;
	unsigned long long _provisionalServiceMask;

}

@property (nonatomic,readonly) unsigned long long staticServiceMask;                   //@synthesize staticServiceMask=_staticServiceMask - In the implementation block
@property (nonatomic,readonly) unsigned long long effectiveServiceMask;                //@synthesize effectiveServiceMask=_effectiveServiceMask - In the implementation block
@property (nonatomic,readonly) unsigned long long provisionalServiceMask;              //@synthesize provisionalServiceMask=_provisionalServiceMask - In the implementation block
@property (nonatomic,readonly) int registrationResult;                                 //@synthesize registrationResult=_registrationResult - In the implementation block
@property (nonatomic,readonly) int inUseLevel;                                         //@synthesize inUseLevel=_inUseLevel - In the implementation block
-(BOOL)isEqual:(id)arg1 ;
-(id)description;
-(id)initWithInUseLevel:(int)arg1 registrationResult:(int)arg2 serviceMaskTuple:(CLClientServiceTypeMaskTuple)arg3 ;
-(int)registrationResult;
-(int)inUseLevel;
-(BOOL)isAuthorizedForServiceType:(unsigned long long)arg1 ;
-(BOOL)isNonProvisionallyAuthorizedForServiceType:(unsigned long long)arg1 ;
-(BOOL)isNonProvisionallyAuthorizedForServiceTypeMask:(unsigned long long)arg1 ;
-(BOOL)isAuthorizedForServiceTypeMask:(unsigned long long)arg1 ;
-(BOOL)inUseLevelIsAtLeast:(int)arg1 ;
-(unsigned long long)effectiveServiceMask;
-(unsigned long long)provisionalServiceMask;
-(unsigned long long)staticServiceMask;
-(BOOL)isStaticallyAuthorizedForServiceTypeMask:(unsigned long long)arg1 ;
-(BOOL)isStaticallyAuthorizedForServiceType:(unsigned long long)arg1 ;
@end


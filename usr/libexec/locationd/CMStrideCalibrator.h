/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:44 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/locationd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <locationd/locationd-Structs.h>
#import <locationd/CMStrideCalibrationDatabaseDelegate.h>
#import <locationd/CMStrideCalLocationFSMDelegate.h>

@protocol CLClientAuthorizationCacheProtocol, CLStreamingAwareLocationProviderProtocol, CLIntersiloUniverse;
@class CLTimer, CMStrideCalibrationActivityBuffer, CMStrideCalibrationElevationBuffer, CMStrideCalibrationStepCountBuffer, CMStrideCalibrationStats, CMStrideCalibrationDatabase, CMStrideCalLocationFSM, NSMutableArray, NSString;

@interface CMStrideCalibrator : NSObject <CMStrideCalibrationDatabaseDelegate, CMStrideCalLocationFSMDelegate> {

	unique_ptr<CLOdometerNotifier_Type::Client, std::__1::default_delete<CLOdometerNotifier_Type::Client> >* fOdometerClient;
	CLServiceLocationProvider* fServiceLocationProvider;
	unique_ptr<CLServiceLocationProvider_Type::Client, std::__1::default_delete<CLServiceLocationProvider_Type::Client> >* fServiceLocationClient;
	id<CLClientAuthorizationCacheProtocol> fClientAuthorizationCache;
	unique_ptr<CLStreamingAwareLocationProvider_Type::Client, std::__1::default_delete<CLStreamingAwareLocationProvider_Type::Client> >* fStreamingAwareLocationClient;
	id<CLStreamingAwareLocationProviderProtocol> fStreamingAwareProxy;
	unique_ptr<CLStepCountNotifier_Type::Client, std::__1::default_delete<CLStepCountNotifier_Type::Client> >* fStepCountClient;
	unique_ptr<CLMotionState_Type::Client, std::__1::default_delete<CLMotionState_Type::Client> >* fMotionStateClient;
	unique_ptr<CLCompanionNotifier_Type::Client, std::__1::default_delete<CLCompanionNotifier_Type::Client> >* fCompanionClient;
	unique_ptr<CLMotionStateMediator_Type::Client, std::__1::default_delete<CLMotionStateMediator_Type::Client> >* fMotionStateMediatorClient;
	id<CLIntersiloUniverse> fUniverse;
	CLTimer* fStopOpportunisticCalibrationTimer;
	CMStrideCalibrationActivityBuffer* fActivityBuffer;
	CMStrideCalibrationElevationBuffer* fElevationBuffer;
	CMStrideCalibrationStepCountBuffer* fStepsBuffer;
	CMStrideCalibrationStats* fStats;
	CMStrideCalibrationDatabase* fDatabase;
	CMStrideCalLocationFSM* fStrideCalLocationFSM;
	NSMutableArray* fLatestCalDataArray;
	shared_ptr<CLStepCountRecorderDb>* fStepCountDb;
	double fLastGoodLocFix;
	long long fCurrentSession;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(void)setSession:(long long)arg1 ;
-(void)stopElevationUpdates;
-(long long)currentSession;
-(void)stopLocationUpdates;
-(void)startLocationUpdates;
-(void)onMotionStateNotification:(const int*)arg1 data:(const NotificationData*)arg2 ;
-(void)quitForcedLocationState;
-(void)setupCLNotifiers;
-(void)teardownCLNotifiers;
-(BOOL)inOutdoorPedestrianSession;
-(void)checkForLocationStateTransition;
-(BOOL)isCalibrationConvergedMedianForSpeed:(double)arg1 ;
-(void)updateCalibrationBins:(double)arg1 ;
-(BOOL)outOfSession;
-(void)attemptForcedLocation;
-(void)startLeechingLocation;
-(void)startGpsOdometerSpectatorUpdates;
-(void)startElevationSpectatorUpdates;
-(void)stopLeechingLocation;
-(void)stopGpsOdometerSpectatorUpdates;
-(void)stopElevationSpectatorUpdates;
-(void)startGpsOdometerUpdates;
-(void)startElevationUpdates;
-(void)stopGpsOdometerUpdates;
-(void)addLatestCalData:(id)arg1 ;
-(void)tickleArrow;
-(BOOL)checkValidTrack:(id)arg1 associatedEntry:(const CLStepDistance*)arg2 ;
-(void)updateUserHeight:(long long)arg1 ;
-(id)copyHistory;
-(void)strideCalibrationDatabase:(id)arg1 didInsertEntry:(SCD_Struct_CM67)arg2 ;
-(void)fsm:(id)arg1 didTransitionFromState:(int)arg2 toState:(int)arg3 ;
-(void)fsm:(id)arg1 didYieldTrack:(id)arg2 ;
-(void)fsm:(id)arg1 didUpdateLocationAtTime:(double)arg2 ;
-(void)fsm:(id)arg1 didUpdateSource:(int)arg2 ;
-(id)initInUniverse:(id)arg1 stepCountDb:(shared_ptr<CLStepCountRecorderDb>*)arg2 ;
-(void)tick:(double)arg1 ;
-(void)authorizeLocationInReplay;
-(void)checkLocationAuthorization;
-(void)onStepCountNotification:(const int*)arg1 data:(const NotificationData*)arg2 ;
-(void)onOdometerNotification:(const int*)arg1 data:(const NotificationData*)arg2 ;
-(void)onLocationNotification:(const int*)arg1 data:(const NotificationData*)arg2 ;
-(BOOL)isAuthorizedForLocation;
-(void)onMotionStateMediatorNotification:(const int*)arg1 data:(const NotificationData*)arg2 ;
@end


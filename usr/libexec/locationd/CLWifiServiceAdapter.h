/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:43 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/locationd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <locationd/locationd-Structs.h>
#import <CoreMotion/CLNotifierServiceAdapter.h>
#import <locationd/CLWifiServiceProtocol.h>

@class NSString;

@interface CLWifiServiceAdapter : CLNotifierServiceAdapter <CLWifiServiceProtocol>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) BOOL valid; 
+(void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2 ;
+(id)getSilo;
+(void)performSyncOnSilo:(id)arg1 invoker:(/*^block*/id)arg2 ;
-(id)init;
-(void)beginService;
-(void)endService;
-(void)doAsync:(/*^block*/id)arg1 ;
-(void)doAsync:(/*^block*/id)arg1 withReply:(/*^block*/id)arg2 ;
-(BOOL)syncgetDoSync:(/*^block*/id)arg1 ;
-(CLWifiService*)adaptee;
-(void)fetchIsAssociatedWithReply:(/*^block*/id)arg1 ;
-(BOOL)syncgetIsAssociated;
-(void)fetchIsWifiAvailableWithReply:(/*^block*/id)arg1 ;
-(BOOL)syncgetIsWifiTrackingAvailable;
-(BOOL)syncgetIsWifiPowered;
-(BOOL)syncgetIsAvailable;
-(BOOL)syncgetIsSimulationEnabled;
-(void)programEntryScanNetworks:(/*^block*/id)arg1 andExitScanNetworks:(/*^block*/id)arg2 ;
-(void)setEntryScanNetworks:(/*^block*/id)arg1 andExitScanNetworks:(/*^block*/id)arg2 ;
-(void)setScannerEntryScanNetworks:(/*^block*/id)arg1 ;
-(void)setScannerExitScanNetworks:(/*^block*/id)arg1 ;
-(/*^block*/id)syncgetScanStats;
-(/*^block*/id)syncgetScanResult;
-(/*^block*/id)syncgetBackgroundScanCacheResult;
-(void)fetchScanResultWithReply:(/*^block*/id)arg1 ;
-(BOOL)syncgetAssociatedNetwork:(AccessPoint*)arg1 ;
-(BOOL)syncgetHostedNetwork:(HostedNetwork*)arg1 ;
-(void)clearExitAndEntryScanNetworks:(BOOL)arg1 ;
-(BOOL)syncgetStartScanWithType:(char)arg1 lowPriority:(BOOL)arg2 passive:(BOOL)arg3 ;
-(BOOL)syncgetStartScanWithParameters:(/*^block*/id)arg1 ;
-(BOOL)syncgetStartRangingWithPeers:(const vector<CLRangingPeerInternal, std::__1::allocator<CLRangingPeerInternal> >*)arg1 andTimeout:(double)arg2 ;
-(BOOL)syncgetSetAllowBeingRanged:(const vector<CLRangingPeerInternal, std::__1::allocator<CLRangingPeerInternal> >*)arg1 enable:(BOOL)arg2 ;
-(void)setWifiPower:(BOOL)arg1 ;
-(void)setBackgroundExitScanCount:(int)arg1 ;
-(BOOL)syncgetSetAutoJoin:(BOOL)arg1 ;
-(void)startScanWithType:(char)arg1 lowPriority:(BOOL)arg2 passive:(BOOL)arg3 ;
-(void)setQuiesceWifi:(BOOL)arg1 ;
-(BOOL)syncgetSupportedChannelsAdd2GhzChannels:(BOOL)arg1 andAdd5GhzChannels:(BOOL)arg2 result:(vector<int, std::__1::allocator<int> >*)arg3 ;
-(BOOL)syncgetIsWifiPoweredWithStatus:(BOOL*)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:36 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/dmd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Catalyst/CATOperation.h>

@protocol DMDDeviceStateProvider, DMDTaskOperationProvider, OS_os_transaction;
@class NSObject, DMDConfigurationDatabase, NSManagedObjectID, NSString, DMDPayloadContext, NSMutableArray, NSMutableDictionary;

@interface DMDPayloadActionOperation : CATOperation {

	BOOL _requiresNetworkTether;
	BOOL _requiresUnlockedKeychain;
	NSObject*<DMDDeviceStateProvider> _deviceStateProvider;
	id<DMDTaskOperationProvider> _taskOperationProvider;
	DMDConfigurationDatabase* _database;
	NSManagedObjectID* _payloadMetadataObjectID;
	NSString* _payloadIdentifier;
	DMDPayloadContext* _payloadContext;
	NSMutableArray* _subOperations;
	NSMutableDictionary* _stateDictionary;
	NSObject*<OS_os_transaction> _transaction;

}

@property (nonatomic,retain) DMDPayloadContext * payloadContext;                                 //@synthesize payloadContext=_payloadContext - In the implementation block
@property (nonatomic,retain) NSMutableArray * subOperations;                                     //@synthesize subOperations=_subOperations - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * stateDictionary;                              //@synthesize stateDictionary=_stateDictionary - In the implementation block
@property (nonatomic,retain) NSObject*<OS_os_transaction> transaction;                           //@synthesize transaction=_transaction - In the implementation block
@property (assign,nonatomic) BOOL requiresNetworkTether;                                         //@synthesize requiresNetworkTether=_requiresNetworkTether - In the implementation block
@property (assign,nonatomic) BOOL requiresUnlockedKeychain;                                      //@synthesize requiresUnlockedKeychain=_requiresUnlockedKeychain - In the implementation block
@property (nonatomic,retain) NSObject*<DMDDeviceStateProvider> deviceStateProvider;              //@synthesize deviceStateProvider=_deviceStateProvider - In the implementation block
@property (nonatomic,retain) id<DMDTaskOperationProvider> taskOperationProvider;                 //@synthesize taskOperationProvider=_taskOperationProvider - In the implementation block
@property (nonatomic,readonly) DMDConfigurationDatabase * database;                              //@synthesize database=_database - In the implementation block
@property (nonatomic,copy,readonly) NSManagedObjectID * payloadMetadataObjectID;                 //@synthesize payloadMetadataObjectID=_payloadMetadataObjectID - In the implementation block
@property (nonatomic,copy,readonly) NSString * payloadIdentifier;                                //@synthesize payloadIdentifier=_payloadIdentifier - In the implementation block
+(id)sharedDeclarationOperationQueue;
-(id)init;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(BOOL)isReady;
-(BOOL)isAsynchronous;
-(DMDConfigurationDatabase *)database;
-(NSObject*<OS_os_transaction>)transaction;
-(void)enqueueOperation:(id)arg1 ;
-(void)setTransaction:(NSObject*<OS_os_transaction>)arg1 ;
-(void)operationWillStart;
-(NSMutableArray *)subOperations;
-(void)setSubOperations:(NSMutableArray *)arg1 ;
-(NSMutableDictionary *)stateDictionary;
-(NSString *)payloadIdentifier;
-(void)setPayloadContext:(DMDPayloadContext *)arg1 ;
-(DMDPayloadContext *)payloadContext;
-(void)setStateDictionary:(NSMutableDictionary *)arg1 ;
-(NSManagedObjectID *)payloadMetadataObjectID;
-(void)endOperationMarkingPayloadMetadata:(id)arg1 failedWithError:(id)arg2 ;
-(void)addStatusEntriesFromDictionary:(id)arg1 ;
-(id<DMDTaskOperationProvider>)taskOperationProvider;
-(void)performBackgroundContextBlock:(/*^block*/id)arg1 ;
-(void)endOperationWithPayloadMetadata:(id)arg1 ;
-(void)setDeviceStateProvider:(NSObject*<DMDDeviceStateProvider>)arg1 ;
-(NSObject*<DMDDeviceStateProvider>)deviceStateProvider;
-(void)setTaskOperationProvider:(id<DMDTaskOperationProvider>)arg1 ;
-(id)initWithDatabase:(id)arg1 payloadMetadataObjectID:(id)arg2 payloadIdentifier:(id)arg3 ;
-(BOOL)requiresNetworkTether;
-(void)setRequiresNetworkTether:(BOOL)arg1 ;
-(BOOL)requiresUnlockedKeychain;
-(void)setRequiresUnlockedKeychain:(BOOL)arg1 ;
@end


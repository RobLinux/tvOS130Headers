/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:40 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/gamed
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <gamed/GKGameService.h>
#import <gamed/GKGameServicePrivate.h>

@protocol GKGameServicePrivate <GKGameService>
@required
-(oneway void)getGameMetadataForBundleIDs:(id)arg1 handler:(/*^block*/id)arg2;
-(oneway void)getTopGamesWithHandler:(/*^block*/id)arg1;
-(oneway void)loadTellAFriendMessageForGameWithAdamID:(id)arg1 handler:(/*^block*/id)arg2;
-(oneway void)getRatingForGameDescriptor:(id)arg1 handler:(/*^block*/id)arg2;
-(oneway void)submitRating:(float)arg1 forGame:(id)arg2 handler:(/*^block*/id)arg3;
-(oneway void)getGameStatsForPlayer:(id)arg1 bundleIDs:(id)arg2 handler:(/*^block*/id)arg3;
-(oneway void)getGamesForPlayer:(id)arg1 includeInstalled:(BOOL)arg2 handler:(/*^block*/id)arg3;
-(oneway void)getGamesWithAchievementStatsForPlayer:(id)arg1 handler:(/*^block*/id)arg2;
-(oneway void)getStoreItemsForAdamIDs:(id)arg1 handler:(/*^block*/id)arg2;
-(oneway void)removeGameForBundleID:(id)arg1 handler:(/*^block*/id)arg2;

@end


@class NSString;

@interface GKGameServicePrivate : GKGameService <GKGameServicePrivate>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(unsigned long long)requiredEntitlements;
+(Class)interfaceClass;
-(oneway void)getGameMetadataForBundleIDs:(id)arg1 handler:(/*^block*/id)arg2 ;
-(oneway void)getTopGamesWithHandler:(/*^block*/id)arg1 ;
-(oneway void)loadTellAFriendMessageForGameWithAdamID:(id)arg1 handler:(/*^block*/id)arg2 ;
-(oneway void)getRatingForGameDescriptor:(id)arg1 handler:(/*^block*/id)arg2 ;
-(oneway void)submitRating:(float)arg1 forGame:(id)arg2 handler:(/*^block*/id)arg3 ;
-(oneway void)getGameStatsForPlayer:(id)arg1 bundleIDs:(id)arg2 handler:(/*^block*/id)arg3 ;
-(oneway void)getGamesForPlayer:(id)arg1 includeInstalled:(BOOL)arg2 handler:(/*^block*/id)arg3 ;
-(oneway void)getGamesWithAchievementStatsForPlayer:(id)arg1 handler:(/*^block*/id)arg2 ;
-(oneway void)getStoreItemsForAdamIDs:(id)arg1 handler:(/*^block*/id)arg2 ;
-(oneway void)removeGameForBundleID:(id)arg1 handler:(/*^block*/id)arg2 ;
-(BOOL)requiresAuthenticationForSelector:(SEL)arg1 ;
-(void)loadStorePiecesForGames:(id)arg1 context:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)loadTopGamesWithContext:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)fetchTopGamesInContext:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)loadGameMetadataForBundleIDs:(id)arg1 context:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)fetchGameStatsForPlayer:(id)arg1 bundleIdentifiers:(id)arg2 responseKind:(int)arg3 context:(id)arg4 handler:(/*^block*/id)arg5 ;
-(void)scanInstalledGamesForPlayer:(id)arg1 transaction:(id)arg2 ;
-(void)loadGamesForPlayer:(id)arg1 context:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)fetchGamesForPlayer:(id)arg1 includeInstalled:(BOOL)arg2 responseKind:(int)arg3 context:(id)arg4 handler:(/*^block*/id)arg5 ;
-(void)loadGameStatsForPlayer:(id)arg1 bundleIdentifiers:(id)arg2 context:(id)arg3 handler:(/*^block*/id)arg4 ;
-(void)fetchGameMetadataForBundleIDs:(id)arg1 responseKind:(int)arg2 context:(id)arg3 handler:(/*^block*/id)arg4 ;
-(void)loadRatingForGameDescriptor:(id)arg1 context:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)fetchRatingForGameDescriptor:(id)arg1 context:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)loadGamesWithAchievementStatsForPlayer:(id)arg1 context:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)fetchGamesWithAchievementStatsForPlayer:(id)arg1 context:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)fetchGameRecommendationsInContext:(id)arg1 responseKind:(int)arg2 handler:(/*^block*/id)arg3 ;
@end


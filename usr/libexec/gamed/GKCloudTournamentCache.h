/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:38 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/gamed
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class CKRecordID, NSObject, NSMutableDictionary, NSDate;

@interface GKCloudTournamentCache : NSObject {

	BOOL _haveSubscription;
	CKRecordID* _userRecordID;
	NSObject*<OS_dispatch_queue> _cacheQueue;
	NSObject*<OS_dispatch_queue> _userRecordQueue;
	NSMutableDictionary* _tokensByZoneID;
	NSMutableDictionary* _tournamentDefinitionsByRecordID;
	NSMutableDictionary* _tournamentsByRecordID;
	NSMutableDictionary* _tournamentRecordIDByParticipantRecordID;
	NSMutableDictionary* _tournamentParticipantsGroupedByTournamentID;
	NSMutableDictionary* _inviteURLByTournamentRecordID;
	NSMutableDictionary* _contactInviteByRecordID;
	NSDate* _expiration;

}

@property (nonatomic,retain) CKRecordID * userRecordID;                                                      //@synthesize userRecordID=_userRecordID - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> cacheQueue;                                        //@synthesize cacheQueue=_cacheQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> userRecordQueue;                                   //@synthesize userRecordQueue=_userRecordQueue - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * tokensByZoneID;                                           //@synthesize tokensByZoneID=_tokensByZoneID - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * tournamentDefinitionsByRecordID;                          //@synthesize tournamentDefinitionsByRecordID=_tournamentDefinitionsByRecordID - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * tournamentsByRecordID;                                    //@synthesize tournamentsByRecordID=_tournamentsByRecordID - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * tournamentRecordIDByParticipantRecordID;                  //@synthesize tournamentRecordIDByParticipantRecordID=_tournamentRecordIDByParticipantRecordID - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * tournamentParticipantsGroupedByTournamentID;              //@synthesize tournamentParticipantsGroupedByTournamentID=_tournamentParticipantsGroupedByTournamentID - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * inviteURLByTournamentRecordID;                            //@synthesize inviteURLByTournamentRecordID=_inviteURLByTournamentRecordID - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * contactInviteByRecordID;                                  //@synthesize contactInviteByRecordID=_contactInviteByRecordID - In the implementation block
@property (nonatomic,retain) NSDate * expiration;                                                            //@synthesize expiration=_expiration - In the implementation block
@property (assign,getter=isValid,nonatomic) BOOL valid; 
@property (assign,nonatomic) BOOL haveSubscription;                                                          //@synthesize haveSubscription=_haveSubscription - In the implementation block
-(id)init;
-(BOOL)isValid;
-(void)setValid:(BOOL)arg1 ;
-(CKRecordID *)userRecordID;
-(void)setUserRecordID:(CKRecordID *)arg1 ;
-(NSDate *)expiration;
-(id)cacheURL;
-(NSObject*<OS_dispatch_queue>)cacheQueue;
-(void)setExpiration:(NSDate *)arg1 ;
-(void)setCacheQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)clearWithHandler:(/*^block*/id)arg1 ;
-(void)updateUserRecordWithHandler:(/*^block*/id)arg1 ;
-(id)tournamentDefinitionInternalWithID:(id)arg1 ;
-(id)tournamentInternalWithID:(id)arg1 ;
-(id)tournamentDefinitionRecordsWithBundleID:(id)arg1 ;
-(id)tournamentInternalsMatchingPredicate:(id)arg1 ;
-(id)tournamentRecordWithID:(id)arg1 ;
-(id)localPlayerParticipantPlayerInternalForTournamentWithID:(id)arg1 ;
-(id)localPlayerParticipantRecordForTournamentWithID:(id)arg1 ;
-(BOOL)tournamentWithID:(id)arg1 containsRecordForParticipantWithID:(id)arg2 ;
-(id)contactInviteDataRecordWithID:(id)arg1 ;
-(id)participantsRecordsForTournamentWithID:(id)arg1 ;
-(id)tournamentDefinitionRecordWithID:(id)arg1 ;
-(void)updateWithChangedTournamentDefinitionRecords:(id)arg1 removedTournamentDefinitionRecordIDs:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)updateWithChangedTournamentRecords:(id)arg1 removedTournamentRecordIDs:(id)arg2 changedParticipantRecords:(id)arg3 removedParticipantRecordIDs:(id)arg4 handler:(/*^block*/id)arg5 ;
-(void)updateWithChangedContactInviteRecords:(id)arg1 removedContactRecordIDs:(id)arg2 handler:(/*^block*/id)arg3 ;
-(id)participantRecordsSortedByScoreForTournamentWithID:(id)arg1 ;
-(void)clearPublicTournamentDataForUpdateWithHandler:(/*^block*/id)arg1 ;
-(id)tokenForZoneID:(id)arg1 ;
-(void)updateWithChangedTokens:(id)arg1 removedTokensWithZoneIDs:(id)arg2 handler:(/*^block*/id)arg3 ;
-(BOOL)haveSubscription;
-(void)setHaveSubscription:(BOOL)arg1 ;
-(id)allTournamentRecordsForTournamentDefinitionWithID:(id)arg1 ofType:(long long)arg2 ;
-(id)inviteURLForCustomTournamentWithID:(id)arg1 ;
-(void)updateForCustomTournament:(id)arg1 inviteURL:(id)arg2 ;
-(id)allParticipantsRecordsForTournamentWithID:(id)arg1 ;
-(void)setUserRecordQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setTokensByZoneID:(NSMutableDictionary *)arg1 ;
-(void)setTournamentDefinitionsByRecordID:(NSMutableDictionary *)arg1 ;
-(void)setTournamentsByRecordID:(NSMutableDictionary *)arg1 ;
-(void)setTournamentRecordIDByParticipantRecordID:(NSMutableDictionary *)arg1 ;
-(void)setTournamentParticipantsGroupedByTournamentID:(NSMutableDictionary *)arg1 ;
-(void)setInviteURLByTournamentRecordID:(NSMutableDictionary *)arg1 ;
-(void)setContactInviteByRecordID:(NSMutableDictionary *)arg1 ;
-(NSObject*<OS_dispatch_queue>)userRecordQueue;
-(NSMutableDictionary *)tournamentsByRecordID;
-(NSMutableDictionary *)tournamentParticipantsGroupedByTournamentID;
-(NSMutableDictionary *)tournamentRecordIDByParticipantRecordID;
-(NSMutableDictionary *)tournamentDefinitionsByRecordID;
-(NSMutableDictionary *)contactInviteByRecordID;
-(NSMutableDictionary *)inviteURLByTournamentRecordID;
-(id)createTournamentDefinitionInternalWithIdentifierWithoutDispatch:(id)arg1 ;
-(id)localParticipantInternalNoDispatchForTournamentWithID:(id)arg1 ;
-(id)tournamentInternalFromRecordNoDispatch:(id)arg1 ;
-(id)tournamentInternalsFromTournamentRecords:(id)arg1 ;
-(NSMutableDictionary *)tokensByZoneID;
@end


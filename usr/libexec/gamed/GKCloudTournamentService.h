/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:38 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/gamed
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <gamed/GKService.h>
#import <gamed/GKTournamentService.h>

@class NSString;

@interface GKCloudTournamentService : GKService <GKTournamentService>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(unsigned long long)requiredEntitlements;
+(Class)interfaceClass;
-(oneway void)loadTournamentDefinitionsWithCompletionHandler:(/*^block*/id)arg1 ;
-(oneway void)loadTournamentDefinitionWithID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(oneway void)loadTournamentsWithPredicate:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(oneway void)loadHistoricalDataForPlayer:(id)arg1 tournamentDefinition:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(oneway void)getAcceptedCustomTournamentWithCompletionHandler:(/*^block*/id)arg1 ;
-(oneway void)reportScore:(long long)arg1 withTryToken:(id)arg2 forTournament:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(oneway void)reportProgressScore:(long long)arg1 withTryToken:(id)arg2 forTournament:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(oneway void)registerPlayerInTournament:(id)arg1 playerGroup:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(oneway void)resignFromTournament:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(oneway void)beginPlayInTournament:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(oneway void)resumePlayInTournament:(id)arg1 withTryToken:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(oneway void)getTotalPlayerCountInTournament:(id)arg1 forGroup:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(oneway void)getFriendCountInTournament:(id)arg1 forGroup:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(oneway void)getLocalParticipantForTournament:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(oneway void)loadParticipantsForTournament:(id)arg1 request:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(oneway void)getTournamentStateForTournament:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(oneway void)addInvitees:(id)arg1 forTournament:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(oneway void)removeInvitees:(id)arg1 forTournament:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(oneway void)addCreator:(id)arg1 forTournament:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(oneway void)removeCreator:(id)arg1 forTournament:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(oneway void)acceptInvitationForTournament:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(oneway void)declineInvitationForTournament:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(oneway void)getShareURLForCustomTournament:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(oneway void)createCustomTournamentWithRequest:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)tournamentForID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
@end


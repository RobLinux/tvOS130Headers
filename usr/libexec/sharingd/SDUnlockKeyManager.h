/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:57 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <sharingd/SDUnlockSessionManager.h>
#import <sharingd/SDUnlockIDSControllerDelegate.h>

@protocol OS_dispatch_source;
@class NSTimer, NSDate, NSObject, SDUnlockSessionRecord, NSString;

@interface SDUnlockKeyManager : SDUnlockSessionManager <SDUnlockIDSControllerDelegate> {

	BOOL _useEscrowRecord;
	BOOL _remoteDeviceLocked;
	BOOL _ltkWaitingForUnlock;
	BOOL _outstandingStartLTK;
	BOOL _unlockingForKeybagUnlock;
	long long _unlockingState;
	NSTimer* _stashTimer;
	NSDate* _deviceSwitchUnlockRetryDate;
	NSObject*<OS_dispatch_source> _stateTimer;
	NSObject*<OS_dispatch_source> _longTermKeyTimer;
	SDUnlockSessionRecord* _sessionRecord;
	/*^block*/id _stashHandler;
	/*^block*/id _stateHandler;
	id _keybagAssertion;

}

@property (assign) BOOL useEscrowRecord;                                        //@synthesize useEscrowRecord=_useEscrowRecord - In the implementation block
@property (retain) NSTimer * stashTimer;                                        //@synthesize stashTimer=_stashTimer - In the implementation block
@property (assign) BOOL remoteDeviceLocked;                                     //@synthesize remoteDeviceLocked=_remoteDeviceLocked - In the implementation block
@property (assign) BOOL ltkWaitingForUnlock;                                    //@synthesize ltkWaitingForUnlock=_ltkWaitingForUnlock - In the implementation block
@property (assign) BOOL outstandingStartLTK;                                    //@synthesize outstandingStartLTK=_outstandingStartLTK - In the implementation block
@property (assign) BOOL unlockingForKeybagUnlock;                               //@synthesize unlockingForKeybagUnlock=_unlockingForKeybagUnlock - In the implementation block
@property (retain) NSDate * deviceSwitchUnlockRetryDate;                        //@synthesize deviceSwitchUnlockRetryDate=_deviceSwitchUnlockRetryDate - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> stateTimer;                    //@synthesize stateTimer=_stateTimer - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> longTermKeyTimer;              //@synthesize longTermKeyTimer=_longTermKeyTimer - In the implementation block
@property (retain) SDUnlockSessionRecord * sessionRecord;                       //@synthesize sessionRecord=_sessionRecord - In the implementation block
@property (assign) long long unlockingState;                                    //@synthesize unlockingState=_unlockingState - In the implementation block
@property (copy) id stashHandler;                                               //@synthesize stashHandler=_stashHandler - In the implementation block
@property (copy) id stateHandler;                                               //@synthesize stateHandler=_stateHandler - In the implementation block
@property (retain) id keybagAssertion;                                          //@synthesize keybagAssertion=_keybagAssertion - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedKeyManager;
-(id)init;
-(void)resetState;
-(id)stringForState:(long long)arg1 ;
-(BOOL)unlockEnabled;
-(void)establishStashBagWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)establishStashBagWithManifest:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)unlockStateForDevice:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)addObservers;
-(void)debugInfoRequested:(id)arg1 ;
-(id)generateDebugInfo;
-(void)disableUnlockPairing;
-(void)invalidateLongTermKeyTimer;
-(void)resetSetupState;
-(void)resetAndClearState;
-(void)idsController:(id)arg1 didReceiveProtoData:(id)arg2 forType:(unsigned short)arg3 ;
-(void)idsControllerNearbyStateChanged:(id)arg1 ;
-(void)keyBagLockStateChange:(id)arg1 ;
-(void)devicesDidUnpair:(id)arg1 ;
-(NSObject*<OS_dispatch_source>)longTermKeyTimer;
-(void)setLongTermKeyTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)handleCreateEscrowSecret:(id)arg1 ;
-(void)handleSessionKeyExchangeResponse:(id)arg1 ;
-(void)handleUnlockConfirmation:(id)arg1 ;
-(void)devicesDidFailToPair:(id)arg1 ;
-(void)takeMobileKeybagAssertion;
-(id)keybagAssertion;
-(void)setKeybagAssertion:(id)arg1 ;
-(void)checkDevicePairingState;
-(void)handleConfigState;
-(void)handleUILockStateChange;
-(void)newDeviceBecameActive:(id)arg1 ;
-(void)deviceDidEnterConfigurationState:(id)arg1 ;
-(BOOL)remoteDeviceLocked;
-(long long)unlockingState;
-(void)startLTKExchange;
-(void)sendStartLTKTransfer;
-(BOOL)startUnlockIfNeeded;
-(void)initiateRemoteUnlock;
-(void)disableUnlockPairingForSecurityManager:(id)arg1 ;
-(void)releaseKeyBagAssertion;
-(void)handleActiveDeviceUpdated;
-(void)setRemoteDeviceLocked:(BOOL)arg1 ;
-(void)sendStateRequest;
-(void)notifyUnlockStateWithState:(id)arg1 error:(id)arg2 ;
-(void)invalidateStateTimer;
-(void)stashTimerFired:(id)arg1 ;
-(void)notifyStashStateWithError:(id)arg1 ;
-(BOOL)initiateStashBagCreationWithManifest:(id)arg1 ;
-(void)invalidateStashTimer;
-(void)setUnlockingState:(long long)arg1 ;
-(void)handleRemoteLockStateChanged:(id)arg1 ;
-(void)handleLongTermKeyRequest:(id)arg1 ;
-(void)handleClassALongTermKeyRequest:(id)arg1 ;
-(void)handleSetupRequest:(id)arg1 ;
-(void)handleStashKeyExchangeResponse:(id)arg1 ;
-(void)handleStashConfirmation:(id)arg1 ;
-(void)handleUnlockStateResponse:(id)arg1 ;
-(void)handleResetState:(id)arg1 ;
-(BOOL)updateLongTermKey:(id)arg1 ;
-(void)sendLongTermKeyResponse:(id)arg1 requestID:(id)arg2 ;
-(void)sendClassALongTermKeyResponse:(id)arg1 sessionID:(unsigned)arg2 errorCode:(unsigned)arg3 ;
-(void)handleEscrowSessionRequest:(unsigned)arg1 withUpdatedLongTermKey:(BOOL)arg2 ;
-(void)sendSetupSessionCreatedWithLocalKey:(id)arg1 stepData:(id)arg2 sessionID:(unsigned)arg3 errorCode:(long long)arg4 ;
-(void)sendSetupCreateEscrowRecordWithSessionID:(unsigned)arg1 stepData:(id)arg2 errorCode:(long long)arg3 ;
-(void)sendSessionAuthenticationToken:(id)arg1 sessionID:(unsigned)arg2 ;
-(void)sendStashToken:(id)arg1 sessionID:(unsigned)arg2 ;
-(void)syncUnlockEnabled:(BOOL)arg1 ;
-(void)restartLongTermKeyTimer:(unsigned long long)arg1 ;
-(void)restartStashTimer;
-(void)restartStateTimer;
-(void)sendSessionKeyExchangeRequest:(id)arg1 usedEscrow:(BOOL)arg2 sessionID:(unsigned)arg3 ;
-(void)sendStashKeyRequest:(id)arg1 sessionID:(unsigned)arg2 ;
-(BOOL)useEscrowRecord;
-(void)setUseEscrowRecord:(BOOL)arg1 ;
-(NSTimer *)stashTimer;
-(void)setStashTimer:(NSTimer *)arg1 ;
-(BOOL)ltkWaitingForUnlock;
-(void)setLtkWaitingForUnlock:(BOOL)arg1 ;
-(BOOL)outstandingStartLTK;
-(void)setOutstandingStartLTK:(BOOL)arg1 ;
-(BOOL)unlockingForKeybagUnlock;
-(void)setUnlockingForKeybagUnlock:(BOOL)arg1 ;
-(NSDate *)deviceSwitchUnlockRetryDate;
-(void)setDeviceSwitchUnlockRetryDate:(NSDate *)arg1 ;
-(NSObject*<OS_dispatch_source>)stateTimer;
-(void)setStateTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(SDUnlockSessionRecord *)sessionRecord;
-(void)setSessionRecord:(SDUnlockSessionRecord *)arg1 ;
-(id)stashHandler;
-(void)setStashHandler:(id)arg1 ;
-(id)stateHandler;
-(void)setStateHandler:(id)arg1 ;
@end


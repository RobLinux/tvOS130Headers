/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:57 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/sharingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <sharingd/NSXPCListenerDelegate.h>
#import <sharingd/NSXPCConnectionDelegate.h>
#import <sharingd/SDXPCDaemonProtocol.h>

@protocol OS_dispatch_queue;
@class NSXPCListener, NSSet, NSObject, NSXPCConnection, NSString, NSXPCInterface;

@interface SDXPCDaemon : NSObject <NSXPCListenerDelegate, NSXPCConnectionDelegate, SDXPCDaemonProtocol> {

	NSXPCListener* _xpcListener;
	BOOL _activateCalled;
	BOOL _invalidateCalled;
	BOOL _invalidateDone;
	NSSet* _activeConnections;
	NSObject*<OS_dispatch_queue> _dispatchQueue;

}

@property (nonatomic,copy) NSSet * activeConnections;                                 //@synthesize activeConnections=_activeConnections - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> dispatchQueue;              //@synthesize dispatchQueue=_dispatchQueue - In the implementation block
@property (nonatomic,copy,readonly) NSXPCConnection * currentConnection; 
@property (nonatomic,readonly) NSString * machServiceName; 
@property (nonatomic,readonly) NSXPCInterface * exportedInterface; 
@property (nonatomic,readonly) NSXPCInterface * remoteObjectInterface; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(void)dealloc;
-(void)_activate;
-(void)_invalidate;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(NSXPCInterface *)exportedInterface;
-(NSXPCConnection *)currentConnection;
-(void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(BOOL)arg3 ;
-(NSXPCInterface *)remoteObjectInterface;
-(NSSet *)activeConnections;
-(NSObject*<OS_dispatch_queue>)dispatchQueue;
-(NSString *)machServiceName;
-(void)setDispatchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)establishConnectionWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)onqueue_activate;
-(void)onqueue_invalidate;
-(void)connectionInvalidated:(id)arg1 ;
-(void)setActiveConnections:(NSSet *)arg1 ;
-(BOOL)shouldAcceptNewConnection:(id)arg1 ;
-(void)connectionEstablished:(id)arg1 ;
-(void)remoteObjectProxyForConnection:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)enumerateRemoteObjectProxiesUsingBlock:(/*^block*/id)arg1 ;
-(void)onqueue_enumerateRemoteObjectProxiesUsingBlock:(/*^block*/id)arg1 ;
-(void)onqueue_remoteObjectProxyForConnection:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)onqueue_connectionInvalidated:(id)arg1 ;
@end


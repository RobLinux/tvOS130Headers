/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 3:11:49 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /usr/libexec/rtcreportingd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <rtcreportingd/ReportingSessionConnectivityInterface.h>
#import <rtcreportingd/NSURLSessionDelegate.h>
#import <rtcreportingd/NSURLSessionTaskDelegate.h>
#import <rtcreportingd/NSURLSessionDataDelegate.h>
#import <rtcreportingd/NSURLSessionStreamDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSURLSession, NSMutableDictionary, NSDictionary, NSObject, NSOperationQueue, NSString;

@interface ReportingSessionConnectivityHelper : NSObject <ReportingSessionConnectivityInterface, NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionStreamDelegate> {

	NSURLSession* _privateURLSession;
	id _reportingdSessionDelegate;
	NSMutableDictionary* _tasks;
	NSDictionary* _userInfo;
	int _mode;
	NSObject*<OS_dispatch_queue> _stateQueue;
	NSOperationQueue* _NSURLDelegateQueue;
	BOOL _isActive;
	NSMutableDictionary* _requestInProgress;
	unsigned _usageCount;
	unsigned _totalSessionsServedCount;
	unsigned _releaseTimeout;
	NSObject*<OS_dispatch_source> _connectivityHelperReleaseTimer;
	/*^block*/id _connectivityHelperReleaseTimerBlock;
	NSObject*<OS_dispatch_queue> _connectivityHelperReleaseTimerQueue;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(int)GETRequestMode;
+(void)cleanupStorageRootFolder;
+(id)composeUniqueContainerURL;
+(BOOL)deleteContainerAtURL:(id)arg1 ;
+(int)POSTRequestMode;
+(id)storageRootFolder;
-(void)dealloc;
-(void)invalidate;
-(void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 ;
-(void)activate:(unsigned)arg1 ;
-(id)initWithDelegate:(id)arg1 mode:(int)arg2 userInfo:(id)arg3 ;
-(void)getURLRequestWithCompletionHandler:(id)arg1 isUrgent:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)notifyAllPendingBlocksForURL:(id)arg1 requestData:(id)arg2 response:(id)arg3 error:(id)arg4 ;
-(void)stopConnectivityHelperReleaseTimer;
-(void)releaseAllXPCTransactions;
-(id)privateURLSessionConfigWithMode:(int)arg1 ;
-(void)startConnectivityHelperReleaseTimerWithBlock:(/*^block*/id)arg1 queue:(id)arg2 ;
-(void)createHelperForTask:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)postURLRequestWithCompletionHandler:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setReleaseTimeout:(unsigned)arg1 ;
-(void)incrementTotalSessionsServedCount;
-(void)ownerIncrementUsageCount;
-(void)ownerDecrementUsageCountWithBlock:(/*^block*/id)arg1 queue:(id)arg2 ;
@end


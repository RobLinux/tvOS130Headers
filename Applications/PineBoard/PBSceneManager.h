/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 1:54:31 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/PineBoard.app/PineBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PineBoard/FBProcessManagerObserver.h>
#import <PineBoard/FBSceneManagerDelegate.h>
#import <PineBoard/FBSceneDelegate.h>
#import <PineBoard/FBWorkspaceDelegate.h>
#import <UIKit/UIScenePresentationBinderDelegate.h>
#import <PineBoard/PBSDisplayStateObserver.h>

@protocol BSInvalidatable;
@class FBScene, PBScenePresenter, UIApplicationSceneDeactivationManager, FBSceneManager, NSHashTable, NSMutableSet, UIRootWindowScenePresentationBinder, TVSConcurrentTransactionManager, NSMutableArray, BKSMutableHIDEventDeferringTarget, FBSSceneIdentity, NSString;

@interface PBSceneManager : NSObject <FBProcessManagerObserver, FBSceneManagerDelegate, FBSceneDelegate, FBWorkspaceDelegate, UIScenePresentationBinderDelegate, PBSDisplayStateObserver> {

	FBScene* _focusedScene;
	PBScenePresenter* _scenePresenter;
	UIApplicationSceneDeactivationManager* _sceneDeactivationManager;
	FBSceneManager* _fbSceneManager;
	NSHashTable* _observers;
	NSMutableSet* _pendingSnapshots;
	UIRootWindowScenePresentationBinder* _rootWindowScenePresentationBinder;
	TVSConcurrentTransactionManager* _updateSceneTransactionManager;
	NSMutableArray* _deferralTargetAssertions;
	BKSMutableHIDEventDeferringTarget* _lastDeferringTarget;
	id<BSInvalidatable> _focusDeferral;

}

@property (nonatomic,readonly) FBSceneManager * fbSceneManager;                                                      //@synthesize fbSceneManager=_fbSceneManager - In the implementation block
@property (nonatomic,readonly) NSHashTable * observers;                                                              //@synthesize observers=_observers - In the implementation block
@property (nonatomic,readonly) NSMutableSet * pendingSnapshots;                                                      //@synthesize pendingSnapshots=_pendingSnapshots - In the implementation block
@property (nonatomic,readonly) UIRootWindowScenePresentationBinder * rootWindowScenePresentationBinder;              //@synthesize rootWindowScenePresentationBinder=_rootWindowScenePresentationBinder - In the implementation block
@property (nonatomic,readonly) TVSConcurrentTransactionManager * updateSceneTransactionManager;                      //@synthesize updateSceneTransactionManager=_updateSceneTransactionManager - In the implementation block
@property (nonatomic,readonly) NSMutableArray * deferralTargetAssertions;                                            //@synthesize deferralTargetAssertions=_deferralTargetAssertions - In the implementation block
@property (nonatomic,readonly) BKSMutableHIDEventDeferringTarget * lastDeferringTarget;                              //@synthesize lastDeferringTarget=_lastDeferringTarget - In the implementation block
@property (nonatomic,readonly) id<BSInvalidatable> focusDeferral;                                                    //@synthesize focusDeferral=_focusDeferral - In the implementation block
@property (nonatomic,readonly) FBScene * focusedScene;                                                               //@synthesize focusedScene=_focusedScene - In the implementation block
@property (nonatomic,readonly) FBScene * focusedExternalApplicationScene; 
@property (nonatomic,readonly) PBScenePresenter * scenePresenter;                                                    //@synthesize scenePresenter=_scenePresenter - In the implementation block
@property (nonatomic,readonly) UIApplicationSceneDeactivationManager * sceneDeactivationManager;                     //@synthesize sceneDeactivationManager=_sceneDeactivationManager - In the implementation block
@property (nonatomic,readonly) FBSSceneIdentity * defaultKioskSceneIdentity; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(id)init;
-(void)dealloc;
-(void)removeObserver:(id)arg1 ;
-(void)addObserver:(id)arg1 ;
-(void)scene:(id)arg1 didReceiveActions:(id)arg2 ;
-(NSHashTable *)observers;
-(void)displayState:(id)arg1 didChangeWithConnection:(long long)arg2 ;
-(void)sceneManager:(id)arg1 didCreateScene:(id)arg2 ;
-(void)sceneManager:(id)arg1 willDestroyScene:(id)arg2 ;
-(void)sceneManager:(id)arg1 didDestroyScene:(id)arg2 ;
-(void)scene:(id)arg1 didPrepareUpdateWithContext:(id)arg2 ;
-(void)scene:(id)arg1 didCompleteUpdateWithContext:(id)arg2 error:(id)arg3 ;
-(void)scene:(id)arg1 didUpdateClientSettingsWithDiff:(id)arg2 oldClientSettings:(id)arg3 transitionContext:(id)arg4 ;
-(void)workspace:(id)arg1 didReceiveSceneRequestWithOptions:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)sceneManager:(id)arg1 createDefaultTransitionContextForScene:(id)arg2 ;
-(void)processManager:(id)arg1 didAddProcess:(id)arg2 ;
-(void)processManager:(id)arg1 didRemoveProcess:(id)arg2 ;
-(BOOL)scenePresentationBinderShouldPresentSceneOnlyWhenLayersExist:(id)arg1 ;
-(id)defaultSceneIdentityForApplicationWithBundleID:(id)arg1 ;
-(UIApplicationSceneDeactivationManager *)sceneDeactivationManager;
-(FBSSceneIdentity *)defaultKioskSceneIdentity;
-(FBScene *)focusedScene;
-(FBScene *)focusedExternalApplicationScene;
-(void)removeSceneDeferralTargetAssertion:(id)arg1 ;
-(void)addSceneDeferralTargetAssertion:(id)arg1 ;
-(PBScenePresenter *)scenePresenter;
-(void)_updateFocusDeferralsIfNeeded;
-(BOOL)_eventsCanBeDeferredToScene:(id)arg1 ;
-(BOOL)_shouldAutoHostScene:(id)arg1 ;
-(BOOL)_shouldTrackSceneForDeactivation:(id)arg1 ;
-(void)_notifyObserversDefaultKioskScene:(id)arg1 didUpdateAppGridHidden:(BOOL)arg2 ;
-(void)foregroundSceneWithIdentity:(id)arg1 completion:(/*^block*/id)arg2 ;
-(FBSceneManager *)fbSceneManager;
-(NSMutableSet *)pendingSnapshots;
-(UIRootWindowScenePresentationBinder *)rootWindowScenePresentationBinder;
-(TVSConcurrentTransactionManager *)updateSceneTransactionManager;
-(NSMutableArray *)deferralTargetAssertions;
-(BKSMutableHIDEventDeferringTarget *)lastDeferringTarget;
-(id<BSInvalidatable>)focusDeferral;
@end


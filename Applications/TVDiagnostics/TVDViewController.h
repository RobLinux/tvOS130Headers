/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 12:58:56 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/TVDiagnostics.app/TVDiagnostics
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKitCore/UIViewController.h>
#import <TVDiagnostics/TVDMainViewDelegate.h>
#import <TVDiagnostics/DKViewControllerDelegate.h>
#import <TVDiagnostics/DADeviceWithUIDelegate.h>

@protocol DADevice, OS_dispatch_queue;
@class TVDAppDelegate, TVDMainView, _UIContentUnavailableView, NSMutableArray, NSMutableSet, DASessionSettings, NSObject, UIVisualEffectView, NSString;

@interface TVDViewController : UIViewController <TVDMainViewDelegate, DKViewControllerDelegate, DADeviceWithUIDelegate> {

	BOOL _termsAndConditionsStarted;
	id<DADevice> _device;
	TVDAppDelegate* _appDelegate;
	TVDMainView* _mainView;
	_UIContentUnavailableView* _noFreeSpaceView;
	_UIContentUnavailableView* _failureView;
	_UIContentUnavailableView* _networkRequiredView;
	unsigned long long _currentViewControllerState;
	NSMutableArray* _history;
	NSMutableSet* _errorsShowing;
	DASessionSettings* _sessionSettings;
	NSObject*<OS_dispatch_queue> _stagingQueue;

}

@property (nonatomic,retain) id<DADevice> device;                                          //@synthesize device=_device - In the implementation block
@property (nonatomic,retain) TVDAppDelegate * appDelegate;                                 //@synthesize appDelegate=_appDelegate - In the implementation block
@property (nonatomic,retain) TVDMainView * mainView;                                       //@synthesize mainView=_mainView - In the implementation block
@property (nonatomic,retain) _UIContentUnavailableView * noFreeSpaceView;                  //@synthesize noFreeSpaceView=_noFreeSpaceView - In the implementation block
@property (nonatomic,retain) _UIContentUnavailableView * failureView;                      //@synthesize failureView=_failureView - In the implementation block
@property (nonatomic,retain) _UIContentUnavailableView * networkRequiredView;              //@synthesize networkRequiredView=_networkRequiredView - In the implementation block
@property (assign,nonatomic) unsigned long long currentViewControllerState;                //@synthesize currentViewControllerState=_currentViewControllerState - In the implementation block
@property (assign,nonatomic) BOOL termsAndConditionsStarted;                               //@synthesize termsAndConditionsStarted=_termsAndConditionsStarted - In the implementation block
@property (nonatomic,retain) NSMutableArray * history;                                     //@synthesize history=_history - In the implementation block
@property (nonatomic,retain) NSMutableSet * errorsShowing;                                 //@synthesize errorsShowing=_errorsShowing - In the implementation block
@property (nonatomic,retain) DASessionSettings * sessionSettings;                          //@synthesize sessionSettings=_sessionSettings - In the implementation block
@property (nonatomic,retain) UIVisualEffectView * view; 
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> stagingQueue;                    //@synthesize stagingQueue=_stagingQueue - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(id<DADevice>)device;
-(void)setDevice:(id<DADevice>)arg1 ;
-(NSMutableArray *)history;
-(void)openSettings;
-(void)viewDidLoad;
-(void)setHistory:(NSMutableArray *)arg1 ;
-(void)updateViewConstraints;
-(void)applicationDidResume;
-(void)_idle;
-(void)_inactive;
-(id)preferredFocusEnvironments;
-(void)_updateProgress:(id)arg1 ;
-(_UIContentUnavailableView *)failureView;
-(void)setFailureView:(_UIContentUnavailableView *)arg1 ;
-(TVDAppDelegate *)appDelegate;
-(void)setAppDelegate:(TVDAppDelegate *)arg1 ;
-(void)presentTermsAndConditions;
-(void)diagnosticManager:(id)arg1 presentViewController:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)diagnosticManager:(id)arg1 dismissViewController:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)_preferredFocusedItem;
-(TVDMainView *)mainView;
-(void)device:(id)arg1 shouldStartTestWithTestId:(id)arg2 fullscreen:(BOOL)arg3 response:(/*^block*/id)arg4 ;
-(void)mainViewDidReceiveCloseAction:(id)arg1 ;
-(void)mainViewDidReceiveDoneAction:(id)arg1 ;
-(void)mainViewDidReceiveHistoryAction:(id)arg1 ;
-(DASessionSettings *)sessionSettings;
-(void)setSessionSettings:(DASessionSettings *)arg1 ;
-(void)setupView;
-(void)hideEverything;
-(void)updateViewsIfSpaceAvailable;
-(_UIContentUnavailableView *)noFreeSpaceView;
-(_UIContentUnavailableView *)networkRequiredView;
-(void)presentSecondaryConsent;
-(void)didDisagreeToTerms;
-(void)_enqueueUIUpdateWithMinimumExecution:(double)arg1 block:(/*^block*/id)arg2 ;
-(void)didAgreeToTerms;
-(void)setCurrentViewControllerState:(unsigned long long)arg1 ;
-(void)updateWithInfo:(id)arg1 ;
-(BOOL)checkIfFreeSpaceAvailable;
-(void)hideOutOfSpace;
-(unsigned long long)currentViewControllerState;
-(void)checkForSession;
-(void)displayOutOfSpace;
-(unsigned long long)getFreeSystemSpaceThreshold;
-(unsigned long long)getFreeUserSpaceThreshold;
-(void)showDiagosticsErrorWithReason:(id)arg1 ;
-(void)_updatePhase:(long long)arg1 ;
-(void)_updateTestSuiteName:(id)arg1 description:(id)arg2 ;
-(void)_updateSessionSettings:(id)arg1 ;
-(void)_updateHistory:(id)arg1 ;
-(void)_updateErrors:(id)arg1 ;
-(NSMutableSet *)errorsShowing;
-(void)_showFailureWithMessage:(id)arg1 ;
-(void)_showNetworkRequired;
-(void)_hideFailure;
-(void)_hideNetworkRequired;
-(void)setMainView:(TVDMainView *)arg1 ;
-(void)setNoFreeSpaceView:(_UIContentUnavailableView *)arg1 ;
-(void)setNetworkRequiredView:(_UIContentUnavailableView *)arg1 ;
-(NSObject*<OS_dispatch_queue>)stagingQueue;
-(BOOL)termsAndConditionsStarted;
-(void)setTermsAndConditionsStarted:(BOOL)arg1 ;
-(void)setErrorsShowing:(NSMutableSet *)arg1 ;
-(void)setStagingQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end


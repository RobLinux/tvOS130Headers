/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 12:49:52 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/TVHomeSharing.app/TVHomeSharing
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TVHomeSharing/TVHomeSharing-Structs.h>
#import <UIKitCore/UIResponder.h>
#import <TVHomeSharing/_TVInterfaceCreatingPrivate.h>
#import <TVHomeSharing/PBSystemServiceNowPlayingDelegate.h>
#import <UIKit/UIApplicationDelegate.h>
#import <TVHomeSharing/TVApplicationControllerDelegate.h>

@protocol OS_dispatch_source;
@class UIWindow, TVApplicationController, TVPPlayer, NSDictionary, NSURL, NSObject, IKAppContext, NSString, NSMutableDictionary;

@interface TVHApplicationDelegate : UIResponder <_TVInterfaceCreatingPrivate, PBSystemServiceNowPlayingDelegate, UIApplicationDelegate, TVApplicationControllerDelegate> {

	BOOL _shouldTerminateOnEnterBackground;
	BOOL _headless;
	BOOL _didEnterBackground;
	UIWindow* _window;
	TVApplicationController* _applicationController;
	TVPPlayer* _player;
	long long _playlistRepeatMode;
	NSDictionary* _launchOptions;
	NSDictionary* _filteredLaunchOptions;
	NSURL* _deferredOpenURL;
	NSDictionary* _deferredOpenURLOptions;
	NSObject*<OS_dispatch_source> _tickleTimer;
	IKAppContext* _appContext;
	NSString* _javascriptPlaybackState;
	NSMutableDictionary* _javascriptCallbacksByNotificationName;

}

@property (nonatomic,retain) TVApplicationController * applicationController;                          //@synthesize applicationController=_applicationController - In the implementation block
@property (assign,nonatomic) long long playlistRepeatMode;                                             //@synthesize playlistRepeatMode=_playlistRepeatMode - In the implementation block
@property (nonatomic,retain) TVPPlayer * player;                                                       //@synthesize player=_player - In the implementation block
@property (nonatomic,copy) NSDictionary * launchOptions;                                               //@synthesize launchOptions=_launchOptions - In the implementation block
@property (nonatomic,copy) NSDictionary * filteredLaunchOptions;                                       //@synthesize filteredLaunchOptions=_filteredLaunchOptions - In the implementation block
@property (nonatomic,copy) NSURL * deferredOpenURL;                                                    //@synthesize deferredOpenURL=_deferredOpenURL - In the implementation block
@property (nonatomic,copy) NSDictionary * deferredOpenURLOptions;                                      //@synthesize deferredOpenURLOptions=_deferredOpenURLOptions - In the implementation block
@property (assign,nonatomic) BOOL shouldTerminateOnEnterBackground;                                    //@synthesize shouldTerminateOnEnterBackground=_shouldTerminateOnEnterBackground - In the implementation block
@property (assign,nonatomic) BOOL headless;                                                            //@synthesize headless=_headless - In the implementation block
@property (assign,nonatomic) BOOL didEnterBackground;                                                  //@synthesize didEnterBackground=_didEnterBackground - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> tickleTimer;                                //@synthesize tickleTimer=_tickleTimer - In the implementation block
@property (assign,nonatomic,__weak) IKAppContext * appContext;                                         //@synthesize appContext=_appContext - In the implementation block
@property (nonatomic,copy) NSString * javascriptPlaybackState;                                         //@synthesize javascriptPlaybackState=_javascriptPlaybackState - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * javascriptCallbacksByNotificationName;              //@synthesize javascriptCallbacksByNotificationName=_javascriptCallbacksByNotificationName - In the implementation block
@property (nonatomic,retain) UIWindow * window;                                                        //@synthesize window=_window - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)theAppDelegate;
+(long long)_playlistRepeatModeFromPreferences;
+(id)_mediaItemsFromJSMediaItems:(id)arg1 ;
+(void)_addMovie:(id)arg1 withContributors:(id)arg2 toDictionary:(id)arg3 ;
+(long long)_playlistRepeatModeForMediaRepeatMode:(long long)arg1 ;
-(id)init;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(TVPPlayer *)player;
-(void)setPlayer:(TVPPlayer *)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(UIWindow *)window;
-(void)applicationWillEnterForeground:(id)arg1 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(void)setLaunchOptions:(NSDictionary *)arg1 ;
-(NSDictionary *)launchOptions;
-(BOOL)headless;
-(void)setHeadless:(BOOL)arg1 ;
-(void)setWindow:(UIWindow *)arg1 ;
-(void)setAppContext:(IKAppContext *)arg1 ;
-(IKAppContext *)appContext;
-(BOOL)didEnterBackground;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)_configureAudioSession;
-(BOOL)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2 ;
-(BOOL)application:(id)arg1 openURL:(id)arg2 options:(id)arg3 ;
-(id)_bootURL;
-(void)setApplicationController:(TVApplicationController *)arg1 ;
-(TVApplicationController *)applicationController;
-(id)imageForResource:(id)arg1 ;
-(id)viewForElement:(id)arg1 existingView:(id)arg2 ;
-(id)viewControllerForElement:(id)arg1 existingViewController:(id)arg2 ;
-(Class)collectionViewCellClassForElement:(id)arg1 ;
-(id)_imageProxyForElement:(id)arg1 ;
-(void)appController:(id)arg1 didFinishLaunchingWithOptions:(id)arg2 ;
-(void)appController:(id)arg1 didFailWithError:(id)arg2 ;
-(void)appController:(id)arg1 didStopWithOptions:(id)arg2 ;
-(void)appController:(id)arg1 evaluateAppJavaScriptInContext:(id)arg2 ;
-(BOOL)shouldTerminateOnEnterBackground;
-(void)setShouldTerminateOnEnterBackground:(BOOL)arg1 ;
-(void)systemServicePresentNowPlayingUI;
-(void)setPlaylistRepeatMode:(long long)arg1 ;
-(long long)playlistRepeatMode;
-(void)setDeferredOpenURL:(NSURL *)arg1 ;
-(NSURL *)deferredOpenURL;
-(void)_handleNowPlayingViewWillAppearNotification:(id)arg1 ;
-(void)_handleNowPlayingViewDidDisappearNotification:(id)arg1 ;
-(void)replaceNowPlayingViewController:(id)arg1 withMediaCollectionDetailsForMediaItem:(id)arg2 collectionType:(unsigned long long)arg3 ;
-(void)_handlePlaybackStateDidChangeNotification:(id)arg1 ;
-(void)_handleMediaServerConnectionStateDidChangeNotification:(id)arg1 ;
-(void)_executeJavascriptAppMethod:(id)arg1 arguments:(id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)_isHeadlessLaunchURL:(id)arg1 ;
-(id)_filteredLaunchOptions:(id)arg1 ;
-(void)setFilteredLaunchOptions:(NSDictionary *)arg1 ;
-(void)_startHeadlessApplication;
-(void)_startApplication;
-(void)setDeferredOpenURLOptions:(NSDictionary *)arg1 ;
-(void)setDidEnterBackground:(BOOL)arg1 ;
-(void)_addMethodsToJavascriptAppObject:(id)arg1 ;
-(void)_addPropertiesToJavascriptAppObject:(id)arg1 ;
-(void)_handleFatalError:(id)arg1 ;
-(id)_mediaEntityImageProxyWithImageParamsString:(id)arg1 element:(id)arg2 ;
-(id)_contributorImageProxyWithImageParamsString:(id)arg1 ;
-(void)_stopTickleTimer;
-(void)_startTickleTimer;
-(void)setJavascriptPlaybackState:(NSString *)arg1 ;
-(NSMutableDictionary *)javascriptCallbacksByNotificationName;
-(void)_evaluateJSContextBlock:(/*^block*/id)arg1 ;
-(id)_javascriptLocalizedStringForKey:(id)arg1 comment:(id)arg2 ;
-(id)_javascriptLocalizedStringForFormatKey:(id)arg1 comment:(id)arg2 arguments:(id)arg3 ;
-(id)_javascriptDurationStringForSeconds:(id)arg1 ;
-(id)_javascriptPositionalDurationStringForSeconds:(id)arg1 ;
-(id)_javascriptRemainingTimeStringBetweenTargetDate:(id)arg1 andTestDate:(id)arg2 ;
-(double)_javascriptRemainingSecondsBetweenTargetDate:(id)arg1 andTestDate:(id)arg2 ;
-(void)_javascriptPlayMediaItems:(id)arg1 shuffle:(BOOL)arg2 playbackStartIndex:(unsigned long long)arg3 allowRepeat:(BOOL)arg4 ;
-(void)_javascriptPlayGeniusMixMediaItems:(id)arg1 fetchRequest:(id)arg2 mediaServer:(id)arg3 ;
-(void)_javascriptPlayMediaItemsNext:(id)arg1 ;
-(void)_javascriptAddMediaItemsToUpNext:(id)arg1 ;
-(void)_javascriptRegisterNotificationWithName:(id)arg1 callback:(id)arg2 ;
-(void)_javascriptUnregisterNotificationWithName:(id)arg1 callback:(id)arg2 ;
-(void)_javascriptSetScreensaverForMediaServer:(id)arg1 mediaCategoryType:(id)arg2 mediaCollection:(id)arg3 ;
-(id)_javascriptMediaEntitiesByGroupTitleFromGroups:(id)arg1 ;
-(id)_javascriptMoviesByContributorFromMovies:(id)arg1 ;
-(id)_javascriptParseDeepLinkURL:(id)arg1 ;
-(id)_javascriptNextPlaybackMediaItemForMediaItems:(id)arg1 ;
-(id)_javascriptPlainTextFromHTMLString:(id)arg1 ;
-(NSString *)javascriptPlaybackState;
-(void)setTickleTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)_sendTickle;
-(NSObject*<OS_dispatch_source>)tickleTimer;
-(NSDictionary *)filteredLaunchOptions;
-(void)_handleDidDisplayViewControllerNotification:(id)arg1 ;
-(void)_startApplicationController;
-(void)_startHomeSharingManagementWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)_applicationControllerContext;
-(NSDictionary *)deferredOpenURLOptions;
-(void)_presentFatalErrorDialogWithError:(id)arg1 ;
-(void)setJavascriptCallbacksByNotificationName:(NSMutableDictionary *)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 12:49:52 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/TVHomeSharing.app/TVHomeSharing
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol TVPPlayback;
@class TVHKMediaEntityServer, TVHKMediaEntityFetchRequest, TVHSAsynchronousWorkToken;

@interface TVHGeniusMixPlaybackMonitor : NSObject {

	id<TVPPlayback> _player;
	TVHKMediaEntityServer* _mediaEntityServer;
	TVHKMediaEntityFetchRequest* _fetchRequest;
	TVHSAsynchronousWorkToken* _fetchRequestWorkToken;
	unsigned long long _monitorToken;

}

@property (nonatomic,retain) id<TVPPlayback> player;                                         //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) TVHKMediaEntityServer * mediaEntityServer;                      //@synthesize mediaEntityServer=_mediaEntityServer - In the implementation block
@property (nonatomic,copy) TVHKMediaEntityFetchRequest * fetchRequest;                       //@synthesize fetchRequest=_fetchRequest - In the implementation block
@property (nonatomic,retain) TVHSAsynchronousWorkToken * fetchRequestWorkToken;              //@synthesize fetchRequestWorkToken=_fetchRequestWorkToken - In the implementation block
@property (assign,nonatomic) unsigned long long monitorToken;                                //@synthesize monitorToken=_monitorToken - In the implementation block
+(id)sharedInstance;
-(void)dealloc;
-(TVHKMediaEntityFetchRequest *)fetchRequest;
-(void)setFetchRequest:(TVHKMediaEntityFetchRequest *)arg1 ;
-(id<TVPPlayback>)player;
-(void)setPlayer:(id<TVPPlayback>)arg1 ;
-(void)_stop;
-(TVHKMediaEntityServer *)mediaEntityServer;
-(void)setMediaEntityServer:(TVHKMediaEntityServer *)arg1 ;
-(TVHSAsynchronousWorkToken *)fetchRequestWorkToken;
-(unsigned long long)monitorToken;
-(void)setFetchRequestWorkToken:(TVHSAsynchronousWorkToken *)arg1 ;
-(void)_handleFetchResponse:(id)arg1 player:(id)arg2 ;
-(void)_handleCurrentPlaybackMediaItemDidChangeNotification:(id)arg1 ;
-(void)_handlePlaybackStateDidChangeNotification:(id)arg1 ;
-(void)_stopObservingMediaServer:(id)arg1 ;
-(void)_startObservingMediaServer:(id)arg1 ;
-(void)_handleMediaServerConnectionStateDidChangeNotification:(id)arg1 ;
-(void)setMonitorToken:(unsigned long long)arg1 ;
-(void)startMonitoringPlaybackWithPlayer:(id)arg1 fetchRequest:(id)arg2 mediaEntityServer:(id)arg3 ;
@end


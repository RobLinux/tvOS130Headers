/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 1:50:22 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Podcasts/NSUserActivityDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_semaphore;
@class IMAVPlayer, MPCPlayerPath, MTCompositeManifest, MTUpNextManifest, MTPlayerManifest, NSString, NSUserActivity, NSObject, MTSetPlaybackQueueRequest, NSTimer, NSMutableSet, NSURL;

@interface MTPlayerController : NSObject <NSUserActivityDelegate> {

	BOOL _hasReportedThisEpisode;
	BOOL _shouldFindSomethingToPlay;
	BOOL _playerManifestRestored;
	IMAVPlayer* _player;
	MPCPlayerPath* _playerPath;
	MTCompositeManifest* _compositeManifest;
	MTUpNextManifest* _upNextManifest;
	MTPlayerManifest* _userManifest;
	double _currentTimse;
	/*^block*/id _platformSyncPlayheadChangeObserverBlock;
	NSString* _previousPlayingEpisodeUuid;
	double _lastPlaybackSaveTime;
	long long _metricsPlayStartTime;
	double _metricsPlayStartPosition;
	NSUserActivity* _currentActivity;
	NSObject*<OS_dispatch_queue> _restorationQueue;
	NSObject*<OS_dispatch_semaphore> _restorationSemaphore;
	MTSetPlaybackQueueRequest* _pendingSetPlaybackQueueRequest;
	NSTimer* _setPlaybackQueueRequestTimeoutTimer;
	NSMutableSet* _recordedPlayEventsForCurrentItem;
	NSURL* _lastRecordedItemURL;

}

@property (nonatomic,retain) NSString * previousPlayingEpisodeUuid;                                    //@synthesize previousPlayingEpisodeUuid=_previousPlayingEpisodeUuid - In the implementation block
@property (assign,nonatomic) BOOL hasReportedThisEpisode;                                              //@synthesize hasReportedThisEpisode=_hasReportedThisEpisode - In the implementation block
@property (assign,nonatomic) double lastPlaybackSaveTime;                                              //@synthesize lastPlaybackSaveTime=_lastPlaybackSaveTime - In the implementation block
@property (assign,nonatomic) long long metricsPlayStartTime;                                           //@synthesize metricsPlayStartTime=_metricsPlayStartTime - In the implementation block
@property (assign,nonatomic) double metricsPlayStartPosition;                                          //@synthesize metricsPlayStartPosition=_metricsPlayStartPosition - In the implementation block
@property (nonatomic,retain) IMAVPlayer * player;                                                      //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) MTCompositeManifest * compositeManifest;                                  //@synthesize compositeManifest=_compositeManifest - In the implementation block
@property (nonatomic,retain) MTUpNextManifest * upNextManifest;                                        //@synthesize upNextManifest=_upNextManifest - In the implementation block
@property (nonatomic,retain) MTPlayerManifest * userManifest;                                          //@synthesize userManifest=_userManifest - In the implementation block
@property (nonatomic,retain) NSUserActivity * currentActivity;                                         //@synthesize currentActivity=_currentActivity - In the implementation block
@property (assign,nonatomic) BOOL shouldFindSomethingToPlay;                                           //@synthesize shouldFindSomethingToPlay=_shouldFindSomethingToPlay - In the implementation block
@property (assign,getter=isPlayerManifestRestored,nonatomic) BOOL playerManifestRestored;              //@synthesize playerManifestRestored=_playerManifestRestored - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> restorationQueue;                            //@synthesize restorationQueue=_restorationQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_semaphore> restorationSemaphore;                    //@synthesize restorationSemaphore=_restorationSemaphore - In the implementation block
@property (nonatomic,retain) MTSetPlaybackQueueRequest * pendingSetPlaybackQueueRequest;               //@synthesize pendingSetPlaybackQueueRequest=_pendingSetPlaybackQueueRequest - In the implementation block
@property (nonatomic,retain) NSTimer * setPlaybackQueueRequestTimeoutTimer;                            //@synthesize setPlaybackQueueRequestTimeoutTimer=_setPlaybackQueueRequestTimeoutTimer - In the implementation block
@property (nonatomic,retain) NSMutableSet * recordedPlayEventsForCurrentItem;                          //@synthesize recordedPlayEventsForCurrentItem=_recordedPlayEventsForCurrentItem - In the implementation block
@property (nonatomic,retain) NSURL * lastRecordedItemURL;                                              //@synthesize lastRecordedItemURL=_lastRecordedItemURL - In the implementation block
@property (nonatomic,retain) MPCPlayerPath * playerPath;                                               //@synthesize playerPath=_playerPath - In the implementation block
@property (assign,nonatomic) double currentTimse;                                                      //@synthesize currentTimse=_currentTimse - In the implementation block
@property (nonatomic,copy) id platformSyncPlayheadChangeObserverBlock;                                 //@synthesize platformSyncPlayheadChangeObserverBlock=_platformSyncPlayheadChangeObserverBlock - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
+(void)setSharedInstance:(id)arg1 ;
-(id)copy;
-(id)init;
-(void)dealloc;
-(NSUserActivity *)currentActivity;
-(void)setCurrentActivity:(NSUserActivity *)arg1 ;
-(void)userActivityWillSave:(id)arg1 ;
-(void)userActivityWasContinued:(id)arg1 ;
-(void)userActivity:(id)arg1 didReceiveInputStream:(id)arg2 outputStream:(id)arg3 ;
-(id)currentItem;
-(MTPlayerManifest *)userManifest;
-(IMAVPlayer *)player;
-(void)setPlayer:(IMAVPlayer *)arg1 ;
-(double)currentTime;
-(void)setCurrentTime:(double)arg1 ;
-(void)setPlayerPath:(MPCPlayerPath *)arg1 ;
-(MPCPlayerPath *)playerPath;
-(void)setPlaybackQueue:(id)arg1 ;
-(BOOL)isSeekingOrScrubbing;
-(BOOL)isPlayingLocally;
-(void)playManifest:(id)arg1 reason:(unsigned long long)arg2 ;
-(BOOL)isPlayingEpisodeUuid:(id)arg1 ;
-(BOOL)isTargetPlaying;
-(MTCompositeManifest *)compositeManifest;
-(BOOL)playWithReason:(unsigned long long)arg1 ;
-(void)setCompositeManifest:(MTCompositeManifest *)arg1 ;
-(void)presentNowPlayingAnimated:(BOOL)arg1 ;
-(void)restorePlayerManifestWithCompletion:(/*^block*/id)arg1 ;
-(void)playManifest:(id)arg1 reason:(unsigned long long)arg2 interactive:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(id)playingEpisodeUuid;
-(void)pausePlayerTarget;
-(void)setPlayerRoute:(id)arg1 ;
-(void)resolveActivePlayerPathWithCompletion:(/*^block*/id)arg1 ;
-(void)setManifestAsDryRun:(id)arg1 reason:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)setManifest:(id)arg1 startPlayback:(BOOL)arg2 forceLocal:(BOOL)arg3 reason:(unsigned long long)arg4 interactive:(BOOL)arg5 completion:(/*^block*/id)arg6 ;
-(void)updateUPPEpisodeUuid:(id)arg1 bookmarkTime:(double)arg2 ;
-(void)dismissNowPlayingAnimated:(BOOL)arg1 ;
-(void)openExternalEpisode:(id)arg1 ;
-(MTUpNextManifest *)upNextManifest;
-(void)setManifest:(id)arg1 startPlayback:(BOOL)arg2 reason:(unsigned long long)arg3 interactive:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(void)clearPlayerManifestWithCompletion:(/*^block*/id)arg1 ;
-(BOOL)isPlayerTargetLocal;
-(void)currentItemDidChange;
-(void)playbackStateDidChange;
-(void)restoreFromUserActivity:(id)arg1 startPlayback:(BOOL)arg2 reason:(unsigned long long)arg3 interactive:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(void)_updateCurrentActivityForPlayState;
-(void)setRecordedPlayEventsForCurrentItem:(NSMutableSet *)arg1 ;
-(void)setLastPlaybackSaveTime:(double)arg1 ;
-(void)setUpNextManifest:(MTUpNextManifest *)arg1 ;
-(void)setupPlayerNotifications;
-(void)setRestorationSemaphore:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(void)setRestorationQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)tearDownPlayerNotifications;
-(void)_tryResolvingPendingSetPlaybackQueueRequest;
-(void)currentItemWillChange:(id)arg1 ;
-(void)playerBufferEmptyDidChange;
-(void)playerPeriodicUpdate;
-(void)playerErrorDidOccur:(id)arg1 ;
-(void)playerFailedToPlayToEndTime:(id)arg1 ;
-(void)playerHeadWillChange:(id)arg1 ;
-(void)playerFailure:(id)arg1 shouldShowDialog:(BOOL)arg2 ;
-(BOOL)updateEpisode:(id)arg1 andPlayerItem:(id)arg2 withElapsedTime:(double)arg3 andDuration:(double)arg4 onMediaItemWillChange:(BOOL)arg5 ;
-(void)recordMetricsForCurrentItem;
-(void)recordMTPlayerMetricsForCurrentItem;
-(BOOL)shouldFindSomethingToPlay;
-(void)setMetricsPlayStartTime:(long long)arg1 ;
-(void)setMetricsPlayStartPosition:(double)arg1 ;
-(void)setHasReportedThisEpisode:(BOOL)arg1 ;
-(BOOL)hasReportedThisEpisode;
-(NSString *)previousPlayingEpisodeUuid;
-(void)setPreviousPlayingEpisodeUuid:(NSString *)arg1 ;
-(double)lastPlaybackSaveTime;
-(void)_saveActivityForRestoration;
-(BOOL)playWithContext:(id)arg1 ;
-(void)_performAfterPlay:(id)arg1 playbackStarted:(BOOL)arg2 ;
-(BOOL)shouldPresentNowPlayingForItem:(id)arg1 presentationType:(unsigned long long)arg2 ;
-(void)pauseLocalPlayer;
-(void)_performMediaRemoteCommand:(unsigned)arg1 ;
-(void)playLocalPlayer;
-(void)dismissNowPlayingAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)setManifest:(id)arg1 startPlayback:(BOOL)arg2 context:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)setManifest:(id)arg1 startPlayback:(BOOL)arg2 forceLocal:(BOOL)arg3 context:(id)arg4 completion:(/*^block*/id)arg5 ;
-(long long)_validatePlaybackRequest:(id)arg1 ;
-(BOOL)_openExternalItemIfNeededForManifest:(id)arg1 ;
-(BOOL)_promptToClearUpNextIfNeededForRequest:(id)arg1 ;
-(void)_setPlaybackQueue:(id)arg1 ;
-(void)_showGenericPromptToClearUpNextWithRequest:(id)arg1 ;
-(void)_setLocalPlaybackQueue:(id)arg1 ;
-(void)setUserManifest:(MTPlayerManifest *)arg1 ;
-(void)playWithContext:(id)arg1 completion:(/*^block*/id)arg2 ;
-(MTSetPlaybackQueueRequest *)pendingSetPlaybackQueueRequest;
-(void)setPendingSetPlaybackQueueRequest:(MTSetPlaybackQueueRequest *)arg1 ;
-(id)_currentEpisodeForManifest:(id)arg1 ;
-(BOOL)_shouldOpenExternalItemForEpisode:(id)arg1 ;
-(id)_alertControllerForClearingOrKeepingUpNextWithRequest:(id)arg1 ;
-(void)setShouldFindSomethingToPlay:(BOOL)arg1 ;
-(void)_restoreManifestIfNeededWithCompletion:(/*^block*/id)arg1 useEmptyManifest:(BOOL)arg2 ;
-(NSObject*<OS_dispatch_queue>)restorationQueue;
-(void)_restorePlayerManifestWithCompletion:(/*^block*/id)arg1 ;
-(NSObject*<OS_dispatch_semaphore>)restorationSemaphore;
-(BOOL)isPlayerManifestRestored;
-(void)setPlayerManifestRestored:(BOOL)arg1 ;
-(id)_loadActivityForRestoration;
-(void)_restoreDefaultManifestIfNeededWithCompletion:(/*^block*/id)arg1 ;
-(void)restoreFromUserActivity:(id)arg1 withManifest:(id)arg2 startPlayback:(BOOL)arg3 reason:(unsigned long long)arg4 interactive:(BOOL)arg5 completion:(/*^block*/id)arg6 ;
-(void)_currentActivityResignCurrent;
-(void)_currentActivityBecomeCurrent;
-(id)_activityRestorationPath;
-(void*)_localPlayerPath;
-(void)_sendMediaRemoteCommand:(unsigned)arg1 toPlayer:(void*)arg2 ;
-(double)metricsPlayStartPosition;
-(long long)metricsPlayStartTime;
-(NSMutableSet *)recordedPlayEventsForCurrentItem;
-(NSURL *)lastRecordedItemURL;
-(void)setLastRecordedItemURL:(NSURL *)arg1 ;
-(void)recordMetricsEventForAccessLog:(id)arg1 playerItem:(id)arg2 episode:(id)arg3 ;
-(void)recordMetricsEventForErrorLog:(id)arg1 withEpisode:(id)arg2 ;
-(void)playItemAtIndex:(unsigned long long)arg1 ;
-(void)playPlayerTarget;
-(void)playManifest:(id)arg1 context:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setManifest:(id)arg1 context:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setManifest:(id)arg1 startPlayback:(BOOL)arg2 destination:(unsigned long long)arg3 context:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)setManifest:(id)arg1 reason:(unsigned long long)arg2 interactive:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)playManifest:(id)arg1 reason:(unsigned long long)arg2 interactive:(BOOL)arg3 presentationType:(unsigned long long)arg4 completion:(/*^block*/id)arg5 ;
-(void)_restoreEmptyManifestIfNeededWithCompletion:(/*^block*/id)arg1 ;
-(double)currentTimse;
-(void)setCurrentTimse:(double)arg1 ;
-(id)platformSyncPlayheadChangeObserverBlock;
-(void)setPlatformSyncPlayheadChangeObserverBlock:(id)arg1 ;
-(NSTimer *)setPlaybackQueueRequestTimeoutTimer;
-(void)setSetPlaybackQueueRequestTimeoutTimer:(NSTimer *)arg1 ;
@end


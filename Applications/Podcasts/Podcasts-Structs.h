/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 1:50:23 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct _MRSystemAppPlaybackQueue* MRSystemAppPlaybackQueueRef;

typedef struct _NSZone* NSZoneRef;

typedef struct UIEdgeInsets {
	double top;
	double left;
	double bottom;
	double right;
} UIEdgeInsets;

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct {
	long long field1;
	int field2;
	unsigned field3;
	long long field4;
} SCD_Struct_MT6;

typedef struct {
	double snapshotTime;
	double startTime;
	double endTime;
	double duration;
	double elapsedDuration;
	float rate;
	float defaultRate;
	BOOL isLiveContent;
	BOOL isLoading;
} SCD_Struct_MT7;

typedef struct {
	long long field1;
	long long field2;
} SCD_Struct_MT8;

typedef struct __CFArray* CFArrayRef;

typedef struct CGPath* CGPathRef;

typedef struct __SCNetworkReachability* SCNetworkReachabilityRef;

typedef struct __CTServerConnection* CTServerConnectionRef;

typedef struct __CFString* CFStringRef;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct {
	CGRect field1;
	CGRect field2;
} SCD_Struct_MT15;

typedef struct {
	long long value;
	int timescale;
	unsigned flags;
	long long epoch;
} SCD_Struct_IM16;

typedef struct {
	SCD_Struct_IM16 start;
	SCD_Struct_IM16 duration;
} SCD_Struct_IM17;

typedef struct objc_method* objc_methodRef;

typedef struct {
	double ascender;
	BOOL isAscenderInitialized;
	double bodyLeading;
	BOOL isBodyLeadingInitialized;
	double capHeight;
	BOOL isCapHeightInitialized;
	double descender;
	BOOL isDescenderInitialized;
	double lineHeight;
	BOOL isLineHeightInitialized;
} SCD_Struct_MT19;

typedef struct _compressed_pair<MTMPU::LayoutInterpolator::EntriesContainer *, std::__1::allocator<MTMPU::LayoutInterpolator::EntriesContainer> > {
	EntriesContainer __value_;
} compressed_pair<MTMPU::LayoutInterpolator::EntriesContainer *, std::__1::allocator<MTMPU::LayoutInterpolator::EntriesContainer> >;

typedef struct vector<MTMPU::LayoutInterpolator::EntriesContainer, std::__1::allocator<MTMPU::LayoutInterpolator::EntriesContainer> > {
	EntriesContainer __begin_;
	EntriesContainer __end_;
	compressed_pair<MTMPU::LayoutInterpolator::EntriesContainer *, std::__1::allocator<MTMPU::LayoutInterpolator::EntriesContainer> > __end_cap_;
} vector<MTMPU::LayoutInterpolator::EntriesContainer, std::__1::allocator<MTMPU::LayoutInterpolator::EntriesContainer> >;

typedef struct {
	unsigned field1 : 1;
	unsigned field2 : 1;
	unsigned field3 : 1;
	unsigned field4 : 1;
	unsigned field5 : 1;
	unsigned field6 : 1;
	unsigned field7 : 1;
	unsigned field8 : 1;
	unsigned field9 : 1;
	unsigned field10 : 1;
	unsigned field11 : 1;
	unsigned field12 : 1;
} SCD_Struct_IM22;

typedef struct CGImageSource* CGImageSourceRef;


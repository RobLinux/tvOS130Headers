/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 1:50:18 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSError, NSString, MZTaskAssertion, NSMutableArray, NSObject;

@interface MZAsynchronousTask : NSObject {

	BOOL _taskInvalidationDisabled;
	int _cancelType;
	/*^block*/id _expirationHandler;
	/*^block*/id _finishedHandler;
	id _result;
	NSError* _error;
	NSString* _taskDebugDescription;
	MZTaskAssertion* _taskAssertion;
	NSMutableArray* _completions;
	NSObject*<OS_dispatch_queue> _handlerQueue;
	NSObject*<OS_dispatch_queue> _queue;
	double _taskTimeout;
	NSObject*<OS_dispatch_source> _taskTimeoutTimer;
	double _assertionTimeout;
	NSObject*<OS_dispatch_source> _assertionTimeoutTimer;

}

@property (nonatomic,copy) NSString * taskDebugDescription;                                    //@synthesize taskDebugDescription=_taskDebugDescription - In the implementation block
@property (nonatomic,retain) id result;                                                        //@synthesize result=_result - In the implementation block
@property (nonatomic,retain) NSError * error;                                                  //@synthesize error=_error - In the implementation block
@property (nonatomic,retain) MZTaskAssertion * taskAssertion;                                  //@synthesize taskAssertion=_taskAssertion - In the implementation block
@property (nonatomic,retain) NSMutableArray * completions;                                     //@synthesize completions=_completions - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> handlerQueue;                        //@synthesize handlerQueue=_handlerQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                               //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic) BOOL taskInvalidationDisabled;                                    //@synthesize taskInvalidationDisabled=_taskInvalidationDisabled - In the implementation block
@property (assign,nonatomic) double taskTimeout;                                               //@synthesize taskTimeout=_taskTimeout - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> taskTimeoutTimer;                   //@synthesize taskTimeoutTimer=_taskTimeoutTimer - In the implementation block
@property (assign,nonatomic) double assertionTimeout;                                          //@synthesize assertionTimeout=_assertionTimeout - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> assertionTimeoutTimer;              //@synthesize assertionTimeoutTimer=_assertionTimeoutTimer - In the implementation block
@property (nonatomic,copy) id finishedHandler;                                                 //@synthesize finishedHandler=_finishedHandler - In the implementation block
@property (nonatomic,copy) id expirationHandler;                                               //@synthesize expirationHandler=_expirationHandler - In the implementation block
@property (assign,nonatomic) int cancelType;                                                   //@synthesize cancelType=_cancelType - In the implementation block
-(id)description;
-(void)dealloc;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)invalidate;
-(NSObject*<OS_dispatch_queue>)queue;
-(NSError *)error;
-(void)setError:(NSError *)arg1 ;
-(id)result;
-(void)setHandlerQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setResult:(id)arg1 ;
-(NSMutableArray *)completions;
-(void)setFinishedHandler:(id)arg1 ;
-(id)finishedHandler;
-(void)setCompletions:(NSMutableArray *)arg1 ;
-(NSObject*<OS_dispatch_queue>)handlerQueue;
-(void)_invalidateAssertionTimer;
-(void)setTaskAssertion:(MZTaskAssertion *)arg1 ;
-(MZTaskAssertion *)taskAssertion;
-(void)addTaskCompletionBlock:(/*^block*/id)arg1 ;
-(void)setExpirationHandler:(id)arg1 ;
-(void)invokeTaskCompletionBlocksWithBlock:(/*^block*/id)arg1 ;
-(void)finishTaskOperationWithResult:(id)arg1 error:(id)arg2 ;
-(void)beginTaskOperation;
-(int)cancelType;
-(void)setCancelType:(int)arg1 ;
-(void)_onQueueFireExpirationHandlerIfNecesary;
-(id)expirationHandler;
-(void)endTaskOperation;
-(void)setTaskDebugDescription:(NSString *)arg1 ;
-(void)_invalidateTaskTimer;
-(void)_invalidateTaskAssertionForced:(BOOL)arg1 ;
-(NSObject*<OS_dispatch_source>)taskTimeoutTimer;
-(void)setTaskTimeoutTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)assertionTimeoutTimer;
-(void)setAssertionTimeoutTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSString *)taskDebugDescription;
-(double)taskTimeout;
-(double)assertionTimeout;
-(BOOL)taskInvalidationDisabled;
-(void)setTaskInvalidationDisabled:(BOOL)arg1 ;
-(id)initWithHandlerQueue:(id)arg1 taskTimeout:(double)arg2 assertionTimeout:(double)arg3 debugDescription:(id)arg4 ;
-(void)setTaskTimeout:(double)arg1 ;
-(void)setAssertionTimeout:(double)arg1 ;
@end


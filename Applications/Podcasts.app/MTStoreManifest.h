/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 1:50:18 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Podcasts/MTItemListManifest.h>

@class NSArray, NSNumber;

@interface MTStoreManifest : MTItemListManifest {

	BOOL _playerItemsNeedLoading;
	BOOL _initiatedByAnotherUser;
	unsigned long long _loadStatus;
	long long _playbackOrder;
	NSArray* _episodeAdamIds;
	NSNumber* _podcastAdamId;
	double _initialPlayheadPosition;
	unsigned long long _initialIndex;

}

@property (assign,nonatomic) double initialPlayheadPosition;               //@synthesize initialPlayheadPosition=_initialPlayheadPosition - In the implementation block
@property (assign,nonatomic) unsigned long long initialIndex;              //@synthesize initialIndex=_initialIndex - In the implementation block
@property (assign,nonatomic) BOOL playerItemsNeedLoading;                  //@synthesize playerItemsNeedLoading=_playerItemsNeedLoading - In the implementation block
@property (assign,nonatomic) unsigned long long loadStatus;                //@synthesize loadStatus=_loadStatus - In the implementation block
@property (assign,nonatomic) long long playbackOrder;                      //@synthesize playbackOrder=_playbackOrder - In the implementation block
@property (nonatomic,retain) NSArray * episodeAdamIds;                     //@synthesize episodeAdamIds=_episodeAdamIds - In the implementation block
@property (nonatomic,retain) NSNumber * podcastAdamId;                     //@synthesize podcastAdamId=_podcastAdamId - In the implementation block
@property (assign,nonatomic) BOOL initiatedByAnotherUser;                  //@synthesize initiatedByAnotherUser=_initiatedByAnotherUser - In the implementation block
+(id)activityTypeSuffix;
+(void)createManifestForActivity:(id)arg1 completion:(/*^block*/id)arg2 ;
+(id)_episodeStorePlatformDictionaryFromSiriAssetInfo:(id)arg1 episodeAdamId:(id)arg2 ;
+(id)storeMediaDictionariesToPlayerItems:(id)arg1 initiatedByAnotherUser:(BOOL)arg2 ;
+(id)podcastStorePlatformDictionaryFromSiriAssetInfo:(id)arg1 podcastAdamId:(id)arg2 ;
+(id)playerItemsFromPodcastStorePlatformDictionary:(id)arg1 oldestEpisode:(BOOL)arg2 restricted:(out BOOL*)arg3 initiatedByAnotherUser:(BOOL)arg4 ;
+(id)storeMediaDictionariesToPlayerItems:(id)arg1 ;
+(void)fetchPlayerItemsForStoreTrackIDs:(id)arg1 initiatedByAnotherUser:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
+(void)fetchPlayerItemsForStoreTrackIDs:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)activity;
-(void)load:(/*^block*/id)arg1 ;
-(id)initWithItems:(id)arg1 ;
-(long long)playbackOrder;
-(NSNumber *)podcastAdamId;
-(id)_initWithEpisodeAdamIds:(id)arg1 playheadPosition:(double)arg2 initialIndex:(unsigned long long)arg3 ;
-(BOOL)initiatedByAnotherUser;
-(id)initWithItems:(id)arg1 initialIndex:(unsigned long long)arg2 ;
-(void)_updateLoadStatus:(BOOL)arg1 ;
-(id)_initWithPodcastStorePlatformDictionary:(id)arg1 oldestEpisode:(BOOL)arg2 ;
-(void)setPlayerItemsNeedLoading:(BOOL)arg1 ;
-(void)setPlaybackOrder:(long long)arg1 ;
-(void)setPodcastAdamId:(NSNumber *)arg1 ;
-(void)setInitiatedByAnotherUser:(BOOL)arg1 ;
-(void)setInitialPlayheadPosition:(double)arg1 ;
-(void)setInitialIndex:(unsigned long long)arg1 ;
-(void)setEpisodeAdamIds:(NSArray *)arg1 ;
-(BOOL)playerItemsNeedLoading;
-(NSArray *)episodeAdamIds;
-(void)_loadItemsFromEpisodeAdamIdsWithCompletion:(/*^block*/id)arg1 ;
-(void)setLoadStatus:(unsigned long long)arg1 ;
-(double)initialPlayheadPosition;
-(unsigned long long)initialIndex;
-(id)initWithEpisodeAdamIds:(id)arg1 initialIndex:(unsigned long long)arg2 ;
-(id)initWithEpisodeAdamId:(id)arg1 siriAssetInfo:(id)arg2 initialIndex:(unsigned long long)arg3 initiatedByAnotherUser:(BOOL)arg4 ;
-(id)initWithPodcastAdamId:(id)arg1 siriAssetInfo:(id)arg2 oldestEpisode:(BOOL)arg3 initiatedByAnotherUser:(BOOL)arg4 ;
-(id)initWithStoreMediaDictionaries:(id)arg1 initialIndex:(unsigned long long)arg2 ;
-(BOOL)userActivityContainsPlayhead;
-(unsigned long long)loadStatus;
@end


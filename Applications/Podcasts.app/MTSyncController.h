/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 1:50:20 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Podcasts/Podcasts-Structs.h>
#import <Podcasts/MZKeyValueStoreControllerDelegate.h>
#import <Podcasts/MTReachabilityObserver.h>

@protocol OS_dispatch_queue;
@class NSObject, MZUniversalPlaybackPositionStore, MTUniversalPlaybackPositionDataSource, NSOperationQueue, MZKeyValueStoreController, NSString;

@interface MTSyncController : NSObject <MZKeyValueStoreControllerDelegate, MTReachabilityObserver> {

	double _lastOperation;
	NSObject*<OS_dispatch_queue> _syncQueue;
	BOOL _isRunning;
	BOOL _uppSyncDirtyFlag;
	BOOL _resyncWhenDone;
	BOOL _resetingToInitialState;
	MZUniversalPlaybackPositionStore* _UPPStore;
	MTUniversalPlaybackPositionDataSource* _UPPDataSource;
	unsigned long long _backgroundTask;
	NSOperationQueue* _queue;
	MZKeyValueStoreController* _cloudSyncController;
	unsigned long long _uppSyncCount;
	unsigned long long _subscriptionSyncCount;
	unsigned long long _episodeSyncCount;
	unsigned long long _legacyEpisodeSyncCount;

}

@property (assign,nonatomic) unsigned long long backgroundTask;                                  //@synthesize backgroundTask=_backgroundTask - In the implementation block
@property (nonatomic,retain) NSOperationQueue * queue;                                           //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) MZUniversalPlaybackPositionStore * UPPStore;                        //@synthesize UPPStore=_UPPStore - In the implementation block
@property (nonatomic,retain) MTUniversalPlaybackPositionDataSource * UPPDataSource;              //@synthesize UPPDataSource=_UPPDataSource - In the implementation block
@property (nonatomic,retain) MZKeyValueStoreController * cloudSyncController;                    //@synthesize cloudSyncController=_cloudSyncController - In the implementation block
@property (assign,nonatomic) unsigned long long uppSyncCount;                                    //@synthesize uppSyncCount=_uppSyncCount - In the implementation block
@property (assign,nonatomic) unsigned long long subscriptionSyncCount;                           //@synthesize subscriptionSyncCount=_subscriptionSyncCount - In the implementation block
@property (assign,nonatomic) unsigned long long episodeSyncCount;                                //@synthesize episodeSyncCount=_episodeSyncCount - In the implementation block
@property (assign,nonatomic) unsigned long long legacyEpisodeSyncCount;                          //@synthesize legacyEpisodeSyncCount=_legacyEpisodeSyncCount - In the implementation block
@property (assign,nonatomic) BOOL resyncWhenDone;                                                //@synthesize resyncWhenDone=_resyncWhenDone - In the implementation block
@property (assign,nonatomic) BOOL resetingToInitialState;                                        //@synthesize resetingToInitialState=_resetingToInitialState - In the implementation block
@property (assign,nonatomic) BOOL uppSyncDirtyFlag;                                              //@synthesize uppSyncDirtyFlag=_uppSyncDirtyFlag - In the implementation block
@property (nonatomic,readonly) BOOL isSyncing; 
@property (nonatomic,readonly) BOOL isRunning;                                                   //@synthesize isRunning=_isRunning - In the implementation block
@property (nonatomic,retain) NSString * podcastSyncVersion; 
@property (nonatomic,retain) NSString * playlistSyncVersion; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)sharedInstance;
+(BOOL)isUserLoggedIn;
+(void)resetMetadataToInitialState;
+(BOOL)hasAccountChangedSinceLastSync;
+(void)resetPodcastSyncVersion;
+(void)resetPlaylistSyncVersion;
+(void)setAccountIdentifierForLastSync:(id)arg1 ;
+(id)accountIdentifierForLastSync;
+(id)podcastSyncVersion;
+(void)setPodcastSyncVersion:(id)arg1 ;
+(id)playlistSyncVersion;
+(void)setPlaylistSyncVersion:(id)arg1 ;
+(void)mergeArray:(id)arg1 fromArray:(id)arg2 properties:(id)arg3 lookupKey:(id)arg4 updateBlock:(/*^block*/id)arg5 insertBlock:(/*^block*/id)arg6 deleteBlock:(/*^block*/id)arg7 ;
+(void)resetAccountIdentifierForLastSync;
-(id)init;
-(void)dealloc;
-(void)setQueue:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)queue;
-(void)addOperation:(id)arg1 ;
-(void)start;
-(BOOL)isRunning;
-(void)operationFinished:(id)arg1 ;
-(void)startBackgroundTask;
-(void)endBackgroundTask;
-(void)setIsRunning:(BOOL)arg1 ;
-(void)setBackgroundTask:(unsigned long long)arg1 ;
-(BOOL)isSyncing;
-(void)applicationDidEnterBackground;
-(void)applicationWillEnterForeground;
-(void)reachabilityChangedFrom:(BOOL)arg1 to:(BOOL)arg2 ;
-(BOOL)isUserLoggedIn;
-(unsigned long long)backgroundTask;
-(void)syncEverything;
-(BOOL)keyValueStoreController:(id)arg1 transaction:(id)arg2 didFailWithError:(id)arg3 ;
-(void)keyValueStoreController:(id)arg1 transaction:(id)arg2 didCancelWithError:(id)arg3 ;
-(void)keyValueStoreController:(id)arg1 transactionDidFinish:(id)arg2 ;
-(void)scheduleEpisodeStatePutWithFeedUrls:(id)arg1 ;
-(void)scheduleEpisodeStateGetWithFeedUrls:(id)arg1 ;
-(MZUniversalPlaybackPositionStore *)UPPStore;
-(void)setUPPDataSource:(MTUniversalPlaybackPositionDataSource *)arg1 ;
-(void)setUPPStore:(MZUniversalPlaybackPositionStore *)arg1 ;
-(MTUniversalPlaybackPositionDataSource *)UPPDataSource;
-(MZKeyValueStoreController *)cloudSyncController;
-(void)setCloudSyncController:(MZKeyValueStoreController *)arg1 ;
-(void)updateAccountForLastSync;
-(unsigned long long)uppSyncCount;
-(unsigned long long)subscriptionSyncCount;
-(unsigned long long)episodeSyncCount;
-(unsigned long long)legacyEpisodeSyncCount;
-(void)setUppSyncCount:(unsigned long long)arg1 ;
-(void)setSubscriptionSyncCount:(unsigned long long)arg1 ;
-(void)setEpisodeSyncCount:(unsigned long long)arg1 ;
-(void)setLegacyEpisodeSyncCount:(unsigned long long)arg1 ;
-(void)enableAssetDeletionIfPossible:(unsigned long long)arg1 ;
-(BOOL)resyncWhenDone;
-(void)setResyncWhenDone:(BOOL)arg1 ;
-(id)operationInQueueWithType:(int)arg1 ;
-(BOOL)canScheduleSyncRequest;
-(BOOL)resetToInitialStateIfNeeded;
-(BOOL)UPPEnabled;
-(BOOL)hasAccountChangedSinceLastSync;
-(BOOL)resetingToInitialState;
-(void)syncSubscriptions;
-(void)performUniversalPlaybackPositionSync;
-(void)syncTermsVersion;
-(void)syncSubscriptions:(int)arg1 ;
-(void)syncPlaylists:(int)arg1 ;
-(id)subscriptionKeys;
-(void)enableAssetDeletionIfPossible;
-(id)expandFeedUrls:(id)arg1 ;
-(BOOL)resetToInitialStateForced:(BOOL)arg1 asyncronously:(BOOL)arg2 ;
-(BOOL)resetToInitialStateForced:(BOOL)arg1 asyncronously:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)hasPodcastSyncVersion;
-(BOOL)isPrivateListeningModeChanged;
-(BOOL)hasPlaylistSyncVersion;
-(void)setResetingToInitialState:(BOOL)arg1 ;
-(NSString *)podcastSyncVersion;
-(void)setPodcastSyncVersion:(NSString *)arg1 ;
-(NSString *)playlistSyncVersion;
-(void)setPlaylistSyncVersion:(NSString *)arg1 ;
-(BOOL)needsInitialSync;
-(BOOL)uppSyncDirtyFlag;
-(void)setUppSyncDirtyFlag:(BOOL)arg1 ;
@end


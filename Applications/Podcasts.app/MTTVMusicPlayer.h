/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 1:50:21 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Podcasts/Podcasts-Structs.h>
#import <Podcasts/MTTVMusicPlayQueueDelegate.h>
#import <Podcasts/MPCPlaybackEngineDelegate.h>
#import <Podcasts/MPCPlaybackEngineEventObserving.h>
#import <Podcasts/TVPAVFPlayback.h>

@protocol TVPMediaItem, OS_dispatch_queue, TVPASyncPlaybackDelegate;
@class NSObject, TVPChapterCollection, NSArray, TVPSubtitleOption, TVPInterstitial, TVPAudioOption, NSDate, TVPChapter, MTTVMusicPlayQueue, MPCPlaybackEngine, NSString, NSMutableArray, AVPlayer, TVPPlaybackState, TVPTimeRange, MPAVItem, MPIdentifierSet, MPCPlaybackIntent, TVPPlaylist, TVPDateRange;

@interface MTTVMusicPlayer : NSObject <MTTVMusicPlayQueueDelegate, MPCPlaybackEngineDelegate, MPCPlaybackEngineEventObserving, TVPAVFPlayback> {

	id<TVPMediaItem> _currentMediaItem;
	NSObject*<OS_dispatch_queue> _mediaItemObservationQueue;
	BOOL _waitsAfterPreparingMediaItems;
	BOOL interactive;
	BOOL limitReadAhead;
	BOOL muted;
	BOOL updatesMediaRemoteInfoAutomatically;
	BOOL preventsSleepDuringVideoPlayback;
	BOOL currentMediaItemInitialLoadingComplete;
	BOOL _elapsedTimeJumpInProgress;
	BOOL _isStopped;
	BOOL _isLive;
	float volume;
	long long errorBehavior;
	TVPChapterCollection* currentChapterCollection;
	double rateUsedForPlayback;
	NSArray* subtitleOptions;
	double maximumBitRate;
	id<TVPASyncPlaybackDelegate> asyncDelegate;
	TVPSubtitleOption* selectedSubtitleOption;
	long long mediaItemEndAction;
	TVPInterstitial* currentInterstitial;
	NSArray* chapterCollections;
	TVPAudioOption* selectedAudioOption;
	double forwardPlaybackEndTime;
	NSDate* playbackDate;
	double reversePlaybackEndTime;
	TVPChapter* currentChapter;
	MTTVMusicPlayQueue* _playQueue;
	MPCPlaybackEngine* _playbackEngine;
	NSString* _name;
	NSMutableArray* _elapsedTimeObservers;
	AVPlayer* _avPlayer;
	double _targetElapsedTime;
	TVPPlaybackState* _state;
	double _duration;
	TVPTimeRange* _bufferedTimeRange;
	MPAVItem* _currentAVItem;
	MPIdentifierSet* _identifiersForLastPlayedContainer;
	MPIdentifierSet* _identifiersForLastEndedPlaybackItem;

}

@property (nonatomic,retain) MTTVMusicPlayQueue * playQueue;                                     //@synthesize playQueue=_playQueue - In the implementation block
@property (nonatomic,retain) MPCPlaybackEngine * playbackEngine;                                 //@synthesize playbackEngine=_playbackEngine - In the implementation block
@property (nonatomic,copy) NSString * name;                                                      //@synthesize name=_name - In the implementation block
@property (nonatomic,retain) NSMutableArray * elapsedTimeObservers;                              //@synthesize elapsedTimeObservers=_elapsedTimeObservers - In the implementation block
@property (nonatomic,retain) AVPlayer * avPlayer;                                                //@synthesize avPlayer=_avPlayer - In the implementation block
@property (assign,nonatomic) BOOL elapsedTimeJumpInProgress;                                     //@synthesize elapsedTimeJumpInProgress=_elapsedTimeJumpInProgress - In the implementation block
@property (assign,nonatomic) double targetElapsedTime;                                           //@synthesize targetElapsedTime=_targetElapsedTime - In the implementation block
@property (nonatomic,retain) TVPPlaybackState * state;                                           //@synthesize state=_state - In the implementation block
@property (assign,nonatomic) double duration;                                                    //@synthesize duration=_duration - In the implementation block
@property (assign,nonatomic) BOOL currentMediaItemInitialLoadingComplete; 
@property (assign,nonatomic) BOOL isStopped;                                                     //@synthesize isStopped=_isStopped - In the implementation block
@property (assign,nonatomic) BOOL isLive;                                                        //@synthesize isLive=_isLive - In the implementation block
@property (nonatomic,retain) TVPTimeRange * bufferedTimeRange;                                   //@synthesize bufferedTimeRange=_bufferedTimeRange - In the implementation block
@property (nonatomic,retain) MPAVItem * currentAVItem;                                           //@synthesize currentAVItem=_currentAVItem - In the implementation block
@property (nonatomic,retain) MPIdentifierSet * identifiersForLastPlayedContainer;                //@synthesize identifiersForLastPlayedContainer=_identifiersForLastPlayedContainer - In the implementation block
@property (nonatomic,retain) MPIdentifierSet * identifiersForLastEndedPlaybackItem;              //@synthesize identifiersForLastEndedPlaybackItem=_identifiersForLastEndedPlaybackItem - In the implementation block
@property (nonatomic,retain) MPCPlaybackIntent * fallbackPlaybackIntent; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<TVPPlaybackDelegate> delegate; 
@property (assign,nonatomic,__weak) id<TVPASyncPlaybackDelegate> asyncDelegate; 
@property (nonatomic,retain) TVPPlaylist * playlist; 
@property (nonatomic,retain) NSObject*<TVPMediaItem> currentMediaItem; 
@property (nonatomic,readonly) BOOL currentMediaItemPreparedForLoading; 
@property (nonatomic,readonly) BOOL currentMediaItemHasVideoContent; 
@property (nonatomic,readonly) BOOL currentMediaItemIsStreaming; 
@property (nonatomic,readonly) CGSize currentMediaItemPresentationSize; 
@property (nonatomic,readonly) BOOL currentMediaItemHasDates; 
@property (assign,nonatomic) long long errorBehavior; 
@property (assign,nonatomic) BOOL interactive; 
@property (nonatomic,readonly) double rate; 
@property (assign,nonatomic) double rateUsedForPlayback; 
@property (assign,nonatomic) BOOL waitsAfterPreparingMediaItems;                                 //@synthesize waitsAfterPreparingMediaItems=_waitsAfterPreparingMediaItems - In the implementation block
@property (nonatomic,readonly) double elapsedTime; 
@property (nonatomic,copy) NSDate * playbackDate; 
@property (assign,nonatomic) BOOL muted; 
@property (assign,nonatomic) float volume; 
@property (nonatomic,readonly) NSArray * chapterCollections; 
@property (nonatomic,retain) TVPChapterCollection * currentChapterCollection; 
@property (nonatomic,readonly) TVPChapter * currentChapter; 
@property (nonatomic,readonly) TVPInterstitial * currentInterstitial; 
@property (nonatomic,readonly) TVPTimeRange * seekableTimeRange; 
@property (nonatomic,readonly) TVPDateRange * seekableDateRange; 
@property (nonatomic,readonly) double forwardPlaybackEndTime; 
@property (nonatomic,readonly) double reversePlaybackEndTime; 
@property (assign,nonatomic) long long mediaItemEndAction; 
@property (nonatomic,readonly) NSArray * audioOptions; 
@property (nonatomic,retain) TVPAudioOption * selectedAudioOption; 
@property (nonatomic,readonly) NSArray * subtitleOptions; 
@property (nonatomic,retain) TVPSubtitleOption * selectedSubtitleOption; 
@property (assign,nonatomic) double maximumBitRate; 
@property (assign,nonatomic) BOOL preventsSleepDuringVideoPlayback; 
@property (assign,nonatomic) BOOL updatesMediaRemoteInfoAutomatically; 
@property (assign,nonatomic) BOOL limitReadAhead; 
-(NSString *)name;
-(id)init;
-(void)dealloc;
-(void)invalidate;
-(id<TVPPlaybackDelegate>)delegate;
-(void)setDelegate:(id<TVPPlaybackDelegate>)arg1 ;
-(void)setName:(NSString *)arg1 ;
-(id)initWithName:(id)arg1 ;
-(TVPPlaybackState *)state;
-(void)setState:(TVPPlaybackState *)arg1 ;
-(void)stop;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)pause;
-(BOOL)isStopped;
-(double)duration;
-(void)setDuration:(double)arg1 ;
-(double)rate;
-(void)setElapsedTime:(double)arg1 ;
-(double)elapsedTime;
-(float)volume;
-(void)setVolume:(float)arg1 ;
-(void)play;
-(void)setMuted:(BOOL)arg1 ;
-(BOOL)muted;
-(double)forwardPlaybackEndTime;
-(double)reversePlaybackEndTime;
-(BOOL)limitReadAhead;
-(void)setLimitReadAhead:(BOOL)arg1 ;
-(double)maximumBitRate;
-(void)setMaximumBitRate:(double)arg1 ;
-(NSArray *)audioOptions;
-(BOOL)isLive;
-(BOOL)interactive;
-(void)setInteractive:(BOOL)arg1 ;
-(TVPPlaylist *)playlist;
-(void)setPlaylist:(TVPPlaylist *)arg1 ;
-(NSObject*<TVPMediaItem>)currentMediaItem;
-(AVPlayer *)avPlayer;
-(void)_itemReadyToPlay:(id)arg1 ;
-(void)_itemChanged:(id)arg1 ;
-(MPCPlaybackEngine *)playbackEngine;
-(void)setPreventsSleepDuringVideoPlayback:(BOOL)arg1 ;
-(BOOL)preventsSleepDuringVideoPlayback;
-(void)setAvPlayer:(AVPlayer *)arg1 ;
-(void)setPlaybackEngine:(MPCPlaybackEngine *)arg1 ;
-(MPCPlaybackIntent *)fallbackPlaybackIntent;
-(void)engine:(id)arg1 willChangeToItem:(id)arg2 fromItem:(id)arg3 ;
-(void)engine:(id)arg1 didResetQueueWithPlaybackContext:(id)arg2 error:(id)arg3 ;
-(void)engine:(id)arg1 didFailToPlayItem:(id)arg2 withError:(id)arg3 ;
-(void)setFallbackPlaybackIntent:(MPCPlaybackIntent *)arg1 ;
-(void)engineDidPauseForLeaseEnd:(id)arg1 ;
-(void)_setCurrentState:(id)arg1 ;
-(void)setUpdatesMediaRemoteInfoAutomatically:(BOOL)arg1 ;
-(id)addBoundaryTimeObserverForTimes:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(BOOL)currentMediaItemHasVideoContent;
-(void)changeMediaInDirection:(long long)arg1 ;
-(void)changeToMediaAtIndex:(unsigned long long)arg1 reason:(id)arg2 ;
-(void)scanWithRate:(double)arg1 ;
-(void)setElapsedTime:(double)arg1 precise:(BOOL)arg2 ;
-(NSDate *)playbackDate;
-(void)setPlaybackDate:(NSDate *)arg1 ;
-(BOOL)updatesMediaRemoteInfoAutomatically;
-(void)setAsyncDelegate:(id<TVPASyncPlaybackDelegate>)arg1 ;
-(id)addElapsedTimeObserver:(/*^block*/id)arg1 ;
-(void)removeElapsedTimeObserverWithToken:(id)arg1 ;
-(void)removeBoundaryTimeObserverWithToken:(id)arg1 ;
-(void)setCurrentMediaItem:(NSObject*<TVPMediaItem>)arg1 ;
-(TVPAudioOption *)selectedAudioOption;
-(TVPSubtitleOption *)selectedSubtitleOption;
-(void)updateSubtitleOptions;
-(void)setIsLive:(BOOL)arg1 ;
-(TVPChapter *)currentChapter;
-(void)togglePlayPause;
-(NSArray *)subtitleOptions;
-(void)setSelectedSubtitleOption:(id)arg1 setGlobalPreference:(BOOL)arg2 ;
-(void)changeMediaInDirection:(long long)arg1 reason:(id)arg2 ;
-(void)continueLoadingCurrentItem;
-(void)playIgnoringDelegate:(BOOL)arg1 ;
-(void)pauseIgnoringDelegate:(BOOL)arg1 ;
-(void)pauseWithVolumeRampDuration:(double)arg1 ;
-(void)stopWithVolumeRampDuration:(double)arg1 ;
-(void)setElapsedTime:(double)arg1 seekPrecision:(SCD_Struct_MT6)arg2 ;
-(void)setElapsedTime:(double)arg1 seekPrecision:(SCD_Struct_MT6)arg2 ignoreDelegate:(BOOL)arg3 ;
-(id)addBoundaryTimeObserverForDates:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)skipToNextChapterInDirection:(long long)arg1 ;
-(BOOL)currentMediaItemSupportsScrubbingUsingPlayer;
-(id<TVPASyncPlaybackDelegate>)asyncDelegate;
-(BOOL)currentMediaItemPreparedForLoading;
-(BOOL)currentMediaItemInitialLoadingComplete;
-(BOOL)currentMediaItemIsStreaming;
-(CGSize)currentMediaItemPresentationSize;
-(BOOL)currentMediaItemHasDates;
-(long long)errorBehavior;
-(void)setErrorBehavior:(long long)arg1 ;
-(double)rateUsedForPlayback;
-(void)setRateUsedForPlayback:(double)arg1 ;
-(BOOL)waitsAfterPreparingMediaItems;
-(void)setWaitsAfterPreparingMediaItems:(BOOL)arg1 ;
-(NSArray *)chapterCollections;
-(TVPChapterCollection *)currentChapterCollection;
-(void)setCurrentChapterCollection:(TVPChapterCollection *)arg1 ;
-(TVPInterstitial *)currentInterstitial;
-(TVPTimeRange *)bufferedTimeRange;
-(TVPTimeRange *)seekableTimeRange;
-(TVPDateRange *)seekableDateRange;
-(long long)mediaItemEndAction;
-(void)setMediaItemEndAction:(long long)arg1 ;
-(void)setSelectedAudioOption:(TVPAudioOption *)arg1 ;
-(void)setSelectedSubtitleOption:(TVPSubtitleOption *)arg1 ;
-(void)addWeakReferenceToVideoView:(id)arg1 ;
-(void)removeWeakReferenceToVideoView:(id)arg1 ;
-(void)setElapsedTime:(double)arg1 orPlaybackDate:(id)arg2 withAVKitCompletion:(/*^block*/id)arg3 ;
-(void)setCurrentMediaItemInitialLoadingComplete:(BOOL)arg1 ;
-(void)_populatePlayerItem:(id)arg1 withMetadataFromMediaItem:(id)arg2 ;
-(BOOL)_getStringForTitleLabel:(id*)arg1 subtitleLabel:(id*)arg2 forMediaItem:(id)arg3 ;
-(void)_playerPathChanged:(id)arg1 ;
-(void)playQueue:(id)arg1 didChangeAVPlayer:(id)arg2 ;
-(void)playQueue:(id)arg1 didUpdateQueue:(id)arg2 ;
-(void)playQueue:(id)arg1 didChangePlayingItem:(id)arg2 ;
-(void)playQueue:(id)arg1 didChangeFromPlayState:(long long)arg2 toPlayState:(long long)arg3 ;
-(void)playQueue:(id)arg1 didChangeDurationSnapshot:(SCD_Struct_MT7)arg2 ;
-(void)_loadedDurationDidChange:(id)arg1 ;
-(MTTVMusicPlayQueue *)playQueue;
-(NSMutableArray *)elapsedTimeObservers;
-(void)setIsStopped:(BOOL)arg1 ;
-(MPAVItem *)currentAVItem;
-(void)_setCurrentMediaItem:(id)arg1 ;
-(id)_TVPPlaybackStateFromMCPPlayerState:(long long)arg1 ;
-(MPIdentifierSet *)identifiersForLastEndedPlaybackItem;
-(void)setElapsedTimeJumpInProgress:(BOOL)arg1 ;
-(void)setTargetElapsedTime:(double)arg1 ;
-(void)_setAVPlayer:(id)arg1 ;
-(void)setBufferedTimeRange:(TVPTimeRange *)arg1 ;
-(void)_updateElapsedTimeObserversWithDurationSnapshot:(SCD_Struct_MT7)arg1 ;
-(BOOL)elapsedTimeJumpInProgress;
-(double)targetElapsedTime;
-(void)_sendNotificationForError:(id)arg1 avItem:(id)arg2 ;
-(void)setIdentifiersForLastEndedPlaybackItem:(MPIdentifierSet *)arg1 ;
-(void)setCurrentAVItem:(MPAVItem *)arg1 ;
-(void)engine:(id)arg1 didFailToPlayFirstItem:(id)arg2 ;
-(void)engine:(id)arg1 willResetQueueWithPlaybackIntent:(id)arg2 ;
-(void)setPlayQueue:(MTTVMusicPlayQueue *)arg1 ;
-(void)setElapsedTimeObservers:(NSMutableArray *)arg1 ;
-(MPIdentifierSet *)identifiersForLastPlayedContainer;
-(void)setIdentifiersForLastPlayedContainer:(MPIdentifierSet *)arg1 ;
@end


/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 12:49:52 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/TVHomeSharing.app/TVHomeSharing
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TVHomeSharing/TVHJSObject.h>
#import <TVHomeSharing/TVHJSMediaEntityFetchRequest.h>

@protocol TVHJSMediaEntityFetchRequest <JSExport>
@required
+(id)playlistItemsFetchRequestWithPlaylistIdentifier:(id)arg1;
+(id)playlistItemsFetchRequestWithPlaylist:(id)arg1;
+(id)movieRentalsFetchRequest;
+(id)homeVideosFetchRequest;
+(id)showsFetchRequest;
+(id)moviesFetchRequest;
+(id)homeVideoFetchRequestWithIdentifier:(id)arg1;
+(id)movieFetchRequestWithIdentifier:(id)arg1;
+(id)movieRentalFetchRequestWithIdentifier:(id)arg1;
+(id)showFetchRequestWithIdentifier:(id)arg1;
+(id)showSeasonsFetchRequestWithShow:(id)arg1;
+(id)showEpisodesFetchRequestWithSeason:(id)arg1;
+(id)showEpisodeFetchRequestWithIdentifier:(id)arg1;
+(id)unplayedShowEpisodesFetchRequest;
+(id)audiobooksFetchRequest;
+(id)audiobookFetchRequestWithIdentifier:(id)arg1;
+(id)audiobookChaptersFetchRequestWithAudiobook:(id)arg1;
+(id)audiobookChaptersFetchRequestWithAudiobookIdentifier:(id)arg1;
+(id)audiobookChapterFetchRequestWithIdentifier:(id)arg1;
+(id)unplayedAudiobookChaptersFetchRequest;
+(id)podcastsFetchRequest;
+(id)podcastFetchRequestWithIdentifier:(id)arg1;
+(id)podcastEpisodesFetchRequestWithPodcast:(id)arg1;
+(id)podcastEpisodesFetchRequestWithPodcastIdentifier:(id)arg1;
+(id)podcastEpisodeFetchRequestWithIdentifier:(id)arg1;
+(id)unplayedPodcastEpisodesFetchRequest;
+(id)iTunesUCoursesFetchRequest;
+(id)iTunesUCourseFetchRequestWithIdentifier:(id)arg1;
+(id)iTunesUEpisodesFetchRequestWithCourse:(id)arg1;
+(id)iTunesUEpisodesFetchRequestWithCourseIdentifier:(id)arg1;
+(id)iTunesUEpisodeFetchRequestWithIdentifier:(id)arg1;
+(id)unplayedITunesUEpisodesFetchRequest;
+(id)musicAlbumsFetchRequest;
+(id)musicAlbumsFetchRequestWithAlbumArtist:(id)arg1;
+(id)musicAlbumsFetchRequestWithComposer:(id)arg1;
+(id)musicAlbumsFetchRequestWithGenre:(id)arg1;
+(id)musicAlbumFetchRequestWithIdentifier:(id)arg1;
+(id)musicAlbumArtistsFetchRequest;
+(id)musicAlbumArtistFetchRequestWithIdentifier:(id)arg1;
+(id)musicCompilationAlbumsFetchRequest;
+(id)musicComposersFetchRequest;
+(id)musicGenresFetchRequest;
+(id)musicGeniusMixPlaylistsFetchRequest;
+(id)musicItemsFetchRequest;
+(id)musicItemsFetchRequestWithAlbum:(id)arg1;
+(id)musicItemsFetchRequestWithAlbumIdentifier:(id)arg1;
+(id)musicItemsFetchRequestWithAlbumArtist:(id)arg1;
+(id)musicItemsFetchRequestWithAlbumArtistIdentifier:(id)arg1;
+(id)musicItemsFetchRequestWithGeniusMix:(id)arg1;
+(id)musicItemsFetchRequestWithGenre:(id)arg1;
+(id)musicItemsFetchRequestWithComposer:(id)arg1;
+(id)musicItemFetchRequestWithIdentifier:(id)arg1;
+(id)musicPlaylistsFetchRequest;
+(id)musicSongsFetchRequest;
+(id)musicVideosFetchRequest;
+(id)photoItemsFetchRequest;
+(id)playlistsFetchRequest:(id)arg1 :(id)arg2 :(id)arg3;
+(id)paradeMediaEntitiesWithMediaCategoryType:(id)arg1 :(unsigned long long)arg2;

@end


@class TVHKMediaEntityFetchRequest;

@interface TVHJSMediaEntityFetchRequest : TVHJSObject <TVHJSMediaEntityFetchRequest> {

	TVHKMediaEntityFetchRequest* _wrappedRequest;

}

@property (nonatomic,retain) TVHKMediaEntityFetchRequest * wrappedRequest;              //@synthesize wrappedRequest=_wrappedRequest - In the implementation block
+(id)playlistItemsFetchRequestWithPlaylistIdentifier:(id)arg1 ;
+(id)playlistItemsFetchRequestWithPlaylist:(id)arg1 ;
+(id)movieRentalsFetchRequest;
+(id)homeVideosFetchRequest;
+(id)showsFetchRequest;
+(id)moviesFetchRequest;
+(id)_fetchRequestWithRequest:(id)arg1 ;
+(id)_mediaCategoryTypesForMediaCategoryTypeStrings:(id)arg1 ;
+(id)homeVideoFetchRequestWithIdentifier:(id)arg1 ;
+(id)movieFetchRequestWithIdentifier:(id)arg1 ;
+(id)movieRentalFetchRequestWithIdentifier:(id)arg1 ;
+(id)showFetchRequestWithIdentifier:(id)arg1 ;
+(id)showSeasonsFetchRequestWithShow:(id)arg1 ;
+(id)showEpisodesFetchRequestWithSeason:(id)arg1 ;
+(id)showEpisodeFetchRequestWithIdentifier:(id)arg1 ;
+(id)unplayedShowEpisodesFetchRequest;
+(id)audiobooksFetchRequest;
+(id)audiobookFetchRequestWithIdentifier:(id)arg1 ;
+(id)audiobookChaptersFetchRequestWithAudiobook:(id)arg1 ;
+(id)audiobookChaptersFetchRequestWithAudiobookIdentifier:(id)arg1 ;
+(id)audiobookChapterFetchRequestWithIdentifier:(id)arg1 ;
+(id)unplayedAudiobookChaptersFetchRequest;
+(id)podcastsFetchRequest;
+(id)podcastFetchRequestWithIdentifier:(id)arg1 ;
+(id)podcastEpisodesFetchRequestWithPodcast:(id)arg1 ;
+(id)podcastEpisodesFetchRequestWithPodcastIdentifier:(id)arg1 ;
+(id)podcastEpisodeFetchRequestWithIdentifier:(id)arg1 ;
+(id)unplayedPodcastEpisodesFetchRequest;
+(id)iTunesUCoursesFetchRequest;
+(id)iTunesUCourseFetchRequestWithIdentifier:(id)arg1 ;
+(id)iTunesUEpisodesFetchRequestWithCourse:(id)arg1 ;
+(id)iTunesUEpisodesFetchRequestWithCourseIdentifier:(id)arg1 ;
+(id)iTunesUEpisodeFetchRequestWithIdentifier:(id)arg1 ;
+(id)unplayedITunesUEpisodesFetchRequest;
+(id)musicAlbumsFetchRequest;
+(id)musicAlbumsFetchRequestWithAlbumArtist:(id)arg1 ;
+(id)musicAlbumsFetchRequestWithComposer:(id)arg1 ;
+(id)musicAlbumsFetchRequestWithGenre:(id)arg1 ;
+(id)musicAlbumFetchRequestWithIdentifier:(id)arg1 ;
+(id)musicAlbumArtistsFetchRequest;
+(id)musicAlbumArtistFetchRequestWithIdentifier:(id)arg1 ;
+(id)musicCompilationAlbumsFetchRequest;
+(id)musicComposersFetchRequest;
+(id)musicGenresFetchRequest;
+(id)musicGeniusMixPlaylistsFetchRequest;
+(id)musicItemsFetchRequest;
+(id)musicItemsFetchRequestWithAlbum:(id)arg1 ;
+(id)musicItemsFetchRequestWithAlbumIdentifier:(id)arg1 ;
+(id)musicItemsFetchRequestWithAlbumArtist:(id)arg1 ;
+(id)musicItemsFetchRequestWithAlbumArtistIdentifier:(id)arg1 ;
+(id)musicItemsFetchRequestWithGeniusMix:(id)arg1 ;
+(id)musicItemsFetchRequestWithGenre:(id)arg1 ;
+(id)musicItemsFetchRequestWithComposer:(id)arg1 ;
+(id)musicItemFetchRequestWithIdentifier:(id)arg1 ;
+(id)musicPlaylistsFetchRequest;
+(id)musicSongsFetchRequest;
+(id)musicVideosFetchRequest;
+(id)photoItemsFetchRequest;
+(id)playlistsFetchRequest:(id)arg1 :(id)arg2 :(id)arg3 ;
+(id)paradeMediaEntitiesWithMediaCategoryType:(id)arg1 :(unsigned long long)arg2 ;
-(id)initWithAppContext:(id)arg1 ;
-(TVHKMediaEntityFetchRequest *)wrappedRequest;
-(id)initWithMediaEntityFetchRequest:(id)arg1 appContext:(id)arg2 ;
-(void)setWrappedRequest:(TVHKMediaEntityFetchRequest *)arg1 ;
@end


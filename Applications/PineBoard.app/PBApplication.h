/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, November 5, 2019 at 1:54:27 PM Mountain Standard Time
* Operating System: Version 13.0 (Build 17J586)
* Image Source: /Applications/PineBoard.app/PineBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PineBoard/PineBoard-Structs.h>
#import <UIKitCore/UISystemShellApplication.h>
#import <PineBoard/PBAppInfoControllerDelegate.h>
#import <PineBoard/PBSBulletinServiceDelegate.h>
#import <PineBoard/PBSceneManagerObserver.h>

@class PBBulletinService, PBSBulletin, NSMutableArray, NSTimer, PBAppInfoController, PBProfileServiceDelegate, PBDialogHiddenAssertion, NSString;

@interface PBApplication : UISystemShellApplication <PBAppInfoControllerDelegate, PBSBulletinServiceDelegate, PBSceneManagerObserver> {

	PBBulletinService* _bulletinService;
	PBSBulletin* _networkBulletin;
	PBSBulletin* _sysdiagnoseBulletin;
	PBSBulletin* _screenshotCapturedBulletin;
	BOOL _needsAdjustToDisplayChange;
	BOOL _inhibitForThermal;
	BOOL _inhibitForOSUpdate;
	BOOL _processingSysdiagnoseViaChord;
	NSMutableArray* _enqueuedEvents;
	BOOL _userInterfaceLayoutDirectionIsValid;
	long long _userInterfaceLayoutDirection;
	BOOL _airPlayActive;
	NSTimer* _suppressWakeForHIDEventsTimer;
	PBAppInfoController* _appInfoController;
	PBProfileServiceDelegate* _profileServiceDelegate;
	PBDialogHiddenAssertion* _singleAppModeDialogAssertion;

}

@property (nonatomic,retain) NSTimer * suppressWakeForHIDEventsTimer;                               //@synthesize suppressWakeForHIDEventsTimer=_suppressWakeForHIDEventsTimer - In the implementation block
@property (nonatomic,readonly) PBAppInfoController * appInfoController;                             //@synthesize appInfoController=_appInfoController - In the implementation block
@property (nonatomic,retain) PBProfileServiceDelegate * profileServiceDelegate;                     //@synthesize profileServiceDelegate=_profileServiceDelegate - In the implementation block
@property (nonatomic,readonly) PBDialogHiddenAssertion * singleAppModeDialogAssertion;              //@synthesize singleAppModeDialogAssertion=_singleAppModeDialogAssertion - In the implementation block
@property (assign,nonatomic) BOOL airPlayActive;                                                    //@synthesize airPlayActive=_airPlayActive - In the implementation block
@property (nonatomic,copy,readonly) NSString * kioskAppBundleIdentifier; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedApplication;
+(id)sharedApplicationLibrary;
+(id)sharedAppInfoStore;
-(id)init;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)keyCommands;
-(long long)userInterfaceLayoutDirection;
-(void)sendEvent:(id)arg1 ;
-(void)finishedTest:(id)arg1 ;
-(void)_handleKeyUIEvent:(id)arg1 ;
-(void)resignActive;
-(BOOL)_accessibilityIsSystemAppServer;
-(void)setAirPlayActive:(BOOL)arg1 ;
-(BOOL)disablesFrontBoardImplicitWindowScenes;
-(void)bulletinService:(id)arg1 didDismissBulletin:(id)arg2 withReason:(unsigned long long)arg3 ;
-(id)bulletinService;
-(void)_finishButtonEvent:(id)arg1 ;
-(void)failedTest:(id)arg1 ;
-(void)appInfoController:(id)arg1 didUpdate:(id)arg2 ;
-(NSString *)kioskAppBundleIdentifier;
-(void)noteUserPresenceDetected;
-(BOOL)_handlePhysicalButtonEvent:(id)arg1 ;
-(BOOL)_prepareButtonEvent:(id)arg1 withPressInfo:(id)arg2 ;
-(void)resetIdleTimerAndUndim;
-(void)_handleHIDEvent:(IOHIDEventRef)arg1 ;
-(BOOL)runTest:(id)arg1 options:(id)arg2 ;
-(void)languageDidChange;
-(void)_startExternalControlManagement;
-(id)_sanitizeAppIdentifierHistory:(id)arg1 ;
-(void)_bluetoothRemotePowerSourceLimitedSourceNotification:(id)arg1 ;
-(void)_handleDeviceWillSleepNotification:(id)arg1 ;
-(void)_handleDeviceWillWakeNotification:(id)arg1 ;
-(void)_internetAvailabilityDidChangeNotification;
-(void)_blackScreenRecoveryModeNotification:(id)arg1 ;
-(void)_startUpAndRunningTimer;
-(void)_checkForQuestionableBootArgs;
-(BOOL)_isButtonDownEvent:(IOHIDEventRef)arg1 ;
-(void)_enhanceLogging:(unsigned)arg1 ;
-(void)_showStackShotIndication;
-(BOOL)_isSystemEvent:(IOHIDEventRef)arg1 ;
-(BOOL)_shouldTriggerExternalControlActionForEvent:(IOHIDEventRef)arg1 ;
-(void)_processChordsWithPressesEvent:(id)arg1 ;
-(BOOL)__handleHIDEvent:(IOHIDEventRef)arg1 ;
-(void)_logButtonEventTiming:(id)arg1 ;
-(BOOL)_handleSystemPressHidEvent:(IOHIDEventRef)arg1 withType:(long long)arg2 ;
-(void)_removeEnqueuedEvent:(id)arg1 ;
-(BOOL)activityInhibited;
-(void)_stopAllActivityCommon:(const char*)arg1 flag:(BOOL*)arg2 ;
-(void)_resumeAllActivityCommon:(const char*)arg1 flag:(BOOL*)arg2 ;
-(void)_saveRecentApplicationBundleIdentifiers;
-(void)activateScreenSaverRequestedByClient:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_activateScreenSaverFromUserAction:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)forwardHIDButtonEventWithUsagePage:(unsigned)arg1 usage:(unsigned)arg2 type:(unsigned long long)arg3 senderID:(unsigned long long)arg4 ;
-(void)_handleFocusedProcessDidChange;
-(void)sceneManager:(id)arg1 didChangeFocusFromScene:(id)arg2 toScene:(id)arg3 ;
-(void)finishSystemAppLaunch;
-(void)_showSysdiagnoseIndication;
-(void)_hideSysdiagnoseIndication;
-(void)_showScreenshotCapturedIndication;
-(BOOL)_validatePresses:(id)arg1 forWindow:(id)arg2 ;
-(void)stopAllActivityForThermal;
-(void)resumeActivityAfterThermal;
-(void)stopAllActivityForOSUpdate;
-(void)resumeActivityAfterOSUpdate;
-(void)sendHIDButtonEventWithUsagePage:(unsigned)arg1 usage:(unsigned)arg2 type:(unsigned long long)arg3 senderID:(unsigned long long)arg4 toApplication:(id)arg5 ;
-(void)client:(id)arg1 setSleepTimeout:(double)arg2 ;
-(void)sleepRequestedByClient:(id)arg1 forReason:(id)arg2 ;
-(void)wakeRequestedByClient:(id)arg1 forReason:(id)arg2 ;
-(void)relaunchBackboarddRequestedByClient:(id)arg1 ;
-(void)relaunchRequestedByClient:(id)arg1 ;
-(void)rebootRequestedByClient:(id)arg1 ;
-(void)activateScreenSaverRequestedByClient:(id)arg1 ;
-(void)deactivateScreenSaverRequestedByClient:(id)arg1 ;
-(void)sendMenuButtonEventRequestedByClient:(id)arg1 ;
-(void)sendEventData:(id)arg1 fromClient:(id)arg2 ;
-(void)userActivityTriggeredForReason:(id)arg1 ;
-(id)appSwitcherWindow;
-(void)activateAppSwitcher;
-(BOOL)airPlayActive;
-(NSTimer *)suppressWakeForHIDEventsTimer;
-(void)setSuppressWakeForHIDEventsTimer:(NSTimer *)arg1 ;
-(PBAppInfoController *)appInfoController;
-(PBProfileServiceDelegate *)profileServiceDelegate;
-(void)setProfileServiceDelegate:(PBProfileServiceDelegate *)arg1 ;
-(PBDialogHiddenAssertion *)singleAppModeDialogAssertion;
-(void)_runSiriBringUpTest:(id)arg1 testOptions:(id)arg2 ;
-(void)_startLaunchTestNamed:(id)arg1 options:(id)arg2 ;
-(void)_startResumeTestNamed:(id)arg1 options:(id)arg2 ;
-(void)_markUserLaunchInitiationTimeForTest:(id)arg1 ;
-(BOOL)_isAppExecutableRunning:(id)arg1 ;
-(void)_retryLaunchTestWithOptions:(id)arg1 ;
-(void)_activateApplication:(id)arg1 suspended:(BOOL)arg2 forTest:(id)arg3 ;
@end

